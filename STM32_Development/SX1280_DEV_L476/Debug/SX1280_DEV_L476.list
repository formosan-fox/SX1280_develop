
SX1280_DEV_L476.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000093f8  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004ec  08009588  08009588  00019588  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009a74  08009a74  000201d4  2**0
                  CONTENTS
  4 .ARM          00000008  08009a74  08009a74  00019a74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009a7c  08009a7c  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08009a7c  08009a7c  00019a7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  08009a84  08009a84  00019a84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  08009a8c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000043c  200001d8  08009c60  000201d8  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20000614  08009c60  00020614  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY
 13 .debug_info   00025835  00000000  00000000  00020247  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00004503  00000000  00000000  00045a7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000014d0  00000000  00000000  00049f80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000102b  00000000  00000000  0004b450  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002d6b9  00000000  00000000  0004c47b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001a58b  00000000  00000000  00079b34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00101374  00000000  00000000  000940bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00006b30  00000000  00000000  00195434  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006b  00000000  00000000  0019bf64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001d8 	.word	0x200001d8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08009570 	.word	0x08009570

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001dc 	.word	0x200001dc
 80001cc:	08009570 	.word	0x08009570

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b970 	b.w	8000f80 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9e08      	ldr	r6, [sp, #32]
 8000cbe:	460d      	mov	r5, r1
 8000cc0:	4604      	mov	r4, r0
 8000cc2:	460f      	mov	r7, r1
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d14a      	bne.n	8000d5e <__udivmoddi4+0xa6>
 8000cc8:	428a      	cmp	r2, r1
 8000cca:	4694      	mov	ip, r2
 8000ccc:	d965      	bls.n	8000d9a <__udivmoddi4+0xe2>
 8000cce:	fab2 f382 	clz	r3, r2
 8000cd2:	b143      	cbz	r3, 8000ce6 <__udivmoddi4+0x2e>
 8000cd4:	fa02 fc03 	lsl.w	ip, r2, r3
 8000cd8:	f1c3 0220 	rsb	r2, r3, #32
 8000cdc:	409f      	lsls	r7, r3
 8000cde:	fa20 f202 	lsr.w	r2, r0, r2
 8000ce2:	4317      	orrs	r7, r2
 8000ce4:	409c      	lsls	r4, r3
 8000ce6:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000cea:	fa1f f58c 	uxth.w	r5, ip
 8000cee:	fbb7 f1fe 	udiv	r1, r7, lr
 8000cf2:	0c22      	lsrs	r2, r4, #16
 8000cf4:	fb0e 7711 	mls	r7, lr, r1, r7
 8000cf8:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000cfc:	fb01 f005 	mul.w	r0, r1, r5
 8000d00:	4290      	cmp	r0, r2
 8000d02:	d90a      	bls.n	8000d1a <__udivmoddi4+0x62>
 8000d04:	eb1c 0202 	adds.w	r2, ip, r2
 8000d08:	f101 37ff 	add.w	r7, r1, #4294967295
 8000d0c:	f080 811c 	bcs.w	8000f48 <__udivmoddi4+0x290>
 8000d10:	4290      	cmp	r0, r2
 8000d12:	f240 8119 	bls.w	8000f48 <__udivmoddi4+0x290>
 8000d16:	3902      	subs	r1, #2
 8000d18:	4462      	add	r2, ip
 8000d1a:	1a12      	subs	r2, r2, r0
 8000d1c:	b2a4      	uxth	r4, r4
 8000d1e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d22:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d26:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000d2a:	fb00 f505 	mul.w	r5, r0, r5
 8000d2e:	42a5      	cmp	r5, r4
 8000d30:	d90a      	bls.n	8000d48 <__udivmoddi4+0x90>
 8000d32:	eb1c 0404 	adds.w	r4, ip, r4
 8000d36:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d3a:	f080 8107 	bcs.w	8000f4c <__udivmoddi4+0x294>
 8000d3e:	42a5      	cmp	r5, r4
 8000d40:	f240 8104 	bls.w	8000f4c <__udivmoddi4+0x294>
 8000d44:	4464      	add	r4, ip
 8000d46:	3802      	subs	r0, #2
 8000d48:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d4c:	1b64      	subs	r4, r4, r5
 8000d4e:	2100      	movs	r1, #0
 8000d50:	b11e      	cbz	r6, 8000d5a <__udivmoddi4+0xa2>
 8000d52:	40dc      	lsrs	r4, r3
 8000d54:	2300      	movs	r3, #0
 8000d56:	e9c6 4300 	strd	r4, r3, [r6]
 8000d5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d5e:	428b      	cmp	r3, r1
 8000d60:	d908      	bls.n	8000d74 <__udivmoddi4+0xbc>
 8000d62:	2e00      	cmp	r6, #0
 8000d64:	f000 80ed 	beq.w	8000f42 <__udivmoddi4+0x28a>
 8000d68:	2100      	movs	r1, #0
 8000d6a:	e9c6 0500 	strd	r0, r5, [r6]
 8000d6e:	4608      	mov	r0, r1
 8000d70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d74:	fab3 f183 	clz	r1, r3
 8000d78:	2900      	cmp	r1, #0
 8000d7a:	d149      	bne.n	8000e10 <__udivmoddi4+0x158>
 8000d7c:	42ab      	cmp	r3, r5
 8000d7e:	d302      	bcc.n	8000d86 <__udivmoddi4+0xce>
 8000d80:	4282      	cmp	r2, r0
 8000d82:	f200 80f8 	bhi.w	8000f76 <__udivmoddi4+0x2be>
 8000d86:	1a84      	subs	r4, r0, r2
 8000d88:	eb65 0203 	sbc.w	r2, r5, r3
 8000d8c:	2001      	movs	r0, #1
 8000d8e:	4617      	mov	r7, r2
 8000d90:	2e00      	cmp	r6, #0
 8000d92:	d0e2      	beq.n	8000d5a <__udivmoddi4+0xa2>
 8000d94:	e9c6 4700 	strd	r4, r7, [r6]
 8000d98:	e7df      	b.n	8000d5a <__udivmoddi4+0xa2>
 8000d9a:	b902      	cbnz	r2, 8000d9e <__udivmoddi4+0xe6>
 8000d9c:	deff      	udf	#255	; 0xff
 8000d9e:	fab2 f382 	clz	r3, r2
 8000da2:	2b00      	cmp	r3, #0
 8000da4:	f040 8090 	bne.w	8000ec8 <__udivmoddi4+0x210>
 8000da8:	1a8a      	subs	r2, r1, r2
 8000daa:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000dae:	fa1f fe8c 	uxth.w	lr, ip
 8000db2:	2101      	movs	r1, #1
 8000db4:	fbb2 f5f7 	udiv	r5, r2, r7
 8000db8:	fb07 2015 	mls	r0, r7, r5, r2
 8000dbc:	0c22      	lsrs	r2, r4, #16
 8000dbe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000dc2:	fb0e f005 	mul.w	r0, lr, r5
 8000dc6:	4290      	cmp	r0, r2
 8000dc8:	d908      	bls.n	8000ddc <__udivmoddi4+0x124>
 8000dca:	eb1c 0202 	adds.w	r2, ip, r2
 8000dce:	f105 38ff 	add.w	r8, r5, #4294967295
 8000dd2:	d202      	bcs.n	8000dda <__udivmoddi4+0x122>
 8000dd4:	4290      	cmp	r0, r2
 8000dd6:	f200 80cb 	bhi.w	8000f70 <__udivmoddi4+0x2b8>
 8000dda:	4645      	mov	r5, r8
 8000ddc:	1a12      	subs	r2, r2, r0
 8000dde:	b2a4      	uxth	r4, r4
 8000de0:	fbb2 f0f7 	udiv	r0, r2, r7
 8000de4:	fb07 2210 	mls	r2, r7, r0, r2
 8000de8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000dec:	fb0e fe00 	mul.w	lr, lr, r0
 8000df0:	45a6      	cmp	lr, r4
 8000df2:	d908      	bls.n	8000e06 <__udivmoddi4+0x14e>
 8000df4:	eb1c 0404 	adds.w	r4, ip, r4
 8000df8:	f100 32ff 	add.w	r2, r0, #4294967295
 8000dfc:	d202      	bcs.n	8000e04 <__udivmoddi4+0x14c>
 8000dfe:	45a6      	cmp	lr, r4
 8000e00:	f200 80bb 	bhi.w	8000f7a <__udivmoddi4+0x2c2>
 8000e04:	4610      	mov	r0, r2
 8000e06:	eba4 040e 	sub.w	r4, r4, lr
 8000e0a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000e0e:	e79f      	b.n	8000d50 <__udivmoddi4+0x98>
 8000e10:	f1c1 0720 	rsb	r7, r1, #32
 8000e14:	408b      	lsls	r3, r1
 8000e16:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e1a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e1e:	fa05 f401 	lsl.w	r4, r5, r1
 8000e22:	fa20 f307 	lsr.w	r3, r0, r7
 8000e26:	40fd      	lsrs	r5, r7
 8000e28:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e2c:	4323      	orrs	r3, r4
 8000e2e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000e32:	fa1f fe8c 	uxth.w	lr, ip
 8000e36:	fb09 5518 	mls	r5, r9, r8, r5
 8000e3a:	0c1c      	lsrs	r4, r3, #16
 8000e3c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000e40:	fb08 f50e 	mul.w	r5, r8, lr
 8000e44:	42a5      	cmp	r5, r4
 8000e46:	fa02 f201 	lsl.w	r2, r2, r1
 8000e4a:	fa00 f001 	lsl.w	r0, r0, r1
 8000e4e:	d90b      	bls.n	8000e68 <__udivmoddi4+0x1b0>
 8000e50:	eb1c 0404 	adds.w	r4, ip, r4
 8000e54:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e58:	f080 8088 	bcs.w	8000f6c <__udivmoddi4+0x2b4>
 8000e5c:	42a5      	cmp	r5, r4
 8000e5e:	f240 8085 	bls.w	8000f6c <__udivmoddi4+0x2b4>
 8000e62:	f1a8 0802 	sub.w	r8, r8, #2
 8000e66:	4464      	add	r4, ip
 8000e68:	1b64      	subs	r4, r4, r5
 8000e6a:	b29d      	uxth	r5, r3
 8000e6c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e70:	fb09 4413 	mls	r4, r9, r3, r4
 8000e74:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000e78:	fb03 fe0e 	mul.w	lr, r3, lr
 8000e7c:	45a6      	cmp	lr, r4
 8000e7e:	d908      	bls.n	8000e92 <__udivmoddi4+0x1da>
 8000e80:	eb1c 0404 	adds.w	r4, ip, r4
 8000e84:	f103 35ff 	add.w	r5, r3, #4294967295
 8000e88:	d26c      	bcs.n	8000f64 <__udivmoddi4+0x2ac>
 8000e8a:	45a6      	cmp	lr, r4
 8000e8c:	d96a      	bls.n	8000f64 <__udivmoddi4+0x2ac>
 8000e8e:	3b02      	subs	r3, #2
 8000e90:	4464      	add	r4, ip
 8000e92:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000e96:	fba3 9502 	umull	r9, r5, r3, r2
 8000e9a:	eba4 040e 	sub.w	r4, r4, lr
 8000e9e:	42ac      	cmp	r4, r5
 8000ea0:	46c8      	mov	r8, r9
 8000ea2:	46ae      	mov	lr, r5
 8000ea4:	d356      	bcc.n	8000f54 <__udivmoddi4+0x29c>
 8000ea6:	d053      	beq.n	8000f50 <__udivmoddi4+0x298>
 8000ea8:	b156      	cbz	r6, 8000ec0 <__udivmoddi4+0x208>
 8000eaa:	ebb0 0208 	subs.w	r2, r0, r8
 8000eae:	eb64 040e 	sbc.w	r4, r4, lr
 8000eb2:	fa04 f707 	lsl.w	r7, r4, r7
 8000eb6:	40ca      	lsrs	r2, r1
 8000eb8:	40cc      	lsrs	r4, r1
 8000eba:	4317      	orrs	r7, r2
 8000ebc:	e9c6 7400 	strd	r7, r4, [r6]
 8000ec0:	4618      	mov	r0, r3
 8000ec2:	2100      	movs	r1, #0
 8000ec4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ec8:	f1c3 0120 	rsb	r1, r3, #32
 8000ecc:	fa02 fc03 	lsl.w	ip, r2, r3
 8000ed0:	fa20 f201 	lsr.w	r2, r0, r1
 8000ed4:	fa25 f101 	lsr.w	r1, r5, r1
 8000ed8:	409d      	lsls	r5, r3
 8000eda:	432a      	orrs	r2, r5
 8000edc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ee0:	fa1f fe8c 	uxth.w	lr, ip
 8000ee4:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ee8:	fb07 1510 	mls	r5, r7, r0, r1
 8000eec:	0c11      	lsrs	r1, r2, #16
 8000eee:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000ef2:	fb00 f50e 	mul.w	r5, r0, lr
 8000ef6:	428d      	cmp	r5, r1
 8000ef8:	fa04 f403 	lsl.w	r4, r4, r3
 8000efc:	d908      	bls.n	8000f10 <__udivmoddi4+0x258>
 8000efe:	eb1c 0101 	adds.w	r1, ip, r1
 8000f02:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f06:	d22f      	bcs.n	8000f68 <__udivmoddi4+0x2b0>
 8000f08:	428d      	cmp	r5, r1
 8000f0a:	d92d      	bls.n	8000f68 <__udivmoddi4+0x2b0>
 8000f0c:	3802      	subs	r0, #2
 8000f0e:	4461      	add	r1, ip
 8000f10:	1b49      	subs	r1, r1, r5
 8000f12:	b292      	uxth	r2, r2
 8000f14:	fbb1 f5f7 	udiv	r5, r1, r7
 8000f18:	fb07 1115 	mls	r1, r7, r5, r1
 8000f1c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f20:	fb05 f10e 	mul.w	r1, r5, lr
 8000f24:	4291      	cmp	r1, r2
 8000f26:	d908      	bls.n	8000f3a <__udivmoddi4+0x282>
 8000f28:	eb1c 0202 	adds.w	r2, ip, r2
 8000f2c:	f105 38ff 	add.w	r8, r5, #4294967295
 8000f30:	d216      	bcs.n	8000f60 <__udivmoddi4+0x2a8>
 8000f32:	4291      	cmp	r1, r2
 8000f34:	d914      	bls.n	8000f60 <__udivmoddi4+0x2a8>
 8000f36:	3d02      	subs	r5, #2
 8000f38:	4462      	add	r2, ip
 8000f3a:	1a52      	subs	r2, r2, r1
 8000f3c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000f40:	e738      	b.n	8000db4 <__udivmoddi4+0xfc>
 8000f42:	4631      	mov	r1, r6
 8000f44:	4630      	mov	r0, r6
 8000f46:	e708      	b.n	8000d5a <__udivmoddi4+0xa2>
 8000f48:	4639      	mov	r1, r7
 8000f4a:	e6e6      	b.n	8000d1a <__udivmoddi4+0x62>
 8000f4c:	4610      	mov	r0, r2
 8000f4e:	e6fb      	b.n	8000d48 <__udivmoddi4+0x90>
 8000f50:	4548      	cmp	r0, r9
 8000f52:	d2a9      	bcs.n	8000ea8 <__udivmoddi4+0x1f0>
 8000f54:	ebb9 0802 	subs.w	r8, r9, r2
 8000f58:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000f5c:	3b01      	subs	r3, #1
 8000f5e:	e7a3      	b.n	8000ea8 <__udivmoddi4+0x1f0>
 8000f60:	4645      	mov	r5, r8
 8000f62:	e7ea      	b.n	8000f3a <__udivmoddi4+0x282>
 8000f64:	462b      	mov	r3, r5
 8000f66:	e794      	b.n	8000e92 <__udivmoddi4+0x1da>
 8000f68:	4640      	mov	r0, r8
 8000f6a:	e7d1      	b.n	8000f10 <__udivmoddi4+0x258>
 8000f6c:	46d0      	mov	r8, sl
 8000f6e:	e77b      	b.n	8000e68 <__udivmoddi4+0x1b0>
 8000f70:	3d02      	subs	r5, #2
 8000f72:	4462      	add	r2, ip
 8000f74:	e732      	b.n	8000ddc <__udivmoddi4+0x124>
 8000f76:	4608      	mov	r0, r1
 8000f78:	e70a      	b.n	8000d90 <__udivmoddi4+0xd8>
 8000f7a:	4464      	add	r4, ip
 8000f7c:	3802      	subs	r0, #2
 8000f7e:	e742      	b.n	8000e06 <__udivmoddi4+0x14e>

08000f80 <__aeabi_idiv0>:
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop

08000f84 <_ZN6SX128x8HalPreTxEv>:
	virtual void HalGpioWrite(GpioPinFunction_t func, uint8_t value) = 0;
	virtual void HalSpiTransfer(uint8_t *buffer_in, const uint8_t *buffer_out, uint16_t size) = 0;
	void HalSpiRead(uint8_t *buffer_in, uint16_t size);
	void HalSpiWrite(const uint8_t *buffer_out, uint16_t size);

	virtual void HalPreTx() {}
 8000f84:	b480      	push	{r7}
 8000f86:	b083      	sub	sp, #12
 8000f88:	af00      	add	r7, sp, #0
 8000f8a:	6078      	str	r0, [r7, #4]
 8000f8c:	bf00      	nop
 8000f8e:	370c      	adds	r7, #12
 8000f90:	46bd      	mov	sp, r7
 8000f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f96:	4770      	bx	lr

08000f98 <_ZN6SX128x8HalPreRxEv>:
	virtual void HalPreRx() {}
 8000f98:	b480      	push	{r7}
 8000f9a:	b083      	sub	sp, #12
 8000f9c:	af00      	add	r7, sp, #0
 8000f9e:	6078      	str	r0, [r7, #4]
 8000fa0:	bf00      	nop
 8000fa2:	370c      	adds	r7, #12
 8000fa4:	46bd      	mov	sp, r7
 8000fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000faa:	4770      	bx	lr

08000fac <_ZN6SX128x9HalPostTxEv>:
	virtual void HalPostTx() {}
 8000fac:	b480      	push	{r7}
 8000fae:	b083      	sub	sp, #12
 8000fb0:	af00      	add	r7, sp, #0
 8000fb2:	6078      	str	r0, [r7, #4]
 8000fb4:	bf00      	nop
 8000fb6:	370c      	adds	r7, #12
 8000fb8:	46bd      	mov	sp, r7
 8000fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fbe:	4770      	bx	lr

08000fc0 <_ZN6SX128x9HalPostRxEv>:
	virtual void HalPostRx() {}
 8000fc0:	b480      	push	{r7}
 8000fc2:	b083      	sub	sp, #12
 8000fc4:	af00      	add	r7, sp, #0
 8000fc6:	6078      	str	r0, [r7, #4]
 8000fc8:	bf00      	nop
 8000fca:	370c      	adds	r7, #12
 8000fcc:	46bd      	mov	sp, r7
 8000fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fd2:	4770      	bx	lr

08000fd4 <_ZN6SX128x12GetDioStatusEv>:
	virtual void WriteRegister(uint16_t address, uint8_t value);
	virtual void ReadRegister(uint16_t address, uint8_t *buffer, uint16_t size);
	virtual uint8_t ReadRegister(uint16_t address);
	virtual void WriteBuffer(uint8_t offset, uint8_t *buffer, uint8_t size);
	virtual void ReadBuffer(uint8_t offset, uint8_t *buffer, uint8_t size);
	virtual uint8_t GetDioStatus(void) {
 8000fd4:	b480      	push	{r7}
 8000fd6:	b083      	sub	sp, #12
 8000fd8:	af00      	add	r7, sp, #0
 8000fda:	6078      	str	r0, [r7, #4]
		return 0;
 8000fdc:	2300      	movs	r3, #0
	}
 8000fde:	4618      	mov	r0, r3
 8000fe0:	370c      	adds	r7, #12
 8000fe2:	46bd      	mov	sp, r7
 8000fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe8:	4770      	bx	lr

08000fea <_ZN6SX128x18GetFirmwareVersionEv>:
//		WriteRegister( RadioRegsInit[i].Addr, RadioRegsInit[i].Value );
//	}
//}

uint16_t SX128x::GetFirmwareVersion(void )
{
 8000fea:	b590      	push	{r4, r7, lr}
 8000fec:	b083      	sub	sp, #12
 8000fee:	af00      	add	r7, sp, #0
 8000ff0:	6078      	str	r0, [r7, #4]
	return( ( ( ReadRegister( REG_LR_FIRMWARE_VERSION_MSB ) ) << 8 ) | ( ReadRegister( REG_LR_FIRMWARE_VERSION_MSB + 1 ) ) );
 8000ff2:	687b      	ldr	r3, [r7, #4]
 8000ff4:	681b      	ldr	r3, [r3, #0]
 8000ff6:	3344      	adds	r3, #68	; 0x44
 8000ff8:	681b      	ldr	r3, [r3, #0]
 8000ffa:	f240 1153 	movw	r1, #339	; 0x153
 8000ffe:	6878      	ldr	r0, [r7, #4]
 8001000:	4798      	blx	r3
 8001002:	4603      	mov	r3, r0
 8001004:	021b      	lsls	r3, r3, #8
 8001006:	b21c      	sxth	r4, r3
 8001008:	687b      	ldr	r3, [r7, #4]
 800100a:	681b      	ldr	r3, [r3, #0]
 800100c:	3344      	adds	r3, #68	; 0x44
 800100e:	681b      	ldr	r3, [r3, #0]
 8001010:	f44f 71aa 	mov.w	r1, #340	; 0x154
 8001014:	6878      	ldr	r0, [r7, #4]
 8001016:	4798      	blx	r3
 8001018:	4603      	mov	r3, r0
 800101a:	b21b      	sxth	r3, r3
 800101c:	4323      	orrs	r3, r4
 800101e:	b21b      	sxth	r3, r3
 8001020:	b29b      	uxth	r3, r3
}
 8001022:	4618      	mov	r0, r3
 8001024:	370c      	adds	r7, #12
 8001026:	46bd      	mov	sp, r7
 8001028:	bd90      	pop	{r4, r7, pc}

0800102a <_ZN6SX128x9GetStatusEv>:

SX128x::RadioStatus_t SX128x::GetStatus(void )
{
 800102a:	b590      	push	{r4, r7, lr}
 800102c:	b085      	sub	sp, #20
 800102e:	af00      	add	r7, sp, #0
 8001030:	6078      	str	r0, [r7, #4]
	uint8_t stat = 0;
 8001032:	2300      	movs	r3, #0
 8001034:	73fb      	strb	r3, [r7, #15]
	RadioStatus_t status;

	ReadCommand( RADIO_GET_STATUS, ( uint8_t * )&stat, 1 );
 8001036:	687b      	ldr	r3, [r7, #4]
 8001038:	681b      	ldr	r3, [r3, #0]
 800103a:	3334      	adds	r3, #52	; 0x34
 800103c:	681c      	ldr	r4, [r3, #0]
 800103e:	f107 020f 	add.w	r2, r7, #15
 8001042:	2301      	movs	r3, #1
 8001044:	21c0      	movs	r1, #192	; 0xc0
 8001046:	6878      	ldr	r0, [r7, #4]
 8001048:	47a0      	blx	r4
	status.Value = stat;
 800104a:	7bfb      	ldrb	r3, [r7, #15]
 800104c:	733b      	strb	r3, [r7, #12]
	return( status );
 800104e:	7b3b      	ldrb	r3, [r7, #12]
}
 8001050:	4618      	mov	r0, r3
 8001052:	3714      	adds	r7, #20
 8001054:	46bd      	mov	sp, r7
 8001056:	bd90      	pop	{r4, r7, pc}

08001058 <_ZN6SX128x9GetOpModeEv>:

SX128x::RadioOperatingModes_t SX128x::GetOpMode(void )
{
 8001058:	b480      	push	{r7}
 800105a:	b083      	sub	sp, #12
 800105c:	af00      	add	r7, sp, #0
 800105e:	6078      	str	r0, [r7, #4]
	return( OperatingMode );
 8001060:	687b      	ldr	r3, [r7, #4]
 8001062:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
}
 8001066:	4618      	mov	r0, r3
 8001068:	370c      	adds	r7, #12
 800106a:	46bd      	mov	sp, r7
 800106c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001070:	4770      	bx	lr

08001072 <_ZN6SX128x10SetStandbyENS_19RadioStandbyModes_tE>:
	OperatingMode = MODE_SLEEP;
	WriteCommand( RADIO_SET_SLEEP, &sleep, 1 );
}

void SX128x::SetStandby(RadioStandbyModes_t standbyConfig )
{
 8001072:	b590      	push	{r4, r7, lr}
 8001074:	b083      	sub	sp, #12
 8001076:	af00      	add	r7, sp, #0
 8001078:	6078      	str	r0, [r7, #4]
 800107a:	460b      	mov	r3, r1
 800107c:	70fb      	strb	r3, [r7, #3]
	// std::lock_guard<std::mutex> lg(IOLock2);

	WriteCommand( RADIO_SET_STANDBY, ( uint8_t* )&standbyConfig, 1 );
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	681b      	ldr	r3, [r3, #0]
 8001082:	3330      	adds	r3, #48	; 0x30
 8001084:	681c      	ldr	r4, [r3, #0]
 8001086:	1cfa      	adds	r2, r7, #3
 8001088:	2301      	movs	r3, #1
 800108a:	2180      	movs	r1, #128	; 0x80
 800108c:	6878      	ldr	r0, [r7, #4]
 800108e:	47a0      	blx	r4
	if (standbyConfig == STDBY_RC )
 8001090:	78fb      	ldrb	r3, [r7, #3]
 8001092:	2b00      	cmp	r3, #0
 8001094:	d104      	bne.n	80010a0 <_ZN6SX128x10SetStandbyENS_19RadioStandbyModes_tE+0x2e>
	{
		OperatingMode = MODE_STDBY_RC;
 8001096:	687b      	ldr	r3, [r7, #4]
 8001098:	2202      	movs	r2, #2
 800109a:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
	}
	else
	{
		OperatingMode = MODE_STDBY_XOSC;
	}
}
 800109e:	e003      	b.n	80010a8 <_ZN6SX128x10SetStandbyENS_19RadioStandbyModes_tE+0x36>
		OperatingMode = MODE_STDBY_XOSC;
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	2203      	movs	r2, #3
 80010a4:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
}
 80010a8:	bf00      	nop
 80010aa:	370c      	adds	r7, #12
 80010ac:	46bd      	mov	sp, r7
 80010ae:	bd90      	pop	{r4, r7, pc}

080010b0 <_ZN6SX128x5SetTxENS_10TickTime_sE>:
	WriteCommand( RADIO_SET_FS, 0, 0 );
	OperatingMode = MODE_FS;
}

void SX128x::SetTx(TickTime_t timeout )
{
 80010b0:	b590      	push	{r4, r7, lr}
 80010b2:	b085      	sub	sp, #20
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	6078      	str	r0, [r7, #4]
 80010b8:	6039      	str	r1, [r7, #0]
	// std::lock_guard<std::mutex> lg(IOLock2);

	uint8_t buf[3];
	buf[0] = timeout.PeriodBase;
 80010ba:	783b      	ldrb	r3, [r7, #0]
 80010bc:	733b      	strb	r3, [r7, #12]
	buf[1] = ( uint8_t )( ( timeout.PeriodBaseCount >> 8 ) & 0x00FF );
 80010be:	887b      	ldrh	r3, [r7, #2]
 80010c0:	0a1b      	lsrs	r3, r3, #8
 80010c2:	b29b      	uxth	r3, r3
 80010c4:	b2db      	uxtb	r3, r3
 80010c6:	737b      	strb	r3, [r7, #13]
	buf[2] = ( uint8_t )( timeout.PeriodBaseCount & 0x00FF );
 80010c8:	887b      	ldrh	r3, [r7, #2]
 80010ca:	b2db      	uxtb	r3, r3
 80010cc:	73bb      	strb	r3, [r7, #14]

	ClearIrqStatus( IRQ_RADIO_ALL );
 80010ce:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80010d2:	6878      	ldr	r0, [r7, #4]
 80010d4:	f000 fa31 	bl	800153a <_ZN6SX128x14ClearIrqStatusEt>
//	if (GetPacketType( true ) == PACKET_TYPE_RANGING )
//	{
////		SetRangingRole( RADIO_RANGING_ROLE_MASTER );
//	}

	HalPostRx();
 80010d8:	687b      	ldr	r3, [r7, #4]
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	3318      	adds	r3, #24
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	6878      	ldr	r0, [r7, #4]
 80010e2:	4798      	blx	r3
	HalPreTx();
 80010e4:	687b      	ldr	r3, [r7, #4]
 80010e6:	681b      	ldr	r3, [r3, #0]
 80010e8:	330c      	adds	r3, #12
 80010ea:	681b      	ldr	r3, [r3, #0]
 80010ec:	6878      	ldr	r0, [r7, #4]
 80010ee:	4798      	blx	r3
	WriteCommand( RADIO_SET_TX, buf, 3 );
 80010f0:	687b      	ldr	r3, [r7, #4]
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	3330      	adds	r3, #48	; 0x30
 80010f6:	681c      	ldr	r4, [r3, #0]
 80010f8:	f107 020c 	add.w	r2, r7, #12
 80010fc:	2303      	movs	r3, #3
 80010fe:	2183      	movs	r1, #131	; 0x83
 8001100:	6878      	ldr	r0, [r7, #4]
 8001102:	47a0      	blx	r4
	OperatingMode = MODE_TX;
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	2206      	movs	r2, #6
 8001108:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
}
 800110c:	bf00      	nop
 800110e:	3714      	adds	r7, #20
 8001110:	46bd      	mov	sp, r7
 8001112:	bd90      	pop	{r4, r7, pc}

08001114 <_ZN6SX128x13SetPacketTypeENS_18RadioPacketTypes_tE>:
	HalPreTx();
	WriteCommand( RADIO_SET_TXCONTINUOUSPREAMBLE, 0, 0 );
}

void SX128x::SetPacketType(RadioPacketTypes_t packetType )
{
 8001114:	b590      	push	{r4, r7, lr}
 8001116:	b083      	sub	sp, #12
 8001118:	af00      	add	r7, sp, #0
 800111a:	6078      	str	r0, [r7, #4]
 800111c:	460b      	mov	r3, r1
 800111e:	70fb      	strb	r3, [r7, #3]
	// Save packet type internally to avoid questioning the radio
	this->PacketType = packetType;
 8001120:	78fa      	ldrb	r2, [r7, #3]
 8001122:	687b      	ldr	r3, [r7, #4]
 8001124:	f883 20a9 	strb.w	r2, [r3, #169]	; 0xa9

	WriteCommand( RADIO_SET_PACKETTYPE, ( uint8_t* )&packetType, 1 );
 8001128:	687b      	ldr	r3, [r7, #4]
 800112a:	681b      	ldr	r3, [r3, #0]
 800112c:	3330      	adds	r3, #48	; 0x30
 800112e:	681c      	ldr	r4, [r3, #0]
 8001130:	1cfa      	adds	r2, r7, #3
 8001132:	2301      	movs	r3, #1
 8001134:	218a      	movs	r1, #138	; 0x8a
 8001136:	6878      	ldr	r0, [r7, #4]
 8001138:	47a0      	blx	r4
}
 800113a:	bf00      	nop
 800113c:	370c      	adds	r7, #12
 800113e:	46bd      	mov	sp, r7
 8001140:	bd90      	pop	{r4, r7, pc}

08001142 <_ZN6SX128x14SetRfFrequencyEm>:
	}
	return packetType;
}

void SX128x::SetRfFrequency(uint32_t rfFrequency )
{
 8001142:	b590      	push	{r4, r7, lr}
 8001144:	b085      	sub	sp, #20
 8001146:	af00      	add	r7, sp, #0
 8001148:	6078      	str	r0, [r7, #4]
 800114a:	6039      	str	r1, [r7, #0]
	uint8_t buf[3];
	uint32_t freq = 0;
 800114c:	2300      	movs	r3, #0
 800114e:	60fb      	str	r3, [r7, #12]

	freq = ( uint32_t )( ( double )rfFrequency / ( double )FREQ_STEP );
 8001150:	6838      	ldr	r0, [r7, #0]
 8001152:	f7ff f9d7 	bl	8000504 <__aeabi_ui2d>
 8001156:	687b      	ldr	r3, [r7, #4]
 8001158:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800115c:	f7ff fb76 	bl	800084c <__aeabi_ddiv>
 8001160:	4602      	mov	r2, r0
 8001162:	460b      	mov	r3, r1
 8001164:	4610      	mov	r0, r2
 8001166:	4619      	mov	r1, r3
 8001168:	f7ff fd1e 	bl	8000ba8 <__aeabi_d2uiz>
 800116c:	4603      	mov	r3, r0
 800116e:	60fb      	str	r3, [r7, #12]
	buf[0] = ( uint8_t )( ( freq >> 16 ) & 0xFF );
 8001170:	68fb      	ldr	r3, [r7, #12]
 8001172:	0c1b      	lsrs	r3, r3, #16
 8001174:	b2db      	uxtb	r3, r3
 8001176:	723b      	strb	r3, [r7, #8]
	buf[1] = ( uint8_t )( ( freq >> 8 ) & 0xFF );
 8001178:	68fb      	ldr	r3, [r7, #12]
 800117a:	0a1b      	lsrs	r3, r3, #8
 800117c:	b2db      	uxtb	r3, r3
 800117e:	727b      	strb	r3, [r7, #9]
	buf[2] = ( uint8_t )( freq & 0xFF );
 8001180:	68fb      	ldr	r3, [r7, #12]
 8001182:	b2db      	uxtb	r3, r3
 8001184:	72bb      	strb	r3, [r7, #10]
	WriteCommand( RADIO_SET_RFFREQUENCY, buf, 3 );
 8001186:	687b      	ldr	r3, [r7, #4]
 8001188:	681b      	ldr	r3, [r3, #0]
 800118a:	3330      	adds	r3, #48	; 0x30
 800118c:	681c      	ldr	r4, [r3, #0]
 800118e:	f107 0208 	add.w	r2, r7, #8
 8001192:	2303      	movs	r3, #3
 8001194:	2186      	movs	r1, #134	; 0x86
 8001196:	6878      	ldr	r0, [r7, #4]
 8001198:	47a0      	blx	r4
}
 800119a:	bf00      	nop
 800119c:	3714      	adds	r7, #20
 800119e:	46bd      	mov	sp, r7
 80011a0:	bd90      	pop	{r4, r7, pc}

080011a2 <_ZN6SX128x11SetTxParamsEaNS_16RadioRampTimes_tE>:

void SX128x::SetTxParams(int8_t power, RadioRampTimes_t rampTime )
{
 80011a2:	b590      	push	{r4, r7, lr}
 80011a4:	b085      	sub	sp, #20
 80011a6:	af00      	add	r7, sp, #0
 80011a8:	6078      	str	r0, [r7, #4]
 80011aa:	460b      	mov	r3, r1
 80011ac:	70fb      	strb	r3, [r7, #3]
 80011ae:	4613      	mov	r3, r2
 80011b0:	70bb      	strb	r3, [r7, #2]
	uint8_t buf[2];

	// The power value to send on SPI/UART is in the range [0..31] and the
	// physical output power is in the range [-18..13]dBm
	buf[0] = power + 18;
 80011b2:	78fb      	ldrb	r3, [r7, #3]
 80011b4:	3312      	adds	r3, #18
 80011b6:	b2db      	uxtb	r3, r3
 80011b8:	733b      	strb	r3, [r7, #12]
	buf[1] = ( uint8_t )rampTime;
 80011ba:	78bb      	ldrb	r3, [r7, #2]
 80011bc:	737b      	strb	r3, [r7, #13]
	WriteCommand( RADIO_SET_TXPARAMS, buf, 2 );
 80011be:	687b      	ldr	r3, [r7, #4]
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	3330      	adds	r3, #48	; 0x30
 80011c4:	681c      	ldr	r4, [r3, #0]
 80011c6:	f107 020c 	add.w	r2, r7, #12
 80011ca:	2302      	movs	r3, #2
 80011cc:	218e      	movs	r1, #142	; 0x8e
 80011ce:	6878      	ldr	r0, [r7, #4]
 80011d0:	47a0      	blx	r4
}
 80011d2:	bf00      	nop
 80011d4:	3714      	adds	r7, #20
 80011d6:	46bd      	mov	sp, r7
 80011d8:	bd90      	pop	{r4, r7, pc}

080011da <_ZN6SX128x22SetBufferBaseAddressesEhh>:
	WriteCommand( RADIO_SET_CADPARAMS, ( uint8_t* )&cadSymbolNum, 1 );
	OperatingMode = MODE_CAD;
}

void SX128x::SetBufferBaseAddresses(uint8_t txBaseAddress, uint8_t rxBaseAddress )
{
 80011da:	b590      	push	{r4, r7, lr}
 80011dc:	b085      	sub	sp, #20
 80011de:	af00      	add	r7, sp, #0
 80011e0:	6078      	str	r0, [r7, #4]
 80011e2:	460b      	mov	r3, r1
 80011e4:	70fb      	strb	r3, [r7, #3]
 80011e6:	4613      	mov	r3, r2
 80011e8:	70bb      	strb	r3, [r7, #2]
	uint8_t buf[2];

	buf[0] = txBaseAddress;
 80011ea:	78fb      	ldrb	r3, [r7, #3]
 80011ec:	733b      	strb	r3, [r7, #12]
	buf[1] = rxBaseAddress;
 80011ee:	78bb      	ldrb	r3, [r7, #2]
 80011f0:	737b      	strb	r3, [r7, #13]
	WriteCommand( RADIO_SET_BUFFERBASEADDRESS, buf, 2 );
 80011f2:	687b      	ldr	r3, [r7, #4]
 80011f4:	681b      	ldr	r3, [r3, #0]
 80011f6:	3330      	adds	r3, #48	; 0x30
 80011f8:	681c      	ldr	r4, [r3, #0]
 80011fa:	f107 020c 	add.w	r2, r7, #12
 80011fe:	2302      	movs	r3, #2
 8001200:	218f      	movs	r1, #143	; 0x8f
 8001202:	6878      	ldr	r0, [r7, #4]
 8001204:	47a0      	blx	r4
}
 8001206:	bf00      	nop
 8001208:	3714      	adds	r7, #20
 800120a:	46bd      	mov	sp, r7
 800120c:	bd90      	pop	{r4, r7, pc}
	...

08001210 <_ZN6SX128x19SetModulationParamsERKNS_18ModulationParams_tE>:

void SX128x::SetModulationParams(const ModulationParams_t& modParams )
{
 8001210:	b590      	push	{r4, r7, lr}
 8001212:	b085      	sub	sp, #20
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
 8001218:	6039      	str	r1, [r7, #0]
	uint8_t buf[3];

	// Check if required configuration corresponds to the stored packet type
	// If not, silently update radio packet type
	if (this->PacketType != modParams.PacketType )
 800121a:	687b      	ldr	r3, [r7, #4]
 800121c:	f893 20a9 	ldrb.w	r2, [r3, #169]	; 0xa9
 8001220:	683b      	ldr	r3, [r7, #0]
 8001222:	781b      	ldrb	r3, [r3, #0]
 8001224:	429a      	cmp	r2, r3
 8001226:	d005      	beq.n	8001234 <_ZN6SX128x19SetModulationParamsERKNS_18ModulationParams_tE+0x24>
	{
		this->SetPacketType( modParams.PacketType );
 8001228:	683b      	ldr	r3, [r7, #0]
 800122a:	781b      	ldrb	r3, [r3, #0]
 800122c:	4619      	mov	r1, r3
 800122e:	6878      	ldr	r0, [r7, #4]
 8001230:	f7ff ff70 	bl	8001114 <_ZN6SX128x13SetPacketTypeENS_18RadioPacketTypes_tE>
	}

	switch( modParams.PacketType )
 8001234:	683b      	ldr	r3, [r7, #0]
 8001236:	781b      	ldrb	r3, [r3, #0]
 8001238:	2b0f      	cmp	r3, #15
 800123a:	d857      	bhi.n	80012ec <_ZN6SX128x19SetModulationParamsERKNS_18ModulationParams_tE+0xdc>
 800123c:	a201      	add	r2, pc, #4	; (adr r2, 8001244 <_ZN6SX128x19SetModulationParamsERKNS_18ModulationParams_tE+0x34>)
 800123e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001242:	bf00      	nop
 8001244:	08001285 	.word	0x08001285
 8001248:	08001299 	.word	0x08001299
 800124c:	08001299 	.word	0x08001299
 8001250:	080012b7 	.word	0x080012b7
 8001254:	080012cb 	.word	0x080012cb
 8001258:	080012ed 	.word	0x080012ed
 800125c:	080012ed 	.word	0x080012ed
 8001260:	080012ed 	.word	0x080012ed
 8001264:	080012ed 	.word	0x080012ed
 8001268:	080012ed 	.word	0x080012ed
 800126c:	080012ed 	.word	0x080012ed
 8001270:	080012ed 	.word	0x080012ed
 8001274:	080012ed 	.word	0x080012ed
 8001278:	080012ed 	.word	0x080012ed
 800127c:	080012ed 	.word	0x080012ed
 8001280:	080012df 	.word	0x080012df
	{
		case PACKET_TYPE_GFSK:
			buf[0] = modParams.Params.Gfsk.BitrateBandwidth;
 8001284:	683b      	ldr	r3, [r7, #0]
 8001286:	785b      	ldrb	r3, [r3, #1]
 8001288:	733b      	strb	r3, [r7, #12]
			buf[1] = modParams.Params.Gfsk.ModulationIndex;
 800128a:	683b      	ldr	r3, [r7, #0]
 800128c:	789b      	ldrb	r3, [r3, #2]
 800128e:	737b      	strb	r3, [r7, #13]
			buf[2] = modParams.Params.Gfsk.ModulationShaping;
 8001290:	683b      	ldr	r3, [r7, #0]
 8001292:	78db      	ldrb	r3, [r3, #3]
 8001294:	73bb      	strb	r3, [r7, #14]
			break;
 8001296:	e029      	b.n	80012ec <_ZN6SX128x19SetModulationParamsERKNS_18ModulationParams_tE+0xdc>
		case PACKET_TYPE_LORA:
		case PACKET_TYPE_RANGING:
			buf[0] = modParams.Params.LoRa.SpreadingFactor;
 8001298:	683b      	ldr	r3, [r7, #0]
 800129a:	791b      	ldrb	r3, [r3, #4]
 800129c:	733b      	strb	r3, [r7, #12]
			buf[1] = modParams.Params.LoRa.Bandwidth;
 800129e:	683b      	ldr	r3, [r7, #0]
 80012a0:	795b      	ldrb	r3, [r3, #5]
 80012a2:	737b      	strb	r3, [r7, #13]
			buf[2] = modParams.Params.LoRa.CodingRate;
 80012a4:	683b      	ldr	r3, [r7, #0]
 80012a6:	799b      	ldrb	r3, [r3, #6]
 80012a8:	73bb      	strb	r3, [r7, #14]
			this->LoRaBandwidth = modParams.Params.LoRa.Bandwidth;
 80012aa:	683b      	ldr	r3, [r7, #0]
 80012ac:	795a      	ldrb	r2, [r3, #5]
 80012ae:	687b      	ldr	r3, [r7, #4]
 80012b0:	f883 20aa 	strb.w	r2, [r3, #170]	; 0xaa
			break;
 80012b4:	e01a      	b.n	80012ec <_ZN6SX128x19SetModulationParamsERKNS_18ModulationParams_tE+0xdc>
		case PACKET_TYPE_FLRC:
			buf[0] = modParams.Params.Flrc.BitrateBandwidth;
 80012b6:	683b      	ldr	r3, [r7, #0]
 80012b8:	79db      	ldrb	r3, [r3, #7]
 80012ba:	733b      	strb	r3, [r7, #12]
			buf[1] = modParams.Params.Flrc.CodingRate;
 80012bc:	683b      	ldr	r3, [r7, #0]
 80012be:	7a1b      	ldrb	r3, [r3, #8]
 80012c0:	737b      	strb	r3, [r7, #13]
			buf[2] = modParams.Params.Flrc.ModulationShaping;
 80012c2:	683b      	ldr	r3, [r7, #0]
 80012c4:	7a5b      	ldrb	r3, [r3, #9]
 80012c6:	73bb      	strb	r3, [r7, #14]
			break;
 80012c8:	e010      	b.n	80012ec <_ZN6SX128x19SetModulationParamsERKNS_18ModulationParams_tE+0xdc>
		case PACKET_TYPE_BLE:
			buf[0] = modParams.Params.Ble.BitrateBandwidth;
 80012ca:	683b      	ldr	r3, [r7, #0]
 80012cc:	7a9b      	ldrb	r3, [r3, #10]
 80012ce:	733b      	strb	r3, [r7, #12]
			buf[1] = modParams.Params.Ble.ModulationIndex;
 80012d0:	683b      	ldr	r3, [r7, #0]
 80012d2:	7adb      	ldrb	r3, [r3, #11]
 80012d4:	737b      	strb	r3, [r7, #13]
			buf[2] = modParams.Params.Ble.ModulationShaping;
 80012d6:	683b      	ldr	r3, [r7, #0]
 80012d8:	7b1b      	ldrb	r3, [r3, #12]
 80012da:	73bb      	strb	r3, [r7, #14]
			break;
 80012dc:	e006      	b.n	80012ec <_ZN6SX128x19SetModulationParamsERKNS_18ModulationParams_tE+0xdc>
		case PACKET_TYPE_NONE:
			buf[0] = 0;
 80012de:	2300      	movs	r3, #0
 80012e0:	733b      	strb	r3, [r7, #12]
			buf[1] = 0;
 80012e2:	2300      	movs	r3, #0
 80012e4:	737b      	strb	r3, [r7, #13]
			buf[2] = 0;
 80012e6:	2300      	movs	r3, #0
 80012e8:	73bb      	strb	r3, [r7, #14]
			break;
 80012ea:	bf00      	nop
	}
	WriteCommand( RADIO_SET_MODULATIONPARAMS, buf, 3 );
 80012ec:	687b      	ldr	r3, [r7, #4]
 80012ee:	681b      	ldr	r3, [r3, #0]
 80012f0:	3330      	adds	r3, #48	; 0x30
 80012f2:	681c      	ldr	r4, [r3, #0]
 80012f4:	f107 020c 	add.w	r2, r7, #12
 80012f8:	2303      	movs	r3, #3
 80012fa:	218b      	movs	r1, #139	; 0x8b
 80012fc:	6878      	ldr	r0, [r7, #4]
 80012fe:	47a0      	blx	r4
	CurrentModParams = modParams;
 8001300:	687b      	ldr	r3, [r7, #4]
 8001302:	683a      	ldr	r2, [r7, #0]
 8001304:	33ab      	adds	r3, #171	; 0xab
 8001306:	6814      	ldr	r4, [r2, #0]
 8001308:	6850      	ldr	r0, [r2, #4]
 800130a:	6891      	ldr	r1, [r2, #8]
 800130c:	601c      	str	r4, [r3, #0]
 800130e:	6058      	str	r0, [r3, #4]
 8001310:	6099      	str	r1, [r3, #8]
 8001312:	7b12      	ldrb	r2, [r2, #12]
 8001314:	731a      	strb	r2, [r3, #12]
}
 8001316:	bf00      	nop
 8001318:	3714      	adds	r7, #20
 800131a:	46bd      	mov	sp, r7
 800131c:	bd90      	pop	{r4, r7, pc}
 800131e:	bf00      	nop

08001320 <_ZN6SX128x15SetPacketParamsERKNS_14PacketParams_tE>:

void SX128x::SetPacketParams(const PacketParams_t& packetParams)
{
 8001320:	b5b0      	push	{r4, r5, r7, lr}
 8001322:	b084      	sub	sp, #16
 8001324:	af00      	add	r7, sp, #0
 8001326:	6078      	str	r0, [r7, #4]
 8001328:	6039      	str	r1, [r7, #0]
	uint8_t buf[7];
	// Check if required configuration corresponds to the stored packet type
	// If not, silently update radio packet type
	if (this->PacketType != packetParams.PacketType )
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	f893 20a9 	ldrb.w	r2, [r3, #169]	; 0xa9
 8001330:	683b      	ldr	r3, [r7, #0]
 8001332:	781b      	ldrb	r3, [r3, #0]
 8001334:	429a      	cmp	r2, r3
 8001336:	d005      	beq.n	8001344 <_ZN6SX128x15SetPacketParamsERKNS_14PacketParams_tE+0x24>
	{
		this->SetPacketType( packetParams.PacketType );
 8001338:	683b      	ldr	r3, [r7, #0]
 800133a:	781b      	ldrb	r3, [r3, #0]
 800133c:	4619      	mov	r1, r3
 800133e:	6878      	ldr	r0, [r7, #4]
 8001340:	f7ff fee8 	bl	8001114 <_ZN6SX128x13SetPacketTypeENS_18RadioPacketTypes_tE>
	}

	switch( packetParams.PacketType )
 8001344:	683b      	ldr	r3, [r7, #0]
 8001346:	781b      	ldrb	r3, [r3, #0]
 8001348:	2b0f      	cmp	r3, #15
 800134a:	f200 8085 	bhi.w	8001458 <_ZN6SX128x15SetPacketParamsERKNS_14PacketParams_tE+0x138>
 800134e:	a201      	add	r2, pc, #4	; (adr r2, 8001354 <_ZN6SX128x15SetPacketParamsERKNS_14PacketParams_tE+0x34>)
 8001350:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001354:	08001395 	.word	0x08001395
 8001358:	080013c1 	.word	0x080013c1
 800135c:	080013c1 	.word	0x080013c1
 8001360:	080013e9 	.word	0x080013e9
 8001364:	08001415 	.word	0x08001415
 8001368:	08001459 	.word	0x08001459
 800136c:	08001459 	.word	0x08001459
 8001370:	08001459 	.word	0x08001459
 8001374:	08001459 	.word	0x08001459
 8001378:	08001459 	.word	0x08001459
 800137c:	08001459 	.word	0x08001459
 8001380:	08001459 	.word	0x08001459
 8001384:	08001459 	.word	0x08001459
 8001388:	08001459 	.word	0x08001459
 800138c:	08001459 	.word	0x08001459
 8001390:	0800143b 	.word	0x0800143b
	{
		case PACKET_TYPE_GFSK:
			buf[0] = packetParams.Params.Gfsk.PreambleLength;
 8001394:	683b      	ldr	r3, [r7, #0]
 8001396:	785b      	ldrb	r3, [r3, #1]
 8001398:	723b      	strb	r3, [r7, #8]
			buf[1] = packetParams.Params.Gfsk.SyncWordLength;
 800139a:	683b      	ldr	r3, [r7, #0]
 800139c:	789b      	ldrb	r3, [r3, #2]
 800139e:	727b      	strb	r3, [r7, #9]
			buf[2] = packetParams.Params.Gfsk.SyncWordMatch;
 80013a0:	683b      	ldr	r3, [r7, #0]
 80013a2:	78db      	ldrb	r3, [r3, #3]
 80013a4:	72bb      	strb	r3, [r7, #10]
			buf[3] = packetParams.Params.Gfsk.HeaderType;
 80013a6:	683b      	ldr	r3, [r7, #0]
 80013a8:	791b      	ldrb	r3, [r3, #4]
 80013aa:	72fb      	strb	r3, [r7, #11]
			buf[4] = packetParams.Params.Gfsk.PayloadLength;
 80013ac:	683b      	ldr	r3, [r7, #0]
 80013ae:	795b      	ldrb	r3, [r3, #5]
 80013b0:	733b      	strb	r3, [r7, #12]
			buf[5] = packetParams.Params.Gfsk.CrcLength;
 80013b2:	683b      	ldr	r3, [r7, #0]
 80013b4:	799b      	ldrb	r3, [r3, #6]
 80013b6:	737b      	strb	r3, [r7, #13]
			buf[6] = packetParams.Params.Gfsk.Whitening;
 80013b8:	683b      	ldr	r3, [r7, #0]
 80013ba:	79db      	ldrb	r3, [r3, #7]
 80013bc:	73bb      	strb	r3, [r7, #14]
			break;
 80013be:	e04b      	b.n	8001458 <_ZN6SX128x15SetPacketParamsERKNS_14PacketParams_tE+0x138>
		case PACKET_TYPE_LORA:
		case PACKET_TYPE_RANGING:
			buf[0] = packetParams.Params.LoRa.PreambleLength;
 80013c0:	683b      	ldr	r3, [r7, #0]
 80013c2:	7a1b      	ldrb	r3, [r3, #8]
 80013c4:	723b      	strb	r3, [r7, #8]
			buf[1] = packetParams.Params.LoRa.HeaderType;
 80013c6:	683b      	ldr	r3, [r7, #0]
 80013c8:	7a5b      	ldrb	r3, [r3, #9]
 80013ca:	727b      	strb	r3, [r7, #9]
			buf[2] = packetParams.Params.LoRa.PayloadLength;
 80013cc:	683b      	ldr	r3, [r7, #0]
 80013ce:	7a9b      	ldrb	r3, [r3, #10]
 80013d0:	72bb      	strb	r3, [r7, #10]
			buf[3] = packetParams.Params.LoRa.Crc;
 80013d2:	683b      	ldr	r3, [r7, #0]
 80013d4:	7adb      	ldrb	r3, [r3, #11]
 80013d6:	72fb      	strb	r3, [r7, #11]
			buf[4] = packetParams.Params.LoRa.InvertIQ;
 80013d8:	683b      	ldr	r3, [r7, #0]
 80013da:	7b1b      	ldrb	r3, [r3, #12]
 80013dc:	733b      	strb	r3, [r7, #12]
			buf[5] = 0;
 80013de:	2300      	movs	r3, #0
 80013e0:	737b      	strb	r3, [r7, #13]
			buf[6] = 0;
 80013e2:	2300      	movs	r3, #0
 80013e4:	73bb      	strb	r3, [r7, #14]
			break;
 80013e6:	e037      	b.n	8001458 <_ZN6SX128x15SetPacketParamsERKNS_14PacketParams_tE+0x138>
		case PACKET_TYPE_FLRC:
			buf[0] = packetParams.Params.Flrc.PreambleLength;
 80013e8:	683b      	ldr	r3, [r7, #0]
 80013ea:	7b5b      	ldrb	r3, [r3, #13]
 80013ec:	723b      	strb	r3, [r7, #8]
			buf[1] = packetParams.Params.Flrc.SyncWordLength;
 80013ee:	683b      	ldr	r3, [r7, #0]
 80013f0:	7b9b      	ldrb	r3, [r3, #14]
 80013f2:	727b      	strb	r3, [r7, #9]
			buf[2] = packetParams.Params.Flrc.SyncWordMatch;
 80013f4:	683b      	ldr	r3, [r7, #0]
 80013f6:	7bdb      	ldrb	r3, [r3, #15]
 80013f8:	72bb      	strb	r3, [r7, #10]
			buf[3] = packetParams.Params.Flrc.HeaderType;
 80013fa:	683b      	ldr	r3, [r7, #0]
 80013fc:	7c1b      	ldrb	r3, [r3, #16]
 80013fe:	72fb      	strb	r3, [r7, #11]
			buf[4] = packetParams.Params.Flrc.PayloadLength;
 8001400:	683b      	ldr	r3, [r7, #0]
 8001402:	7c5b      	ldrb	r3, [r3, #17]
 8001404:	733b      	strb	r3, [r7, #12]
			buf[5] = packetParams.Params.Flrc.CrcLength;
 8001406:	683b      	ldr	r3, [r7, #0]
 8001408:	7c9b      	ldrb	r3, [r3, #18]
 800140a:	737b      	strb	r3, [r7, #13]
			buf[6] = packetParams.Params.Flrc.Whitening;
 800140c:	683b      	ldr	r3, [r7, #0]
 800140e:	7cdb      	ldrb	r3, [r3, #19]
 8001410:	73bb      	strb	r3, [r7, #14]
			break;
 8001412:	e021      	b.n	8001458 <_ZN6SX128x15SetPacketParamsERKNS_14PacketParams_tE+0x138>
		case PACKET_TYPE_BLE:
			buf[0] = packetParams.Params.Ble.ConnectionState;
 8001414:	683b      	ldr	r3, [r7, #0]
 8001416:	7d1b      	ldrb	r3, [r3, #20]
 8001418:	723b      	strb	r3, [r7, #8]
			buf[1] = packetParams.Params.Ble.CrcLength;
 800141a:	683b      	ldr	r3, [r7, #0]
 800141c:	7d5b      	ldrb	r3, [r3, #21]
 800141e:	727b      	strb	r3, [r7, #9]
			buf[2] = packetParams.Params.Ble.BleTestPayload;
 8001420:	683b      	ldr	r3, [r7, #0]
 8001422:	7d9b      	ldrb	r3, [r3, #22]
 8001424:	72bb      	strb	r3, [r7, #10]
			buf[3] = packetParams.Params.Ble.Whitening;
 8001426:	683b      	ldr	r3, [r7, #0]
 8001428:	7ddb      	ldrb	r3, [r3, #23]
 800142a:	72fb      	strb	r3, [r7, #11]
			buf[4] = 0;
 800142c:	2300      	movs	r3, #0
 800142e:	733b      	strb	r3, [r7, #12]
			buf[5] = 0;
 8001430:	2300      	movs	r3, #0
 8001432:	737b      	strb	r3, [r7, #13]
			buf[6] = 0;
 8001434:	2300      	movs	r3, #0
 8001436:	73bb      	strb	r3, [r7, #14]
			break;
 8001438:	e00e      	b.n	8001458 <_ZN6SX128x15SetPacketParamsERKNS_14PacketParams_tE+0x138>
		case PACKET_TYPE_NONE:
			buf[0] = 0;
 800143a:	2300      	movs	r3, #0
 800143c:	723b      	strb	r3, [r7, #8]
			buf[1] = 0;
 800143e:	2300      	movs	r3, #0
 8001440:	727b      	strb	r3, [r7, #9]
			buf[2] = 0;
 8001442:	2300      	movs	r3, #0
 8001444:	72bb      	strb	r3, [r7, #10]
			buf[3] = 0;
 8001446:	2300      	movs	r3, #0
 8001448:	72fb      	strb	r3, [r7, #11]
			buf[4] = 0;
 800144a:	2300      	movs	r3, #0
 800144c:	733b      	strb	r3, [r7, #12]
			buf[5] = 0;
 800144e:	2300      	movs	r3, #0
 8001450:	737b      	strb	r3, [r7, #13]
			buf[6] = 0;
 8001452:	2300      	movs	r3, #0
 8001454:	73bb      	strb	r3, [r7, #14]
			break;
 8001456:	bf00      	nop
	}
	WriteCommand( RADIO_SET_PACKETPARAMS, buf, 7 );
 8001458:	687b      	ldr	r3, [r7, #4]
 800145a:	681b      	ldr	r3, [r3, #0]
 800145c:	3330      	adds	r3, #48	; 0x30
 800145e:	681c      	ldr	r4, [r3, #0]
 8001460:	f107 0208 	add.w	r2, r7, #8
 8001464:	2307      	movs	r3, #7
 8001466:	218c      	movs	r1, #140	; 0x8c
 8001468:	6878      	ldr	r0, [r7, #4]
 800146a:	47a0      	blx	r4
	CurrentPacketParams = packetParams;
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	683a      	ldr	r2, [r7, #0]
 8001470:	f103 04b8 	add.w	r4, r3, #184	; 0xb8
 8001474:	4615      	mov	r5, r2
 8001476:	6828      	ldr	r0, [r5, #0]
 8001478:	6869      	ldr	r1, [r5, #4]
 800147a:	68aa      	ldr	r2, [r5, #8]
 800147c:	68eb      	ldr	r3, [r5, #12]
 800147e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001480:	6928      	ldr	r0, [r5, #16]
 8001482:	6969      	ldr	r1, [r5, #20]
 8001484:	c403      	stmia	r4!, {r0, r1}
}
 8001486:	bf00      	nop
 8001488:	3710      	adds	r7, #16
 800148a:	46bd      	mov	sp, r7
 800148c:	bdb0      	pop	{r4, r5, r7, pc}
 800148e:	bf00      	nop

08001490 <_ZN6SX128x15SetDioIrqParamsEtttt>:

	return ( int8_t ) ( -raw / 2 );
}

void SX128x::SetDioIrqParams(uint16_t irqMask, uint16_t dio1Mask, uint16_t dio2Mask, uint16_t dio3Mask )
{
 8001490:	b590      	push	{r4, r7, lr}
 8001492:	b087      	sub	sp, #28
 8001494:	af00      	add	r7, sp, #0
 8001496:	60f8      	str	r0, [r7, #12]
 8001498:	4608      	mov	r0, r1
 800149a:	4611      	mov	r1, r2
 800149c:	461a      	mov	r2, r3
 800149e:	4603      	mov	r3, r0
 80014a0:	817b      	strh	r3, [r7, #10]
 80014a2:	460b      	mov	r3, r1
 80014a4:	813b      	strh	r3, [r7, #8]
 80014a6:	4613      	mov	r3, r2
 80014a8:	80fb      	strh	r3, [r7, #6]
	uint8_t buf[8];

	buf[0] = ( uint8_t )( ( irqMask >> 8 ) & 0x00FF );
 80014aa:	897b      	ldrh	r3, [r7, #10]
 80014ac:	0a1b      	lsrs	r3, r3, #8
 80014ae:	b29b      	uxth	r3, r3
 80014b0:	b2db      	uxtb	r3, r3
 80014b2:	743b      	strb	r3, [r7, #16]
	buf[1] = ( uint8_t )( irqMask & 0x00FF );
 80014b4:	897b      	ldrh	r3, [r7, #10]
 80014b6:	b2db      	uxtb	r3, r3
 80014b8:	747b      	strb	r3, [r7, #17]
	buf[2] = ( uint8_t )( ( dio1Mask >> 8 ) & 0x00FF );
 80014ba:	893b      	ldrh	r3, [r7, #8]
 80014bc:	0a1b      	lsrs	r3, r3, #8
 80014be:	b29b      	uxth	r3, r3
 80014c0:	b2db      	uxtb	r3, r3
 80014c2:	74bb      	strb	r3, [r7, #18]
	buf[3] = ( uint8_t )( dio1Mask & 0x00FF );
 80014c4:	893b      	ldrh	r3, [r7, #8]
 80014c6:	b2db      	uxtb	r3, r3
 80014c8:	74fb      	strb	r3, [r7, #19]
	buf[4] = ( uint8_t )( ( dio2Mask >> 8 ) & 0x00FF );
 80014ca:	88fb      	ldrh	r3, [r7, #6]
 80014cc:	0a1b      	lsrs	r3, r3, #8
 80014ce:	b29b      	uxth	r3, r3
 80014d0:	b2db      	uxtb	r3, r3
 80014d2:	753b      	strb	r3, [r7, #20]
	buf[5] = ( uint8_t )( dio2Mask & 0x00FF );
 80014d4:	88fb      	ldrh	r3, [r7, #6]
 80014d6:	b2db      	uxtb	r3, r3
 80014d8:	757b      	strb	r3, [r7, #21]
	buf[6] = ( uint8_t )( ( dio3Mask >> 8 ) & 0x00FF );
 80014da:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80014dc:	0a1b      	lsrs	r3, r3, #8
 80014de:	b29b      	uxth	r3, r3
 80014e0:	b2db      	uxtb	r3, r3
 80014e2:	75bb      	strb	r3, [r7, #22]
	buf[7] = ( uint8_t )( dio3Mask & 0x00FF );
 80014e4:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80014e6:	b2db      	uxtb	r3, r3
 80014e8:	75fb      	strb	r3, [r7, #23]
	WriteCommand( RADIO_SET_DIOIRQPARAMS, buf, 8 );
 80014ea:	68fb      	ldr	r3, [r7, #12]
 80014ec:	681b      	ldr	r3, [r3, #0]
 80014ee:	3330      	adds	r3, #48	; 0x30
 80014f0:	681c      	ldr	r4, [r3, #0]
 80014f2:	f107 0210 	add.w	r2, r7, #16
 80014f6:	2308      	movs	r3, #8
 80014f8:	218d      	movs	r1, #141	; 0x8d
 80014fa:	68f8      	ldr	r0, [r7, #12]
 80014fc:	47a0      	blx	r4
}
 80014fe:	bf00      	nop
 8001500:	371c      	adds	r7, #28
 8001502:	46bd      	mov	sp, r7
 8001504:	bd90      	pop	{r4, r7, pc}

08001506 <_ZN6SX128x12GetIrqStatusEv>:

uint16_t SX128x::GetIrqStatus(void )
{
 8001506:	b590      	push	{r4, r7, lr}
 8001508:	b085      	sub	sp, #20
 800150a:	af00      	add	r7, sp, #0
 800150c:	6078      	str	r0, [r7, #4]
	uint8_t irqStatus[2];
	ReadCommand( RADIO_GET_IRQSTATUS, irqStatus, 2 );
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	681b      	ldr	r3, [r3, #0]
 8001512:	3334      	adds	r3, #52	; 0x34
 8001514:	681c      	ldr	r4, [r3, #0]
 8001516:	f107 020c 	add.w	r2, r7, #12
 800151a:	2302      	movs	r3, #2
 800151c:	2115      	movs	r1, #21
 800151e:	6878      	ldr	r0, [r7, #4]
 8001520:	47a0      	blx	r4
	return ( irqStatus[0] << 8 ) | irqStatus[1];
 8001522:	7b3b      	ldrb	r3, [r7, #12]
 8001524:	021b      	lsls	r3, r3, #8
 8001526:	b21a      	sxth	r2, r3
 8001528:	7b7b      	ldrb	r3, [r7, #13]
 800152a:	b21b      	sxth	r3, r3
 800152c:	4313      	orrs	r3, r2
 800152e:	b21b      	sxth	r3, r3
 8001530:	b29b      	uxth	r3, r3
}
 8001532:	4618      	mov	r0, r3
 8001534:	3714      	adds	r7, #20
 8001536:	46bd      	mov	sp, r7
 8001538:	bd90      	pop	{r4, r7, pc}

0800153a <_ZN6SX128x14ClearIrqStatusEt>:

void SX128x::ClearIrqStatus(uint16_t irqMask )
{
 800153a:	b590      	push	{r4, r7, lr}
 800153c:	b085      	sub	sp, #20
 800153e:	af00      	add	r7, sp, #0
 8001540:	6078      	str	r0, [r7, #4]
 8001542:	460b      	mov	r3, r1
 8001544:	807b      	strh	r3, [r7, #2]
	uint8_t buf[2];

	buf[0] = ( uint8_t )( ( ( uint16_t )irqMask >> 8 ) & 0x00FF );
 8001546:	887b      	ldrh	r3, [r7, #2]
 8001548:	0a1b      	lsrs	r3, r3, #8
 800154a:	b29b      	uxth	r3, r3
 800154c:	b2db      	uxtb	r3, r3
 800154e:	733b      	strb	r3, [r7, #12]
	buf[1] = ( uint8_t )( ( uint16_t )irqMask & 0x00FF );
 8001550:	887b      	ldrh	r3, [r7, #2]
 8001552:	b2db      	uxtb	r3, r3
 8001554:	737b      	strb	r3, [r7, #13]
	WriteCommand( RADIO_CLR_IRQSTATUS, buf, 2 );
 8001556:	687b      	ldr	r3, [r7, #4]
 8001558:	681b      	ldr	r3, [r3, #0]
 800155a:	3330      	adds	r3, #48	; 0x30
 800155c:	681c      	ldr	r4, [r3, #0]
 800155e:	f107 020c 	add.w	r2, r7, #12
 8001562:	2302      	movs	r3, #2
 8001564:	2197      	movs	r1, #151	; 0x97
 8001566:	6878      	ldr	r0, [r7, #4]
 8001568:	47a0      	blx	r4
}
 800156a:	bf00      	nop
 800156c:	3714      	adds	r7, #20
 800156e:	46bd      	mov	sp, r7
 8001570:	bd90      	pop	{r4, r7, pc}

08001572 <_ZN6SX128x10SetPayloadEPhhh>:
{
	WriteCommand( RADIO_SET_LONGPREAMBLE, ( uint8_t * )&enable, 1 );
}

void SX128x::SetPayload(uint8_t *buffer, uint8_t size, uint8_t offset )
{
 8001572:	b590      	push	{r4, r7, lr}
 8001574:	b085      	sub	sp, #20
 8001576:	af00      	add	r7, sp, #0
 8001578:	60f8      	str	r0, [r7, #12]
 800157a:	60b9      	str	r1, [r7, #8]
 800157c:	4611      	mov	r1, r2
 800157e:	461a      	mov	r2, r3
 8001580:	460b      	mov	r3, r1
 8001582:	71fb      	strb	r3, [r7, #7]
 8001584:	4613      	mov	r3, r2
 8001586:	71bb      	strb	r3, [r7, #6]
	WriteBuffer( offset, buffer, size );
 8001588:	68fb      	ldr	r3, [r7, #12]
 800158a:	681b      	ldr	r3, [r3, #0]
 800158c:	3348      	adds	r3, #72	; 0x48
 800158e:	681c      	ldr	r4, [r3, #0]
 8001590:	79fb      	ldrb	r3, [r7, #7]
 8001592:	79b9      	ldrb	r1, [r7, #6]
 8001594:	68ba      	ldr	r2, [r7, #8]
 8001596:	68f8      	ldr	r0, [r7, #12]
 8001598:	47a0      	blx	r4
}
 800159a:	bf00      	nop
 800159c:	3714      	adds	r7, #20
 800159e:	46bd      	mov	sp, r7
 80015a0:	bd90      	pop	{r4, r7, pc}

080015a2 <_ZN6SX128x11SendPayloadEPhhNS_10TickTime_sEh>:
	ReadBuffer( offset, buffer, *size );
	return 0;
}

void SX128x::SendPayload(uint8_t *payload, uint8_t size, TickTime_t timeout, uint8_t offset )
{
 80015a2:	b580      	push	{r7, lr}
 80015a4:	b084      	sub	sp, #16
 80015a6:	af00      	add	r7, sp, #0
 80015a8:	60f8      	str	r0, [r7, #12]
 80015aa:	60b9      	str	r1, [r7, #8]
 80015ac:	603b      	str	r3, [r7, #0]
 80015ae:	4613      	mov	r3, r2
 80015b0:	71fb      	strb	r3, [r7, #7]
	SetPayload( payload, size, offset );
 80015b2:	7e3b      	ldrb	r3, [r7, #24]
 80015b4:	79fa      	ldrb	r2, [r7, #7]
 80015b6:	68b9      	ldr	r1, [r7, #8]
 80015b8:	68f8      	ldr	r0, [r7, #12]
 80015ba:	f7ff ffda 	bl	8001572 <_ZN6SX128x10SetPayloadEPhhh>
	SetTx( timeout );
 80015be:	6839      	ldr	r1, [r7, #0]
 80015c0:	68f8      	ldr	r0, [r7, #12]
 80015c2:	f7ff fd75 	bl	80010b0 <_ZN6SX128x5SetTxENS_10TickTime_sE>
}
 80015c6:	bf00      	nop
 80015c8:	3710      	adds	r7, #16
 80015ca:	46bd      	mov	sp, r7
 80015cc:	bd80      	pop	{r7, pc}

080015ce <_ZN6SX128x11HalSpiWriteEPKht>:
	uint8_t useless[size];
	memset(useless, 0, size);
	HalSpiTransfer(buffer_in, useless, size);
}

void SX128x::HalSpiWrite(const uint8_t *buffer_out, uint16_t size) {
 80015ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80015d2:	b087      	sub	sp, #28
 80015d4:	af00      	add	r7, sp, #0
 80015d6:	60f8      	str	r0, [r7, #12]
 80015d8:	60b9      	str	r1, [r7, #8]
 80015da:	4613      	mov	r3, r2
 80015dc:	80fb      	strh	r3, [r7, #6]
	uint8_t useless[size];
	HalSpiTransfer(useless, buffer_out, size);
}
 80015de:	466b      	mov	r3, sp
 80015e0:	461e      	mov	r6, r3
	uint8_t useless[size];
 80015e2:	88f9      	ldrh	r1, [r7, #6]
 80015e4:	460b      	mov	r3, r1
 80015e6:	3b01      	subs	r3, #1
 80015e8:	617b      	str	r3, [r7, #20]
 80015ea:	b28b      	uxth	r3, r1
 80015ec:	2200      	movs	r2, #0
 80015ee:	4698      	mov	r8, r3
 80015f0:	4691      	mov	r9, r2
 80015f2:	f04f 0200 	mov.w	r2, #0
 80015f6:	f04f 0300 	mov.w	r3, #0
 80015fa:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80015fe:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8001602:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001606:	b28b      	uxth	r3, r1
 8001608:	2200      	movs	r2, #0
 800160a:	461c      	mov	r4, r3
 800160c:	4615      	mov	r5, r2
 800160e:	f04f 0200 	mov.w	r2, #0
 8001612:	f04f 0300 	mov.w	r3, #0
 8001616:	00eb      	lsls	r3, r5, #3
 8001618:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800161c:	00e2      	lsls	r2, r4, #3
 800161e:	460b      	mov	r3, r1
 8001620:	3307      	adds	r3, #7
 8001622:	08db      	lsrs	r3, r3, #3
 8001624:	00db      	lsls	r3, r3, #3
 8001626:	ebad 0d03 	sub.w	sp, sp, r3
 800162a:	466b      	mov	r3, sp
 800162c:	3300      	adds	r3, #0
 800162e:	613b      	str	r3, [r7, #16]
	HalSpiTransfer(useless, buffer_out, size);
 8001630:	68fb      	ldr	r3, [r7, #12]
 8001632:	681b      	ldr	r3, [r3, #0]
 8001634:	3308      	adds	r3, #8
 8001636:	681c      	ldr	r4, [r3, #0]
 8001638:	88fb      	ldrh	r3, [r7, #6]
 800163a:	68ba      	ldr	r2, [r7, #8]
 800163c:	6939      	ldr	r1, [r7, #16]
 800163e:	68f8      	ldr	r0, [r7, #12]
 8001640:	47a0      	blx	r4
 8001642:	46b5      	mov	sp, r6
}
 8001644:	bf00      	nop
 8001646:	371c      	adds	r7, #28
 8001648:	46bd      	mov	sp, r7
 800164a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800164e <_ZN6SX128x10WaitOnBusyEv>:

inline void SX128x::WaitOnBusy() {
 800164e:	b480      	push	{r7}
 8001650:	b085      	sub	sp, #20
 8001652:	af00      	add	r7, sp, #0
 8001654:	6078      	str	r0, [r7, #4]
//	while (HalGpioRead(GPIO_PIN_BUSY));
//	HAL_Delay(1);
	for(int i = 0; i < 100; i++);
 8001656:	2300      	movs	r3, #0
 8001658:	60fb      	str	r3, [r7, #12]
 800165a:	e002      	b.n	8001662 <_ZN6SX128x10WaitOnBusyEv+0x14>
 800165c:	68fb      	ldr	r3, [r7, #12]
 800165e:	3301      	adds	r3, #1
 8001660:	60fb      	str	r3, [r7, #12]
 8001662:	68fb      	ldr	r3, [r7, #12]
 8001664:	2b63      	cmp	r3, #99	; 0x63
 8001666:	ddf9      	ble.n	800165c <_ZN6SX128x10WaitOnBusyEv+0xe>
}
 8001668:	bf00      	nop
 800166a:	bf00      	nop
 800166c:	3714      	adds	r7, #20
 800166e:	46bd      	mov	sp, r7
 8001670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001674:	4770      	bx	lr

08001676 <_ZN6SX128x14WaitOnBusyLongEv>:

inline void SX128x::WaitOnBusyLong() {
 8001676:	b580      	push	{r7, lr}
 8001678:	b082      	sub	sp, #8
 800167a:	af00      	add	r7, sp, #0
 800167c:	6078      	str	r0, [r7, #4]
	while (HalGpioRead(GPIO_PIN_BUSY))
 800167e:	e002      	b.n	8001686 <_ZN6SX128x14WaitOnBusyLongEv+0x10>
		HAL_Delay(10);
 8001680:	200a      	movs	r0, #10
 8001682:	f001 fc35 	bl	8002ef0 <HAL_Delay>
	while (HalGpioRead(GPIO_PIN_BUSY))
 8001686:	687b      	ldr	r3, [r7, #4]
 8001688:	681b      	ldr	r3, [r3, #0]
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	2101      	movs	r1, #1
 800168e:	6878      	ldr	r0, [r7, #4]
 8001690:	4798      	blx	r3
 8001692:	4603      	mov	r3, r0
 8001694:	2b00      	cmp	r3, #0
 8001696:	bf14      	ite	ne
 8001698:	2301      	movne	r3, #1
 800169a:	2300      	moveq	r3, #0
 800169c:	b2db      	uxtb	r3, r3
 800169e:	2b00      	cmp	r3, #0
 80016a0:	d1ee      	bne.n	8001680 <_ZN6SX128x14WaitOnBusyLongEv+0xa>
}
 80016a2:	bf00      	nop
 80016a4:	bf00      	nop
 80016a6:	3708      	adds	r7, #8
 80016a8:	46bd      	mov	sp, r7
 80016aa:	bd80      	pop	{r7, pc}

080016ac <_ZN6SX128x5ResetEv>:

void SX128x::Reset(void) {
 80016ac:	b580      	push	{r7, lr}
 80016ae:	b082      	sub	sp, #8
 80016b0:	af00      	add	r7, sp, #0
 80016b2:	6078      	str	r0, [r7, #4]
	HalGpioWrite(GPIO_PIN_RESET, 1);
 80016b4:	687b      	ldr	r3, [r7, #4]
 80016b6:	681b      	ldr	r3, [r3, #0]
 80016b8:	3304      	adds	r3, #4
 80016ba:	681b      	ldr	r3, [r3, #0]
 80016bc:	2201      	movs	r2, #1
 80016be:	2100      	movs	r1, #0
 80016c0:	6878      	ldr	r0, [r7, #4]
 80016c2:	4798      	blx	r3
	HAL_Delay(100);
 80016c4:	2064      	movs	r0, #100	; 0x64
 80016c6:	f001 fc13 	bl	8002ef0 <HAL_Delay>
	HalGpioWrite(GPIO_PIN_RESET, 0);
 80016ca:	687b      	ldr	r3, [r7, #4]
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	3304      	adds	r3, #4
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	2200      	movs	r2, #0
 80016d4:	2100      	movs	r1, #0
 80016d6:	6878      	ldr	r0, [r7, #4]
 80016d8:	4798      	blx	r3
	HAL_Delay(100);
 80016da:	2064      	movs	r0, #100	; 0x64
 80016dc:	f001 fc08 	bl	8002ef0 <HAL_Delay>
	HalGpioWrite(GPIO_PIN_RESET, 1);
 80016e0:	687b      	ldr	r3, [r7, #4]
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	3304      	adds	r3, #4
 80016e6:	681b      	ldr	r3, [r3, #0]
 80016e8:	2201      	movs	r2, #1
 80016ea:	2100      	movs	r1, #0
 80016ec:	6878      	ldr	r0, [r7, #4]
 80016ee:	4798      	blx	r3
	HAL_Delay(100);
 80016f0:	2064      	movs	r0, #100	; 0x64
 80016f2:	f001 fbfd 	bl	8002ef0 <HAL_Delay>
}
 80016f6:	bf00      	nop
 80016f8:	3708      	adds	r7, #8
 80016fa:	46bd      	mov	sp, r7
 80016fc:	bd80      	pop	{r7, pc}

080016fe <_ZN6SX128x6WakeupEv>:

void SX128x::Wakeup(void) {
 80016fe:	b580      	push	{r7, lr}
 8001700:	b084      	sub	sp, #16
 8001702:	af00      	add	r7, sp, #0
 8001704:	6078      	str	r0, [r7, #4]
	uint8_t buf[2] = {RADIO_GET_STATUS, 0};
 8001706:	23c0      	movs	r3, #192	; 0xc0
 8001708:	81bb      	strh	r3, [r7, #12]
	HalSpiWrite(buf, 2);
 800170a:	f107 030c 	add.w	r3, r7, #12
 800170e:	2202      	movs	r2, #2
 8001710:	4619      	mov	r1, r3
 8001712:	6878      	ldr	r0, [r7, #4]
 8001714:	f7ff ff5b 	bl	80015ce <_ZN6SX128x11HalSpiWriteEPKht>
	WaitOnBusyLong();
 8001718:	6878      	ldr	r0, [r7, #4]
 800171a:	f7ff ffac 	bl	8001676 <_ZN6SX128x14WaitOnBusyLongEv>
}
 800171e:	bf00      	nop
 8001720:	3710      	adds	r7, #16
 8001722:	46bd      	mov	sp, r7
 8001724:	bd80      	pop	{r7, pc}

08001726 <_ZN6SX128x12WriteCommandENS_15RadioCommands_uEPht>:

void SX128x::WriteCommand(SX128x::RadioCommands_t opcode, uint8_t *buffer, uint16_t size) {
 8001726:	b580      	push	{r7, lr}
 8001728:	b086      	sub	sp, #24
 800172a:	af00      	add	r7, sp, #0
 800172c:	60f8      	str	r0, [r7, #12]
 800172e:	607a      	str	r2, [r7, #4]
 8001730:	461a      	mov	r2, r3
 8001732:	460b      	mov	r3, r1
 8001734:	72fb      	strb	r3, [r7, #11]
 8001736:	4613      	mov	r3, r2
 8001738:	813b      	strh	r3, [r7, #8]
	auto *merged_buf = (uint8_t *)alloca(size+1);
 800173a:	893b      	ldrh	r3, [r7, #8]
 800173c:	3301      	adds	r3, #1
 800173e:	3307      	adds	r3, #7
 8001740:	08db      	lsrs	r3, r3, #3
 8001742:	00db      	lsls	r3, r3, #3
 8001744:	ebad 0d03 	sub.w	sp, sp, r3
 8001748:	466b      	mov	r3, sp
 800174a:	3307      	adds	r3, #7
 800174c:	08db      	lsrs	r3, r3, #3
 800174e:	00db      	lsls	r3, r3, #3
 8001750:	617b      	str	r3, [r7, #20]

	merged_buf[0] = opcode;
 8001752:	697b      	ldr	r3, [r7, #20]
 8001754:	7afa      	ldrb	r2, [r7, #11]
 8001756:	701a      	strb	r2, [r3, #0]
	memcpy(merged_buf+1, buffer, size);
 8001758:	697b      	ldr	r3, [r7, #20]
 800175a:	3301      	adds	r3, #1
 800175c:	893a      	ldrh	r2, [r7, #8]
 800175e:	6879      	ldr	r1, [r7, #4]
 8001760:	4618      	mov	r0, r3
 8001762:	f005 ff9b 	bl	800769c <memcpy>

	WaitOnBusy();
 8001766:	68f8      	ldr	r0, [r7, #12]
 8001768:	f7ff ff71 	bl	800164e <_ZN6SX128x10WaitOnBusyEv>
	HalSpiWrite(merged_buf, size+1);
 800176c:	893b      	ldrh	r3, [r7, #8]
 800176e:	3301      	adds	r3, #1
 8001770:	b29b      	uxth	r3, r3
 8001772:	461a      	mov	r2, r3
 8001774:	6979      	ldr	r1, [r7, #20]
 8001776:	68f8      	ldr	r0, [r7, #12]
 8001778:	f7ff ff29 	bl	80015ce <_ZN6SX128x11HalSpiWriteEPKht>
}
 800177c:	bf00      	nop
 800177e:	3718      	adds	r7, #24
 8001780:	46bd      	mov	sp, r7
 8001782:	bd80      	pop	{r7, pc}

08001784 <_ZN6SX128x11ReadCommandENS_15RadioCommands_uEPht>:

void SX128x::ReadCommand(SX128x::RadioCommands_t opcode, uint8_t *buffer, uint16_t size) {
 8001784:	b590      	push	{r4, r7, lr}
 8001786:	b08b      	sub	sp, #44	; 0x2c
 8001788:	af00      	add	r7, sp, #0
 800178a:	60f8      	str	r0, [r7, #12]
 800178c:	607a      	str	r2, [r7, #4]
 800178e:	461a      	mov	r2, r3
 8001790:	460b      	mov	r3, r1
 8001792:	72fb      	strb	r3, [r7, #11]
 8001794:	4613      	mov	r3, r2
 8001796:	813b      	strh	r3, [r7, #8]

	if (opcode == RADIO_GET_STATUS) {
 8001798:	7afb      	ldrb	r3, [r7, #11]
 800179a:	2bc0      	cmp	r3, #192	; 0xc0
 800179c:	d11a      	bne.n	80017d4 <_ZN6SX128x11ReadCommandENS_15RadioCommands_uEPht+0x50>
		uint8_t buf_out[3] = {static_cast<uint8_t>(opcode), 0, 0};
 800179e:	f107 0318 	add.w	r3, r7, #24
 80017a2:	2100      	movs	r1, #0
 80017a4:	460a      	mov	r2, r1
 80017a6:	801a      	strh	r2, [r3, #0]
 80017a8:	460a      	mov	r2, r1
 80017aa:	709a      	strb	r2, [r3, #2]
 80017ac:	7afb      	ldrb	r3, [r7, #11]
 80017ae:	763b      	strb	r3, [r7, #24]
		uint8_t buf_in[3];

		WaitOnBusy();
 80017b0:	68f8      	ldr	r0, [r7, #12]
 80017b2:	f7ff ff4c 	bl	800164e <_ZN6SX128x10WaitOnBusyEv>
		HalSpiTransfer(buf_in, buf_out, 3);
 80017b6:	68fb      	ldr	r3, [r7, #12]
 80017b8:	681b      	ldr	r3, [r3, #0]
 80017ba:	3308      	adds	r3, #8
 80017bc:	681c      	ldr	r4, [r3, #0]
 80017be:	f107 0218 	add.w	r2, r7, #24
 80017c2:	f107 0114 	add.w	r1, r7, #20
 80017c6:	2303      	movs	r3, #3
 80017c8:	68f8      	ldr	r0, [r7, #12]
 80017ca:	47a0      	blx	r4
		buffer[0] = buf_in[0];
 80017cc:	7d3a      	ldrb	r2, [r7, #20]
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	701a      	strb	r2, [r3, #0]

		WaitOnBusy(); // wait until not busy before spi transfer
		HalSpiTransfer(buf_in, buf_out, total_transfer_size);
		memcpy(buffer, buf_in+2, size);
	}
}
 80017d2:	e035      	b.n	8001840 <_ZN6SX128x11ReadCommandENS_15RadioCommands_uEPht+0xbc>
		auto total_transfer_size = 2+size;
 80017d4:	893b      	ldrh	r3, [r7, #8]
 80017d6:	3302      	adds	r3, #2
 80017d8:	627b      	str	r3, [r7, #36]	; 0x24
		auto *buf_out = (uint8_t *)alloca(total_transfer_size);
 80017da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017dc:	3307      	adds	r3, #7
 80017de:	08db      	lsrs	r3, r3, #3
 80017e0:	00db      	lsls	r3, r3, #3
 80017e2:	ebad 0d03 	sub.w	sp, sp, r3
 80017e6:	466b      	mov	r3, sp
 80017e8:	3307      	adds	r3, #7
 80017ea:	08db      	lsrs	r3, r3, #3
 80017ec:	00db      	lsls	r3, r3, #3
 80017ee:	623b      	str	r3, [r7, #32]
		auto *buf_in = (uint8_t *)alloca(total_transfer_size);
 80017f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017f2:	3307      	adds	r3, #7
 80017f4:	08db      	lsrs	r3, r3, #3
 80017f6:	00db      	lsls	r3, r3, #3
 80017f8:	ebad 0d03 	sub.w	sp, sp, r3
 80017fc:	466b      	mov	r3, sp
 80017fe:	3307      	adds	r3, #7
 8001800:	08db      	lsrs	r3, r3, #3
 8001802:	00db      	lsls	r3, r3, #3
 8001804:	61fb      	str	r3, [r7, #28]
		memset(buf_out, 0, total_transfer_size);
 8001806:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001808:	461a      	mov	r2, r3
 800180a:	2100      	movs	r1, #0
 800180c:	6a38      	ldr	r0, [r7, #32]
 800180e:	f005 fe72 	bl	80074f6 <memset>
		buf_out[0] = opcode;
 8001812:	6a3b      	ldr	r3, [r7, #32]
 8001814:	7afa      	ldrb	r2, [r7, #11]
 8001816:	701a      	strb	r2, [r3, #0]
		WaitOnBusy(); // wait until not busy before spi transfer
 8001818:	68f8      	ldr	r0, [r7, #12]
 800181a:	f7ff ff18 	bl	800164e <_ZN6SX128x10WaitOnBusyEv>
		HalSpiTransfer(buf_in, buf_out, total_transfer_size);
 800181e:	68fb      	ldr	r3, [r7, #12]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	3308      	adds	r3, #8
 8001824:	681c      	ldr	r4, [r3, #0]
 8001826:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001828:	b29b      	uxth	r3, r3
 800182a:	6a3a      	ldr	r2, [r7, #32]
 800182c:	69f9      	ldr	r1, [r7, #28]
 800182e:	68f8      	ldr	r0, [r7, #12]
 8001830:	47a0      	blx	r4
		memcpy(buffer, buf_in+2, size);
 8001832:	69fb      	ldr	r3, [r7, #28]
 8001834:	3302      	adds	r3, #2
 8001836:	893a      	ldrh	r2, [r7, #8]
 8001838:	4619      	mov	r1, r3
 800183a:	6878      	ldr	r0, [r7, #4]
 800183c:	f005 ff2e 	bl	800769c <memcpy>
}
 8001840:	bf00      	nop
 8001842:	372c      	adds	r7, #44	; 0x2c
 8001844:	46bd      	mov	sp, r7
 8001846:	bd90      	pop	{r4, r7, pc}

08001848 <_ZN6SX128x13WriteRegisterEtPht>:

void SX128x::WriteRegister(uint16_t address, uint8_t *buffer, uint16_t size) {
 8001848:	b580      	push	{r7, lr}
 800184a:	b086      	sub	sp, #24
 800184c:	af00      	add	r7, sp, #0
 800184e:	60f8      	str	r0, [r7, #12]
 8001850:	607a      	str	r2, [r7, #4]
 8001852:	461a      	mov	r2, r3
 8001854:	460b      	mov	r3, r1
 8001856:	817b      	strh	r3, [r7, #10]
 8001858:	4613      	mov	r3, r2
 800185a:	813b      	strh	r3, [r7, #8]
	auto total_transfer_size = 3+size;
 800185c:	893b      	ldrh	r3, [r7, #8]
 800185e:	3303      	adds	r3, #3
 8001860:	617b      	str	r3, [r7, #20]
	auto *buf_out = (uint8_t *)alloca(total_transfer_size);
 8001862:	697b      	ldr	r3, [r7, #20]
 8001864:	3307      	adds	r3, #7
 8001866:	08db      	lsrs	r3, r3, #3
 8001868:	00db      	lsls	r3, r3, #3
 800186a:	ebad 0d03 	sub.w	sp, sp, r3
 800186e:	466b      	mov	r3, sp
 8001870:	3307      	adds	r3, #7
 8001872:	08db      	lsrs	r3, r3, #3
 8001874:	00db      	lsls	r3, r3, #3
 8001876:	613b      	str	r3, [r7, #16]

	buf_out[0] = RADIO_WRITE_REGISTER;
 8001878:	693b      	ldr	r3, [r7, #16]
 800187a:	2218      	movs	r2, #24
 800187c:	701a      	strb	r2, [r3, #0]
	buf_out[1] = ((address & 0xFF00) >> 8);
 800187e:	897b      	ldrh	r3, [r7, #10]
 8001880:	0a1b      	lsrs	r3, r3, #8
 8001882:	b29a      	uxth	r2, r3
 8001884:	693b      	ldr	r3, [r7, #16]
 8001886:	3301      	adds	r3, #1
 8001888:	b2d2      	uxtb	r2, r2
 800188a:	701a      	strb	r2, [r3, #0]
	buf_out[2] = (address & 0x00FF);
 800188c:	693b      	ldr	r3, [r7, #16]
 800188e:	3302      	adds	r3, #2
 8001890:	897a      	ldrh	r2, [r7, #10]
 8001892:	b2d2      	uxtb	r2, r2
 8001894:	701a      	strb	r2, [r3, #0]
	memcpy(buf_out+3, buffer, size);
 8001896:	693b      	ldr	r3, [r7, #16]
 8001898:	3303      	adds	r3, #3
 800189a:	893a      	ldrh	r2, [r7, #8]
 800189c:	6879      	ldr	r1, [r7, #4]
 800189e:	4618      	mov	r0, r3
 80018a0:	f005 fefc 	bl	800769c <memcpy>

	WaitOnBusy(); // wait until not busy before spi transfer
 80018a4:	68f8      	ldr	r0, [r7, #12]
 80018a6:	f7ff fed2 	bl	800164e <_ZN6SX128x10WaitOnBusyEv>
	HalSpiWrite(buf_out, total_transfer_size);
 80018aa:	697b      	ldr	r3, [r7, #20]
 80018ac:	b29b      	uxth	r3, r3
 80018ae:	461a      	mov	r2, r3
 80018b0:	6939      	ldr	r1, [r7, #16]
 80018b2:	68f8      	ldr	r0, [r7, #12]
 80018b4:	f7ff fe8b 	bl	80015ce <_ZN6SX128x11HalSpiWriteEPKht>
}
 80018b8:	bf00      	nop
 80018ba:	3718      	adds	r7, #24
 80018bc:	46bd      	mov	sp, r7
 80018be:	bd80      	pop	{r7, pc}

080018c0 <_ZN6SX128x13WriteRegisterEth>:

inline void SX128x::WriteRegister(uint16_t address, uint8_t value) {
 80018c0:	b590      	push	{r4, r7, lr}
 80018c2:	b083      	sub	sp, #12
 80018c4:	af00      	add	r7, sp, #0
 80018c6:	6078      	str	r0, [r7, #4]
 80018c8:	460b      	mov	r3, r1
 80018ca:	807b      	strh	r3, [r7, #2]
 80018cc:	4613      	mov	r3, r2
 80018ce:	707b      	strb	r3, [r7, #1]
	WriteRegister(address, &value, 1);
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	3338      	adds	r3, #56	; 0x38
 80018d6:	681c      	ldr	r4, [r3, #0]
 80018d8:	1c7a      	adds	r2, r7, #1
 80018da:	8879      	ldrh	r1, [r7, #2]
 80018dc:	2301      	movs	r3, #1
 80018de:	6878      	ldr	r0, [r7, #4]
 80018e0:	47a0      	blx	r4
}
 80018e2:	bf00      	nop
 80018e4:	370c      	adds	r7, #12
 80018e6:	46bd      	mov	sp, r7
 80018e8:	bd90      	pop	{r4, r7, pc}

080018ea <_ZN6SX128x12ReadRegisterEtPht>:

void SX128x::ReadRegister(uint16_t address, uint8_t *buffer, uint16_t size) {
 80018ea:	b590      	push	{r4, r7, lr}
 80018ec:	b089      	sub	sp, #36	; 0x24
 80018ee:	af00      	add	r7, sp, #0
 80018f0:	60f8      	str	r0, [r7, #12]
 80018f2:	607a      	str	r2, [r7, #4]
 80018f4:	461a      	mov	r2, r3
 80018f6:	460b      	mov	r3, r1
 80018f8:	817b      	strh	r3, [r7, #10]
 80018fa:	4613      	mov	r3, r2
 80018fc:	813b      	strh	r3, [r7, #8]
	
	auto total_transfer_size = 4+size;
 80018fe:	893b      	ldrh	r3, [r7, #8]
 8001900:	3304      	adds	r3, #4
 8001902:	61fb      	str	r3, [r7, #28]
	auto *buf_out = (uint8_t *)alloca(total_transfer_size);
 8001904:	69fb      	ldr	r3, [r7, #28]
 8001906:	3307      	adds	r3, #7
 8001908:	08db      	lsrs	r3, r3, #3
 800190a:	00db      	lsls	r3, r3, #3
 800190c:	ebad 0d03 	sub.w	sp, sp, r3
 8001910:	466b      	mov	r3, sp
 8001912:	3307      	adds	r3, #7
 8001914:	08db      	lsrs	r3, r3, #3
 8001916:	00db      	lsls	r3, r3, #3
 8001918:	61bb      	str	r3, [r7, #24]
	auto *buf_in = (uint8_t *)alloca(total_transfer_size);
 800191a:	69fb      	ldr	r3, [r7, #28]
 800191c:	3307      	adds	r3, #7
 800191e:	08db      	lsrs	r3, r3, #3
 8001920:	00db      	lsls	r3, r3, #3
 8001922:	ebad 0d03 	sub.w	sp, sp, r3
 8001926:	466b      	mov	r3, sp
 8001928:	3307      	adds	r3, #7
 800192a:	08db      	lsrs	r3, r3, #3
 800192c:	00db      	lsls	r3, r3, #3
 800192e:	617b      	str	r3, [r7, #20]

	memset(buf_out, 0, total_transfer_size);
 8001930:	69fb      	ldr	r3, [r7, #28]
 8001932:	461a      	mov	r2, r3
 8001934:	2100      	movs	r1, #0
 8001936:	69b8      	ldr	r0, [r7, #24]
 8001938:	f005 fddd 	bl	80074f6 <memset>
	buf_out[0] = RADIO_READ_REGISTER;
 800193c:	69bb      	ldr	r3, [r7, #24]
 800193e:	2219      	movs	r2, #25
 8001940:	701a      	strb	r2, [r3, #0]
	buf_out[1] = ((address & 0xFF00) >> 8);
 8001942:	897b      	ldrh	r3, [r7, #10]
 8001944:	0a1b      	lsrs	r3, r3, #8
 8001946:	b29a      	uxth	r2, r3
 8001948:	69bb      	ldr	r3, [r7, #24]
 800194a:	3301      	adds	r3, #1
 800194c:	b2d2      	uxtb	r2, r2
 800194e:	701a      	strb	r2, [r3, #0]
	buf_out[2] = (address & 0x00FF);
 8001950:	69bb      	ldr	r3, [r7, #24]
 8001952:	3302      	adds	r3, #2
 8001954:	897a      	ldrh	r2, [r7, #10]
 8001956:	b2d2      	uxtb	r2, r2
 8001958:	701a      	strb	r2, [r3, #0]

	WaitOnBusy(); // wait until not busy before spi transfer
 800195a:	68f8      	ldr	r0, [r7, #12]
 800195c:	f7ff fe77 	bl	800164e <_ZN6SX128x10WaitOnBusyEv>
	HalSpiTransfer(buf_in, buf_out, total_transfer_size);
 8001960:	68fb      	ldr	r3, [r7, #12]
 8001962:	681b      	ldr	r3, [r3, #0]
 8001964:	3308      	adds	r3, #8
 8001966:	681c      	ldr	r4, [r3, #0]
 8001968:	69fb      	ldr	r3, [r7, #28]
 800196a:	b29b      	uxth	r3, r3
 800196c:	69ba      	ldr	r2, [r7, #24]
 800196e:	6979      	ldr	r1, [r7, #20]
 8001970:	68f8      	ldr	r0, [r7, #12]
 8001972:	47a0      	blx	r4

	memcpy(buffer, buf_in+4, size);
 8001974:	697b      	ldr	r3, [r7, #20]
 8001976:	3304      	adds	r3, #4
 8001978:	893a      	ldrh	r2, [r7, #8]
 800197a:	4619      	mov	r1, r3
 800197c:	6878      	ldr	r0, [r7, #4]
 800197e:	f005 fe8d 	bl	800769c <memcpy>
}
 8001982:	bf00      	nop
 8001984:	3724      	adds	r7, #36	; 0x24
 8001986:	46bd      	mov	sp, r7
 8001988:	bd90      	pop	{r4, r7, pc}

0800198a <_ZN6SX128x12ReadRegisterEt>:

inline uint8_t SX128x::ReadRegister(uint16_t address) {
 800198a:	b590      	push	{r4, r7, lr}
 800198c:	b085      	sub	sp, #20
 800198e:	af00      	add	r7, sp, #0
 8001990:	6078      	str	r0, [r7, #4]
 8001992:	460b      	mov	r3, r1
 8001994:	807b      	strh	r3, [r7, #2]
	uint8_t data;
	ReadRegister( address, &data, 1 );
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	681b      	ldr	r3, [r3, #0]
 800199a:	3340      	adds	r3, #64	; 0x40
 800199c:	681c      	ldr	r4, [r3, #0]
 800199e:	f107 020f 	add.w	r2, r7, #15
 80019a2:	8879      	ldrh	r1, [r7, #2]
 80019a4:	2301      	movs	r3, #1
 80019a6:	6878      	ldr	r0, [r7, #4]
 80019a8:	47a0      	blx	r4
	return data;
 80019aa:	7bfb      	ldrb	r3, [r7, #15]
}
 80019ac:	4618      	mov	r0, r3
 80019ae:	3714      	adds	r7, #20
 80019b0:	46bd      	mov	sp, r7
 80019b2:	bd90      	pop	{r4, r7, pc}

080019b4 <_ZN6SX128x11WriteBufferEhPhh>:

void SX128x::WriteBuffer(uint8_t offset, uint8_t *buffer, uint8_t size) {
 80019b4:	b580      	push	{r7, lr}
 80019b6:	b086      	sub	sp, #24
 80019b8:	af00      	add	r7, sp, #0
 80019ba:	60f8      	str	r0, [r7, #12]
 80019bc:	607a      	str	r2, [r7, #4]
 80019be:	461a      	mov	r2, r3
 80019c0:	460b      	mov	r3, r1
 80019c2:	72fb      	strb	r3, [r7, #11]
 80019c4:	4613      	mov	r3, r2
 80019c6:	72bb      	strb	r3, [r7, #10]
	auto total_transfer_size = 2+size;
 80019c8:	7abb      	ldrb	r3, [r7, #10]
 80019ca:	3302      	adds	r3, #2
 80019cc:	617b      	str	r3, [r7, #20]
	auto *buf_out = (uint8_t *)alloca(total_transfer_size);
 80019ce:	697b      	ldr	r3, [r7, #20]
 80019d0:	3307      	adds	r3, #7
 80019d2:	08db      	lsrs	r3, r3, #3
 80019d4:	00db      	lsls	r3, r3, #3
 80019d6:	ebad 0d03 	sub.w	sp, sp, r3
 80019da:	466b      	mov	r3, sp
 80019dc:	3307      	adds	r3, #7
 80019de:	08db      	lsrs	r3, r3, #3
 80019e0:	00db      	lsls	r3, r3, #3
 80019e2:	613b      	str	r3, [r7, #16]

	buf_out[0] = RADIO_WRITE_BUFFER;
 80019e4:	693b      	ldr	r3, [r7, #16]
 80019e6:	221a      	movs	r2, #26
 80019e8:	701a      	strb	r2, [r3, #0]
	buf_out[1] = offset;
 80019ea:	693b      	ldr	r3, [r7, #16]
 80019ec:	3301      	adds	r3, #1
 80019ee:	7afa      	ldrb	r2, [r7, #11]
 80019f0:	701a      	strb	r2, [r3, #0]

	memcpy(buf_out+2, buffer, size);
 80019f2:	693b      	ldr	r3, [r7, #16]
 80019f4:	3302      	adds	r3, #2
 80019f6:	7aba      	ldrb	r2, [r7, #10]
 80019f8:	6879      	ldr	r1, [r7, #4]
 80019fa:	4618      	mov	r0, r3
 80019fc:	f005 fe4e 	bl	800769c <memcpy>
	
	WaitOnBusy();
 8001a00:	68f8      	ldr	r0, [r7, #12]
 8001a02:	f7ff fe24 	bl	800164e <_ZN6SX128x10WaitOnBusyEv>
	HalSpiWrite(buf_out, total_transfer_size);
 8001a06:	697b      	ldr	r3, [r7, #20]
 8001a08:	b29b      	uxth	r3, r3
 8001a0a:	461a      	mov	r2, r3
 8001a0c:	6939      	ldr	r1, [r7, #16]
 8001a0e:	68f8      	ldr	r0, [r7, #12]
 8001a10:	f7ff fddd 	bl	80015ce <_ZN6SX128x11HalSpiWriteEPKht>
}
 8001a14:	bf00      	nop
 8001a16:	3718      	adds	r7, #24
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	bd80      	pop	{r7, pc}

08001a1c <_ZN6SX128x10ReadBufferEhPhh>:

void SX128x::ReadBuffer(uint8_t offset, uint8_t *buffer, uint8_t size) {
 8001a1c:	b590      	push	{r4, r7, lr}
 8001a1e:	b089      	sub	sp, #36	; 0x24
 8001a20:	af00      	add	r7, sp, #0
 8001a22:	60f8      	str	r0, [r7, #12]
 8001a24:	607a      	str	r2, [r7, #4]
 8001a26:	461a      	mov	r2, r3
 8001a28:	460b      	mov	r3, r1
 8001a2a:	72fb      	strb	r3, [r7, #11]
 8001a2c:	4613      	mov	r3, r2
 8001a2e:	72bb      	strb	r3, [r7, #10]
	auto total_transfer_size = 3+size;
 8001a30:	7abb      	ldrb	r3, [r7, #10]
 8001a32:	3303      	adds	r3, #3
 8001a34:	61fb      	str	r3, [r7, #28]
	auto *buf_out = (uint8_t *)alloca(total_transfer_size);
 8001a36:	69fb      	ldr	r3, [r7, #28]
 8001a38:	3307      	adds	r3, #7
 8001a3a:	08db      	lsrs	r3, r3, #3
 8001a3c:	00db      	lsls	r3, r3, #3
 8001a3e:	ebad 0d03 	sub.w	sp, sp, r3
 8001a42:	466b      	mov	r3, sp
 8001a44:	3307      	adds	r3, #7
 8001a46:	08db      	lsrs	r3, r3, #3
 8001a48:	00db      	lsls	r3, r3, #3
 8001a4a:	61bb      	str	r3, [r7, #24]
	auto *buf_in = (uint8_t *)alloca(total_transfer_size);
 8001a4c:	69fb      	ldr	r3, [r7, #28]
 8001a4e:	3307      	adds	r3, #7
 8001a50:	08db      	lsrs	r3, r3, #3
 8001a52:	00db      	lsls	r3, r3, #3
 8001a54:	ebad 0d03 	sub.w	sp, sp, r3
 8001a58:	466b      	mov	r3, sp
 8001a5a:	3307      	adds	r3, #7
 8001a5c:	08db      	lsrs	r3, r3, #3
 8001a5e:	00db      	lsls	r3, r3, #3
 8001a60:	617b      	str	r3, [r7, #20]

	memset(buf_out, 0, total_transfer_size);
 8001a62:	69fb      	ldr	r3, [r7, #28]
 8001a64:	461a      	mov	r2, r3
 8001a66:	2100      	movs	r1, #0
 8001a68:	69b8      	ldr	r0, [r7, #24]
 8001a6a:	f005 fd44 	bl	80074f6 <memset>

	buf_out[0] = RADIO_READ_BUFFER;
 8001a6e:	69bb      	ldr	r3, [r7, #24]
 8001a70:	221b      	movs	r2, #27
 8001a72:	701a      	strb	r2, [r3, #0]
	buf_out[1] = offset;
 8001a74:	69bb      	ldr	r3, [r7, #24]
 8001a76:	3301      	adds	r3, #1
 8001a78:	7afa      	ldrb	r2, [r7, #11]
 8001a7a:	701a      	strb	r2, [r3, #0]

	WaitOnBusy();
 8001a7c:	68f8      	ldr	r0, [r7, #12]
 8001a7e:	f7ff fde6 	bl	800164e <_ZN6SX128x10WaitOnBusyEv>
	HalSpiTransfer(buf_in, buf_out, total_transfer_size);
 8001a82:	68fb      	ldr	r3, [r7, #12]
 8001a84:	681b      	ldr	r3, [r3, #0]
 8001a86:	3308      	adds	r3, #8
 8001a88:	681c      	ldr	r4, [r3, #0]
 8001a8a:	69fb      	ldr	r3, [r7, #28]
 8001a8c:	b29b      	uxth	r3, r3
 8001a8e:	69ba      	ldr	r2, [r7, #24]
 8001a90:	6979      	ldr	r1, [r7, #20]
 8001a92:	68f8      	ldr	r0, [r7, #12]
 8001a94:	47a0      	blx	r4

	memcpy(buffer, buf_in+3, size);
 8001a96:	697b      	ldr	r3, [r7, #20]
 8001a98:	3303      	adds	r3, #3
 8001a9a:	7aba      	ldrb	r2, [r7, #10]
 8001a9c:	4619      	mov	r1, r3
 8001a9e:	6878      	ldr	r0, [r7, #4]
 8001aa0:	f005 fdfc 	bl	800769c <memcpy>
}
 8001aa4:	bf00      	nop
 8001aa6:	3724      	adds	r7, #36	; 0x24
 8001aa8:	46bd      	mov	sp, r7
 8001aaa:	bd90      	pop	{r4, r7, pc}

08001aac <_ZNSt14_Function_baseD1Ev>:
	  { return true; }
      };

    _Function_base() = default;

    ~_Function_base()
 8001aac:	b580      	push	{r7, lr}
 8001aae:	b082      	sub	sp, #8
 8001ab0:	af00      	add	r7, sp, #0
 8001ab2:	6078      	str	r0, [r7, #4]
    {
      if (_M_manager)
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	689b      	ldr	r3, [r3, #8]
 8001ab8:	2b00      	cmp	r3, #0
 8001aba:	d005      	beq.n	8001ac8 <_ZNSt14_Function_baseD1Ev+0x1c>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	689b      	ldr	r3, [r3, #8]
 8001ac0:	6878      	ldr	r0, [r7, #4]
 8001ac2:	6879      	ldr	r1, [r7, #4]
 8001ac4:	2203      	movs	r2, #3
 8001ac6:	4798      	blx	r3
    }
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	4618      	mov	r0, r3
 8001acc:	3708      	adds	r7, #8
 8001ace:	46bd      	mov	sp, r7
 8001ad0:	bd80      	pop	{r7, pc}
	...

08001ad4 <_ZN19SX128x_formal_board11HalGpioReadEN6SX128x17GpioPinFunction_tE>:
 8001ad4:	b580      	push	{r7, lr}
 8001ad6:	b082      	sub	sp, #8
 8001ad8:	af00      	add	r7, sp, #0
 8001ada:	6078      	str	r0, [r7, #4]
 8001adc:	460b      	mov	r3, r1
 8001ade:	70fb      	strb	r3, [r7, #3]
 8001ae0:	78fb      	ldrb	r3, [r7, #3]
 8001ae2:	2b04      	cmp	r3, #4
 8001ae4:	d820      	bhi.n	8001b28 <_ZN19SX128x_formal_board11HalGpioReadEN6SX128x17GpioPinFunction_tE+0x54>
 8001ae6:	a201      	add	r2, pc, #4	; (adr r2, 8001aec <_ZN19SX128x_formal_board11HalGpioReadEN6SX128x17GpioPinFunction_tE+0x18>)
 8001ae8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001aec:	08001b01 	.word	0x08001b01
 8001af0:	08001b0d 	.word	0x08001b0d
 8001af4:	08001b1d 	.word	0x08001b1d
 8001af8:	08001b21 	.word	0x08001b21
 8001afc:	08001b25 	.word	0x08001b25
 8001b00:	2180      	movs	r1, #128	; 0x80
 8001b02:	480c      	ldr	r0, [pc, #48]	; (8001b34 <_ZN19SX128x_formal_board11HalGpioReadEN6SX128x17GpioPinFunction_tE+0x60>)
 8001b04:	f001 fcd4 	bl	80034b0 <HAL_GPIO_ReadPin>
 8001b08:	4603      	mov	r3, r0
 8001b0a:	e00e      	b.n	8001b2a <_ZN19SX128x_formal_board11HalGpioReadEN6SX128x17GpioPinFunction_tE+0x56>
 8001b0c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b10:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001b14:	f001 fccc 	bl	80034b0 <HAL_GPIO_ReadPin>
 8001b18:	4603      	mov	r3, r0
 8001b1a:	e006      	b.n	8001b2a <_ZN19SX128x_formal_board11HalGpioReadEN6SX128x17GpioPinFunction_tE+0x56>
 8001b1c:	2300      	movs	r3, #0
 8001b1e:	e004      	b.n	8001b2a <_ZN19SX128x_formal_board11HalGpioReadEN6SX128x17GpioPinFunction_tE+0x56>
 8001b20:	2300      	movs	r3, #0
 8001b22:	e002      	b.n	8001b2a <_ZN19SX128x_formal_board11HalGpioReadEN6SX128x17GpioPinFunction_tE+0x56>
 8001b24:	2300      	movs	r3, #0
 8001b26:	e000      	b.n	8001b2a <_ZN19SX128x_formal_board11HalGpioReadEN6SX128x17GpioPinFunction_tE+0x56>
 8001b28:	2300      	movs	r3, #0
 8001b2a:	4618      	mov	r0, r3
 8001b2c:	3708      	adds	r7, #8
 8001b2e:	46bd      	mov	sp, r7
 8001b30:	bd80      	pop	{r7, pc}
 8001b32:	bf00      	nop
 8001b34:	48000800 	.word	0x48000800

08001b38 <_ZN19SX128x_formal_board12HalGpioWriteEN6SX128x17GpioPinFunction_tEh>:
 8001b38:	b580      	push	{r7, lr}
 8001b3a:	b082      	sub	sp, #8
 8001b3c:	af00      	add	r7, sp, #0
 8001b3e:	6078      	str	r0, [r7, #4]
 8001b40:	4613      	mov	r3, r2
 8001b42:	460a      	mov	r2, r1
 8001b44:	70fa      	strb	r2, [r7, #3]
 8001b46:	78fa      	ldrb	r2, [r7, #3]
 8001b48:	2a04      	cmp	r2, #4
 8001b4a:	d81b      	bhi.n	8001b84 <_ZN19SX128x_formal_board12HalGpioWriteEN6SX128x17GpioPinFunction_tEh+0x4c>
 8001b4c:	a101      	add	r1, pc, #4	; (adr r1, 8001b54 <_ZN19SX128x_formal_board12HalGpioWriteEN6SX128x17GpioPinFunction_tEh+0x1c>)
 8001b4e:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8001b52:	bf00      	nop
 8001b54:	08001b69 	.word	0x08001b69
 8001b58:	08001b75 	.word	0x08001b75
 8001b5c:	08001b85 	.word	0x08001b85
 8001b60:	08001b85 	.word	0x08001b85
 8001b64:	08001b85 	.word	0x08001b85
 8001b68:	461a      	mov	r2, r3
 8001b6a:	2180      	movs	r1, #128	; 0x80
 8001b6c:	4808      	ldr	r0, [pc, #32]	; (8001b90 <_ZN19SX128x_formal_board12HalGpioWriteEN6SX128x17GpioPinFunction_tEh+0x58>)
 8001b6e:	f001 fcb7 	bl	80034e0 <HAL_GPIO_WritePin>
 8001b72:	e008      	b.n	8001b86 <_ZN19SX128x_formal_board12HalGpioWriteEN6SX128x17GpioPinFunction_tEh+0x4e>
 8001b74:	461a      	mov	r2, r3
 8001b76:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b7a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001b7e:	f001 fcaf 	bl	80034e0 <HAL_GPIO_WritePin>
 8001b82:	e000      	b.n	8001b86 <_ZN19SX128x_formal_board12HalGpioWriteEN6SX128x17GpioPinFunction_tEh+0x4e>
 8001b84:	bf00      	nop
 8001b86:	bf00      	nop
 8001b88:	3708      	adds	r7, #8
 8001b8a:	46bd      	mov	sp, r7
 8001b8c:	bd80      	pop	{r7, pc}
 8001b8e:	bf00      	nop
 8001b90:	48000800 	.word	0x48000800

08001b94 <_ZN19SX128x_formal_board14HalSpiTransferEPhPKht>:
 8001b94:	b580      	push	{r7, lr}
 8001b96:	b086      	sub	sp, #24
 8001b98:	af02      	add	r7, sp, #8
 8001b9a:	60f8      	str	r0, [r7, #12]
 8001b9c:	60b9      	str	r1, [r7, #8]
 8001b9e:	607a      	str	r2, [r7, #4]
 8001ba0:	807b      	strh	r3, [r7, #2]
 8001ba2:	2200      	movs	r2, #0
 8001ba4:	2140      	movs	r1, #64	; 0x40
 8001ba6:	480a      	ldr	r0, [pc, #40]	; (8001bd0 <_ZN19SX128x_formal_board14HalSpiTransferEPhPKht+0x3c>)
 8001ba8:	f001 fc9a 	bl	80034e0 <HAL_GPIO_WritePin>
 8001bac:	887b      	ldrh	r3, [r7, #2]
 8001bae:	2201      	movs	r2, #1
 8001bb0:	9200      	str	r2, [sp, #0]
 8001bb2:	68ba      	ldr	r2, [r7, #8]
 8001bb4:	6879      	ldr	r1, [r7, #4]
 8001bb6:	4807      	ldr	r0, [pc, #28]	; (8001bd4 <_ZN19SX128x_formal_board14HalSpiTransferEPhPKht+0x40>)
 8001bb8:	f003 f891 	bl	8004cde <HAL_SPI_TransmitReceive>
 8001bbc:	2201      	movs	r2, #1
 8001bbe:	2140      	movs	r1, #64	; 0x40
 8001bc0:	4803      	ldr	r0, [pc, #12]	; (8001bd0 <_ZN19SX128x_formal_board14HalSpiTransferEPhPKht+0x3c>)
 8001bc2:	f001 fc8d 	bl	80034e0 <HAL_GPIO_WritePin>
 8001bc6:	bf00      	nop
 8001bc8:	3710      	adds	r7, #16
 8001bca:	46bd      	mov	sp, r7
 8001bcc:	bd80      	pop	{r7, pc}
 8001bce:	bf00      	nop
 8001bd0:	48000400 	.word	0x48000400
 8001bd4:	200001f4 	.word	0x200001f4

08001bd8 <_ZN19SX128x_formal_board19HalSpiTransferDelayEPhPKht>:
 8001bd8:	b580      	push	{r7, lr}
 8001bda:	b086      	sub	sp, #24
 8001bdc:	af02      	add	r7, sp, #8
 8001bde:	60f8      	str	r0, [r7, #12]
 8001be0:	60b9      	str	r1, [r7, #8]
 8001be2:	607a      	str	r2, [r7, #4]
 8001be4:	807b      	strh	r3, [r7, #2]
 8001be6:	2200      	movs	r2, #0
 8001be8:	2140      	movs	r1, #64	; 0x40
 8001bea:	480b      	ldr	r0, [pc, #44]	; (8001c18 <_ZN19SX128x_formal_board19HalSpiTransferDelayEPhPKht+0x40>)
 8001bec:	f001 fc78 	bl	80034e0 <HAL_GPIO_WritePin>
 8001bf0:	200a      	movs	r0, #10
 8001bf2:	f001 f97d 	bl	8002ef0 <HAL_Delay>
 8001bf6:	887b      	ldrh	r3, [r7, #2]
 8001bf8:	2201      	movs	r2, #1
 8001bfa:	9200      	str	r2, [sp, #0]
 8001bfc:	68ba      	ldr	r2, [r7, #8]
 8001bfe:	6879      	ldr	r1, [r7, #4]
 8001c00:	4806      	ldr	r0, [pc, #24]	; (8001c1c <_ZN19SX128x_formal_board19HalSpiTransferDelayEPhPKht+0x44>)
 8001c02:	f003 f86c 	bl	8004cde <HAL_SPI_TransmitReceive>
 8001c06:	2201      	movs	r2, #1
 8001c08:	2140      	movs	r1, #64	; 0x40
 8001c0a:	4803      	ldr	r0, [pc, #12]	; (8001c18 <_ZN19SX128x_formal_board19HalSpiTransferDelayEPhPKht+0x40>)
 8001c0c:	f001 fc68 	bl	80034e0 <HAL_GPIO_WritePin>
 8001c10:	bf00      	nop
 8001c12:	3710      	adds	r7, #16
 8001c14:	46bd      	mov	sp, r7
 8001c16:	bd80      	pop	{r7, pc}
 8001c18:	48000400 	.word	0x48000400
 8001c1c:	200001f4 	.word	0x200001f4

08001c20 <_ZNSt8functionIFvvEED1Ev>:
   *  @brief Polymorphic function wrapper.
   *  @ingroup functors
   *  @since C++11
   */
  template<typename _Res, typename... _ArgTypes>
    class function<_Res(_ArgTypes...)>
 8001c20:	b580      	push	{r7, lr}
 8001c22:	b082      	sub	sp, #8
 8001c24:	af00      	add	r7, sp, #0
 8001c26:	6078      	str	r0, [r7, #4]
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	4618      	mov	r0, r3
 8001c2c:	f7ff ff3e 	bl	8001aac <_ZNSt14_Function_baseD1Ev>
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	4618      	mov	r0, r3
 8001c34:	3708      	adds	r7, #8
 8001c36:	46bd      	mov	sp, r7
 8001c38:	bd80      	pop	{r7, pc}

08001c3a <_ZNSt8functionIFvN6SX128x14IrqErrorCode_tEEED1Ev>:
 8001c3a:	b580      	push	{r7, lr}
 8001c3c:	b082      	sub	sp, #8
 8001c3e:	af00      	add	r7, sp, #0
 8001c40:	6078      	str	r0, [r7, #4]
 8001c42:	687b      	ldr	r3, [r7, #4]
 8001c44:	4618      	mov	r0, r3
 8001c46:	f7ff ff31 	bl	8001aac <_ZNSt14_Function_baseD1Ev>
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	4618      	mov	r0, r3
 8001c4e:	3708      	adds	r7, #8
 8001c50:	46bd      	mov	sp, r7
 8001c52:	bd80      	pop	{r7, pc}

08001c54 <_ZNSt8functionIFvN6SX128x16IrqRangingCode_tEEED1Ev>:
 8001c54:	b580      	push	{r7, lr}
 8001c56:	b082      	sub	sp, #8
 8001c58:	af00      	add	r7, sp, #0
 8001c5a:	6078      	str	r0, [r7, #4]
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	4618      	mov	r0, r3
 8001c60:	f7ff ff24 	bl	8001aac <_ZNSt14_Function_baseD1Ev>
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	4618      	mov	r0, r3
 8001c68:	3708      	adds	r7, #8
 8001c6a:	46bd      	mov	sp, r7
 8001c6c:	bd80      	pop	{r7, pc}

08001c6e <_ZNSt8functionIFvbEED1Ev>:
 8001c6e:	b580      	push	{r7, lr}
 8001c70:	b082      	sub	sp, #8
 8001c72:	af00      	add	r7, sp, #0
 8001c74:	6078      	str	r0, [r7, #4]
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	4618      	mov	r0, r3
 8001c7a:	f7ff ff17 	bl	8001aac <_ZNSt14_Function_baseD1Ev>
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	4618      	mov	r0, r3
 8001c82:	3708      	adds	r7, #8
 8001c84:	46bd      	mov	sp, r7
 8001c86:	bd80      	pop	{r7, pc}

08001c88 <_ZN6SX128xUt0_D1Ev>:
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	b082      	sub	sp, #8
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	6078      	str	r0, [r7, #4]
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	3380      	adds	r3, #128	; 0x80
 8001c94:	4618      	mov	r0, r3
 8001c96:	f7ff ffea 	bl	8001c6e <_ZNSt8functionIFvbEED1Ev>
 8001c9a:	687b      	ldr	r3, [r7, #4]
 8001c9c:	3370      	adds	r3, #112	; 0x70
 8001c9e:	4618      	mov	r0, r3
 8001ca0:	f7ff ffd8 	bl	8001c54 <_ZNSt8functionIFvN6SX128x16IrqRangingCode_tEEED1Ev>
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	3360      	adds	r3, #96	; 0x60
 8001ca8:	4618      	mov	r0, r3
 8001caa:	f7ff ffc6 	bl	8001c3a <_ZNSt8functionIFvN6SX128x14IrqErrorCode_tEEED1Ev>
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	3350      	adds	r3, #80	; 0x50
 8001cb2:	4618      	mov	r0, r3
 8001cb4:	f7ff ffb4 	bl	8001c20 <_ZNSt8functionIFvvEED1Ev>
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	3340      	adds	r3, #64	; 0x40
 8001cbc:	4618      	mov	r0, r3
 8001cbe:	f7ff ffaf 	bl	8001c20 <_ZNSt8functionIFvvEED1Ev>
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	3330      	adds	r3, #48	; 0x30
 8001cc6:	4618      	mov	r0, r3
 8001cc8:	f7ff ffaa 	bl	8001c20 <_ZNSt8functionIFvvEED1Ev>
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	3320      	adds	r3, #32
 8001cd0:	4618      	mov	r0, r3
 8001cd2:	f7ff ffa5 	bl	8001c20 <_ZNSt8functionIFvvEED1Ev>
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	3310      	adds	r3, #16
 8001cda:	4618      	mov	r0, r3
 8001cdc:	f7ff ffa0 	bl	8001c20 <_ZNSt8functionIFvvEED1Ev>
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	4618      	mov	r0, r3
 8001ce4:	f7ff ff9c 	bl	8001c20 <_ZNSt8functionIFvvEED1Ev>
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	4618      	mov	r0, r3
 8001cec:	3708      	adds	r7, #8
 8001cee:	46bd      	mov	sp, r7
 8001cf0:	bd80      	pop	{r7, pc}
	...

08001cf4 <_ZN6SX128xD1Ev>:
 8001cf4:	b580      	push	{r7, lr}
 8001cf6:	b082      	sub	sp, #8
 8001cf8:	af00      	add	r7, sp, #0
 8001cfa:	6078      	str	r0, [r7, #4]
 8001cfc:	4a06      	ldr	r2, [pc, #24]	; (8001d18 <_ZN6SX128xD1Ev+0x24>)
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	601a      	str	r2, [r3, #0]
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	3318      	adds	r3, #24
 8001d06:	4618      	mov	r0, r3
 8001d08:	f7ff ffbe 	bl	8001c88 <_ZN6SX128xUt0_D1Ev>
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	4618      	mov	r0, r3
 8001d10:	3708      	adds	r7, #8
 8001d12:	46bd      	mov	sp, r7
 8001d14:	bd80      	pop	{r7, pc}
 8001d16:	bf00      	nop
 8001d18:	080095f8 	.word	0x080095f8

08001d1c <_ZN6SX128xD0Ev>:
 8001d1c:	b580      	push	{r7, lr}
 8001d1e:	b082      	sub	sp, #8
 8001d20:	af00      	add	r7, sp, #0
 8001d22:	6078      	str	r0, [r7, #4]
 8001d24:	6878      	ldr	r0, [r7, #4]
 8001d26:	f7ff ffe5 	bl	8001cf4 <_ZN6SX128xD1Ev>
 8001d2a:	21d0      	movs	r1, #208	; 0xd0
 8001d2c:	6878      	ldr	r0, [r7, #4]
 8001d2e:	f004 fda2 	bl	8006876 <_ZdlPvj>
 8001d32:	687b      	ldr	r3, [r7, #4]
 8001d34:	4618      	mov	r0, r3
 8001d36:	3708      	adds	r7, #8
 8001d38:	46bd      	mov	sp, r7
 8001d3a:	bd80      	pop	{r7, pc}

08001d3c <_ZN19SX128x_formal_boardD1Ev>:
 8001d3c:	b580      	push	{r7, lr}
 8001d3e:	b082      	sub	sp, #8
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	6078      	str	r0, [r7, #4]
 8001d44:	4a05      	ldr	r2, [pc, #20]	; (8001d5c <_ZN19SX128x_formal_boardD1Ev+0x20>)
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	601a      	str	r2, [r3, #0]
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	4618      	mov	r0, r3
 8001d4e:	f7ff ffd1 	bl	8001cf4 <_ZN6SX128xD1Ev>
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	4618      	mov	r0, r3
 8001d56:	3708      	adds	r7, #8
 8001d58:	46bd      	mov	sp, r7
 8001d5a:	bd80      	pop	{r7, pc}
 8001d5c:	0800965c 	.word	0x0800965c

08001d60 <_ZN19SX128x_formal_boardD0Ev>:
 8001d60:	b580      	push	{r7, lr}
 8001d62:	b082      	sub	sp, #8
 8001d64:	af00      	add	r7, sp, #0
 8001d66:	6078      	str	r0, [r7, #4]
 8001d68:	6878      	ldr	r0, [r7, #4]
 8001d6a:	f7ff ffe7 	bl	8001d3c <_ZN19SX128x_formal_boardD1Ev>
 8001d6e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 8001d72:	6878      	ldr	r0, [r7, #4]
 8001d74:	f004 fd7f 	bl	8006876 <_ZdlPvj>
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	4618      	mov	r0, r3
 8001d7c:	3708      	adds	r7, #8
 8001d7e:	46bd      	mov	sp, r7
 8001d80:	bd80      	pop	{r7, pc}

08001d82 <_ZN19SX128x_formal_board24CommonTransceiverSettingEv>:

extern TIM_HandleTypeDef htim1;
extern int irq_timeout_times;

void SX128x_formal_board::CommonTransceiverSetting()
{
 8001d82:	b580      	push	{r7, lr}
 8001d84:	b082      	sub	sp, #8
 8001d86:	af00      	add	r7, sp, #0
 8001d88:	6078      	str	r0, [r7, #4]
    SetStandby((RadioStandbyModes_t)MODE_STDBY_XOSC);
 8001d8a:	687b      	ldr	r3, [r7, #4]
 8001d8c:	2103      	movs	r1, #3
 8001d8e:	4618      	mov	r0, r3
 8001d90:	f7ff f96f 	bl	8001072 <_ZN6SX128x10SetStandbyENS_19RadioStandbyModes_tE>
    SetPacketType(PACKET_TYPE_LORA);
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	2101      	movs	r1, #1
 8001d98:	4618      	mov	r0, r3
 8001d9a:	f7ff f9bb 	bl	8001114 <_ZN6SX128x13SetPacketTypeENS_18RadioPacketTypes_tE>
    SetRfFrequency(RfFrequency);
 8001d9e:	687a      	ldr	r2, [r7, #4]
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8001da6:	4619      	mov	r1, r3
 8001da8:	4610      	mov	r0, r2
 8001daa:	f7ff f9ca 	bl	8001142 <_ZN6SX128x14SetRfFrequencyEm>
    SetBufferBaseAddresses(0x80, 0x00);
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	2200      	movs	r2, #0
 8001db2:	2180      	movs	r1, #128	; 0x80
 8001db4:	4618      	mov	r0, r3
 8001db6:	f7ff fa10 	bl	80011da <_ZN6SX128x22SetBufferBaseAddressesEhh>
    SetModulationParams(mparams);
 8001dba:	687a      	ldr	r2, [r7, #4]
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	f503 7390 	add.w	r3, r3, #288	; 0x120
 8001dc2:	4619      	mov	r1, r3
 8001dc4:	4610      	mov	r0, r2
 8001dc6:	f7ff fa23 	bl	8001210 <_ZN6SX128x19SetModulationParamsERKNS_18ModulationParams_tE>
    SetPacketParams(pparams);
 8001dca:	687a      	ldr	r2, [r7, #4]
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	f203 132d 	addw	r3, r3, #301	; 0x12d
 8001dd2:	4619      	mov	r1, r3
 8001dd4:	4610      	mov	r0, r2
 8001dd6:	f7ff faa3 	bl	8001320 <_ZN6SX128x15SetPacketParamsERKNS_14PacketParams_tE>
}
 8001dda:	bf00      	nop
 8001ddc:	3708      	adds	r7, #8
 8001dde:	46bd      	mov	sp, r7
 8001de0:	bd80      	pop	{r7, pc}

08001de2 <_ZN19SX128x_formal_board9TxSettingEv>:

void SX128x_formal_board::TxSetting()
{
 8001de2:	b580      	push	{r7, lr}
 8001de4:	b084      	sub	sp, #16
 8001de6:	af02      	add	r7, sp, #8
 8001de8:	6078      	str	r0, [r7, #4]
	SetTxParams(13, RADIO_RAMP_02_US);
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	2200      	movs	r2, #0
 8001dee:	210d      	movs	r1, #13
 8001df0:	4618      	mov	r0, r3
 8001df2:	f7ff f9d6 	bl	80011a2 <_ZN6SX128x11SetTxParamsEaNS_16RadioRampTimes_tE>
	InterruptSetting();
 8001df6:	6878      	ldr	r0, [r7, #4]
 8001df8:	f000 f80e 	bl	8001e18 <_ZN19SX128x_formal_board16InterruptSettingEv>
	SetDioIrqParams(0xFFFF, 0xFFFF, 0x0000, 0x0000);
 8001dfc:	6878      	ldr	r0, [r7, #4]
 8001dfe:	2300      	movs	r3, #0
 8001e00:	9300      	str	r3, [sp, #0]
 8001e02:	2300      	movs	r3, #0
 8001e04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001e08:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001e0c:	f7ff fb40 	bl	8001490 <_ZN6SX128x15SetDioIrqParamsEtttt>
}
 8001e10:	bf00      	nop
 8001e12:	3708      	adds	r7, #8
 8001e14:	46bd      	mov	sp, r7
 8001e16:	bd80      	pop	{r7, pc}

08001e18 <_ZN19SX128x_formal_board16InterruptSettingEv>:
	ClearIrqStatus(0xFFFF);
	return 0;
}

inline void SX128x_formal_board::InterruptSetting()
{
 8001e18:	b580      	push	{r7, lr}
 8001e1a:	b084      	sub	sp, #16
 8001e1c:	af02      	add	r7, sp, #8
 8001e1e:	6078      	str	r0, [r7, #4]
	SetDioIrqParams(0x0003, 0x0003, 0x0000, 0x0000);
 8001e20:	6878      	ldr	r0, [r7, #4]
 8001e22:	2300      	movs	r3, #0
 8001e24:	9300      	str	r3, [sp, #0]
 8001e26:	2300      	movs	r3, #0
 8001e28:	2203      	movs	r2, #3
 8001e2a:	2103      	movs	r1, #3
 8001e2c:	f7ff fb30 	bl	8001490 <_ZN6SX128x15SetDioIrqParamsEtttt>
}
 8001e30:	bf00      	nop
 8001e32:	3708      	adds	r7, #8
 8001e34:	46bd      	mov	sp, r7
 8001e36:	bd80      	pop	{r7, pc}

08001e38 <_ZN19SX128x_formal_board4InitEv>:
{
	ClearIrqStatus(0xFFFF);
}

uint8_t SX128x_formal_board::Init()
{
 8001e38:	b580      	push	{r7, lr}
 8001e3a:	b086      	sub	sp, #24
 8001e3c:	af00      	add	r7, sp, #0
 8001e3e:	6078      	str	r0, [r7, #4]
	Reset();
 8001e40:	687a      	ldr	r2, [r7, #4]
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	681b      	ldr	r3, [r3, #0]
 8001e46:	3328      	adds	r3, #40	; 0x28
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	4610      	mov	r0, r2
 8001e4c:	4798      	blx	r3
	// Wakeup();
	// SetRegistersDefault();

	uint8_t rx[2], tx[2];
	*(uint32_t*)tx = 0x80 | 0x01 << 8;
 8001e4e:	f107 0310 	add.w	r3, r7, #16
 8001e52:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001e56:	601a      	str	r2, [r3, #0]
	HalSpiTransferDelay(rx, tx, 2);
 8001e58:	f107 0210 	add.w	r2, r7, #16
 8001e5c:	f107 0114 	add.w	r1, r7, #20
 8001e60:	2302      	movs	r3, #2
 8001e62:	6878      	ldr	r0, [r7, #4]
 8001e64:	f7ff feb8 	bl	8001bd8 <_ZN19SX128x_formal_board19HalSpiTransferDelayEPhPKht>
	HAL_Delay(10);
 8001e68:	200a      	movs	r0, #10
 8001e6a:	f001 f841 	bl	8002ef0 <HAL_Delay>
	RadioStatus_t status;
	status = GetStatus();
 8001e6e:	687a      	ldr	r2, [r7, #4]
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	681b      	ldr	r3, [r3, #0]
 8001e74:	3358      	adds	r3, #88	; 0x58
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	4610      	mov	r0, r2
 8001e7a:	4798      	blx	r3
 8001e7c:	4603      	mov	r3, r0
 8001e7e:	733b      	strb	r3, [r7, #12]
	if(status.Fields.CmdStatus != 0x01)
 8001e80:	7b3b      	ldrb	r3, [r7, #12]
 8001e82:	f003 031c 	and.w	r3, r3, #28
 8001e86:	b2db      	uxtb	r3, r3
 8001e88:	2b04      	cmp	r3, #4
 8001e8a:	d001      	beq.n	8001e90 <_ZN19SX128x_formal_board4InitEv+0x58>
		return 1;
 8001e8c:	2301      	movs	r3, #1
 8001e8e:	e00b      	b.n	8001ea8 <_ZN19SX128x_formal_board4InitEv+0x70>
	if(status.Fields.ChipMode != 0x03)
 8001e90:	7b3b      	ldrb	r3, [r7, #12]
 8001e92:	f023 031f 	bic.w	r3, r3, #31
 8001e96:	b2db      	uxtb	r3, r3
 8001e98:	2b60      	cmp	r3, #96	; 0x60
 8001e9a:	d001      	beq.n	8001ea0 <_ZN19SX128x_formal_board4InitEv+0x68>
		return 1;
 8001e9c:	2301      	movs	r3, #1
 8001e9e:	e003      	b.n	8001ea8 <_ZN19SX128x_formal_board4InitEv+0x70>

	CommonTransceiverSetting();
 8001ea0:	6878      	ldr	r0, [r7, #4]
 8001ea2:	f7ff ff6e 	bl	8001d82 <_ZN19SX128x_formal_board24CommonTransceiverSettingEv>
	return 0;
 8001ea6:	2300      	movs	r3, #0
}
 8001ea8:	4618      	mov	r0, r3
 8001eaa:	3718      	adds	r7, #24
 8001eac:	46bd      	mov	sp, r7
 8001eae:	bd80      	pop	{r7, pc}

08001eb0 <_ZN6SX128xUt0_C1Ev>:
	struct {
 8001eb0:	b580      	push	{r7, lr}
 8001eb2:	b082      	sub	sp, #8
 8001eb4:	af00      	add	r7, sp, #0
 8001eb6:	6078      	str	r0, [r7, #4]
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	4618      	mov	r0, r3
 8001ebc:	f000 f985 	bl	80021ca <_ZNSt8functionIFvvEEC1Ev>
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	3310      	adds	r3, #16
 8001ec4:	4618      	mov	r0, r3
 8001ec6:	f000 f980 	bl	80021ca <_ZNSt8functionIFvvEEC1Ev>
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	3320      	adds	r3, #32
 8001ece:	4618      	mov	r0, r3
 8001ed0:	f000 f97b 	bl	80021ca <_ZNSt8functionIFvvEEC1Ev>
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	3330      	adds	r3, #48	; 0x30
 8001ed8:	4618      	mov	r0, r3
 8001eda:	f000 f976 	bl	80021ca <_ZNSt8functionIFvvEEC1Ev>
 8001ede:	687b      	ldr	r3, [r7, #4]
 8001ee0:	3340      	adds	r3, #64	; 0x40
 8001ee2:	4618      	mov	r0, r3
 8001ee4:	f000 f971 	bl	80021ca <_ZNSt8functionIFvvEEC1Ev>
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	3350      	adds	r3, #80	; 0x50
 8001eec:	4618      	mov	r0, r3
 8001eee:	f000 f96c 	bl	80021ca <_ZNSt8functionIFvvEEC1Ev>
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	3360      	adds	r3, #96	; 0x60
 8001ef6:	4618      	mov	r0, r3
 8001ef8:	f000 f97d 	bl	80021f6 <_ZNSt8functionIFvN6SX128x14IrqErrorCode_tEEEC1Ev>
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	3370      	adds	r3, #112	; 0x70
 8001f00:	4618      	mov	r0, r3
 8001f02:	f000 f98e 	bl	8002222 <_ZNSt8functionIFvN6SX128x16IrqRangingCode_tEEEC1Ev>
 8001f06:	687b      	ldr	r3, [r7, #4]
 8001f08:	3380      	adds	r3, #128	; 0x80
 8001f0a:	4618      	mov	r0, r3
 8001f0c:	f000 f99f 	bl	800224e <_ZNSt8functionIFvbEEC1Ev>
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	4618      	mov	r0, r3
 8001f14:	3708      	adds	r7, #8
 8001f16:	46bd      	mov	sp, r7
 8001f18:	bd80      	pop	{r7, pc}
 8001f1a:	0000      	movs	r0, r0
 8001f1c:	0000      	movs	r0, r0
	...

08001f20 <_ZN6SX128xC1Ev>:
	SX128x() = default;
 8001f20:	b580      	push	{r7, lr}
 8001f22:	b082      	sub	sp, #8
 8001f24:	af00      	add	r7, sp, #0
 8001f26:	6078      	str	r0, [r7, #4]
 8001f28:	4a1f      	ldr	r2, [pc, #124]	; (8001fa8 <_ZN6SX128xC1Ev+0x88>)
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	601a      	str	r2, [r3, #0]
 8001f2e:	6879      	ldr	r1, [r7, #4]
 8001f30:	a31b      	add	r3, pc, #108	; (adr r3, 8001fa0 <_ZN6SX128xC1Ev+0x80>)
 8001f32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f36:	e9c1 2302 	strd	r2, r3, [r1, #8]
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	2200      	movs	r2, #0
 8001f3e:	741a      	strb	r2, [r3, #16]
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001f46:	825a      	strh	r2, [r3, #18]
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	751a      	strb	r2, [r3, #20]
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	2200      	movs	r2, #0
 8001f52:	82da      	strh	r2, [r3, #22]
 8001f54:	687b      	ldr	r3, [r7, #4]
 8001f56:	3318      	adds	r3, #24
 8001f58:	4618      	mov	r0, r3
 8001f5a:	f7ff ffa9 	bl	8001eb0 <_ZN6SX128xUt0_C1Ev>
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	2202      	movs	r2, #2
 8001f62:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	220f      	movs	r2, #15
 8001f6a:	f883 20a9 	strb.w	r2, [r3, #169]	; 0xa9
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	220a      	movs	r2, #10
 8001f72:	f883 20aa 	strb.w	r2, [r3, #170]	; 0xaa
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	33ab      	adds	r3, #171	; 0xab
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	601a      	str	r2, [r3, #0]
 8001f7e:	605a      	str	r2, [r3, #4]
 8001f80:	609a      	str	r2, [r3, #8]
 8001f82:	731a      	strb	r2, [r3, #12]
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	33b8      	adds	r3, #184	; 0xb8
 8001f88:	2200      	movs	r2, #0
 8001f8a:	601a      	str	r2, [r3, #0]
 8001f8c:	605a      	str	r2, [r3, #4]
 8001f8e:	609a      	str	r2, [r3, #8]
 8001f90:	60da      	str	r2, [r3, #12]
 8001f92:	611a      	str	r2, [r3, #16]
 8001f94:	615a      	str	r2, [r3, #20]
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	4618      	mov	r0, r3
 8001f9a:	3708      	adds	r7, #8
 8001f9c:	46bd      	mov	sp, r7
 8001f9e:	bd80      	pop	{r7, pc}
 8001fa0:	00000000 	.word	0x00000000
 8001fa4:	4068cba8 	.word	0x4068cba8
 8001fa8:	080095f8 	.word	0x080095f8

08001fac <_ZN19SX128x_formal_boardC1Ev>:

SX128x_formal_board::SX128x_formal_board()
 8001fac:	b580      	push	{r7, lr}
 8001fae:	b082      	sub	sp, #8
 8001fb0:	af00      	add	r7, sp, #0
 8001fb2:	6078      	str	r0, [r7, #4]
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	4618      	mov	r0, r3
 8001fb8:	f7ff ffb2 	bl	8001f20 <_ZN6SX128xC1Ev>
 8001fbc:	4a27      	ldr	r2, [pc, #156]	; (800205c <_ZN19SX128x_formal_boardC1Ev+0xb0>)
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	601a      	str	r2, [r3, #0]
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	33d0      	adds	r3, #208	; 0xd0
 8001fc6:	2240      	movs	r2, #64	; 0x40
 8001fc8:	2100      	movs	r1, #0
 8001fca:	4618      	mov	r0, r3
 8001fcc:	f005 fa93 	bl	80074f6 <memset>
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	f103 02d0 	add.w	r2, r3, #208	; 0xd0
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	f103 02d0 	add.w	r2, r3, #208	; 0xd0
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	2200      	movs	r2, #0
 8001fec:	f883 2118 	strb.w	r2, [r3, #280]	; 0x118
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	f883 2119 	strb.w	r2, [r3, #281]	; 0x119
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	4a19      	ldr	r2, [pc, #100]	; (8002060 <_ZN19SX128x_formal_boardC1Ev+0xb4>)
 8001ffc:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
{
	mparams.PacketType = PACKET_TYPE_LORA;
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	2201      	movs	r2, #1
 8002004:	f883 2120 	strb.w	r2, [r3, #288]	; 0x120
    mparams.Params.LoRa.SpreadingFactor = LORA_SF7;
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	2270      	movs	r2, #112	; 0x70
 800200c:	f883 2124 	strb.w	r2, [r3, #292]	; 0x124
	mparams.Params.LoRa.Bandwidth = LORA_BW_0800;
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	2218      	movs	r2, #24
 8002014:	f883 2125 	strb.w	r2, [r3, #293]	; 0x125
	mparams.Params.LoRa.CodingRate = LORA_CR_4_5;
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	2201      	movs	r2, #1
 800201c:	f883 2126 	strb.w	r2, [r3, #294]	; 0x126

	pparams.PacketType = PACKET_TYPE_LORA;
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	2201      	movs	r2, #1
 8002024:	f883 212d 	strb.w	r2, [r3, #301]	; 0x12d
	pparams.Params.LoRa.HeaderType = LORA_PACKET_FIXED_LENGTH;
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	2280      	movs	r2, #128	; 0x80
 800202c:	f883 2136 	strb.w	r2, [r3, #310]	; 0x136
	pparams.Params.LoRa.InvertIQ = LORA_IQ_NORMAL;
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	2240      	movs	r2, #64	; 0x40
 8002034:	f883 2139 	strb.w	r2, [r3, #313]	; 0x139
	pparams.Params.LoRa.Crc = LORA_CRC_ON;
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	2220      	movs	r2, #32
 800203c:	f883 2138 	strb.w	r2, [r3, #312]	; 0x138
	pparams.Params.LoRa.PayloadLength = PACKET_SIZE;
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	2208      	movs	r2, #8
 8002044:	f883 2137 	strb.w	r2, [r3, #311]	; 0x137
	pparams.Params.LoRa.PreambleLength = 12;
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	220c      	movs	r2, #12
 800204c:	f883 2135 	strb.w	r2, [r3, #309]	; 0x135

//	callbacks.txDone = &tx_recursion();
	
}
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	4618      	mov	r0, r3
 8002054:	3708      	adds	r7, #8
 8002056:	46bd      	mov	sp, r7
 8002058:	bd80      	pop	{r7, pc}
 800205a:	bf00      	nop
 800205c:	0800965c 	.word	0x0800965c
 8002060:	8f0d1800 	.word	0x8f0d1800

08002064 <_ZN19SX128x_formal_board9PutPacketEPh>:

uint8_t SX128x_formal_board::PutPacket(uint8_t* in)
{
 8002064:	b580      	push	{r7, lr}
 8002066:	b086      	sub	sp, #24
 8002068:	af02      	add	r7, sp, #8
 800206a:	6078      	str	r0, [r7, #4]
 800206c:	6039      	str	r1, [r7, #0]

	if(tx_length == 8) {
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	f993 3118 	ldrsb.w	r3, [r3, #280]	; 0x118
 8002074:	2b08      	cmp	r3, #8
 8002076:	d101      	bne.n	800207c <_ZN19SX128x_formal_board9PutPacketEPh+0x18>
		return 1;
 8002078:	2301      	movs	r3, #1
 800207a:	e045      	b.n	8002108 <_ZN19SX128x_formal_board9PutPacketEPh+0xa4>
	} else {
		*(uint32_t*)tx_eprt = *(uint32_t*)in;
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8002082:	683a      	ldr	r2, [r7, #0]
 8002084:	6812      	ldr	r2, [r2, #0]
 8002086:	601a      	str	r2, [r3, #0]
		*(uint32_t*)(tx_eprt+4) = *(uint32_t*)(in+4);
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800208e:	3304      	adds	r3, #4
 8002090:	683a      	ldr	r2, [r7, #0]
 8002092:	6852      	ldr	r2, [r2, #4]
 8002094:	601a      	str	r2, [r3, #0]
		if(tx_eprt == tx_fifo[7])
 8002096:	687b      	ldr	r3, [r7, #4]
 8002098:	f8d3 2114 	ldr.w	r2, [r3, #276]	; 0x114
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	f503 7384 	add.w	r3, r3, #264	; 0x108
 80020a2:	429a      	cmp	r2, r3
 80020a4:	d106      	bne.n	80020b4 <_ZN19SX128x_formal_board9PutPacketEPh+0x50>
		{
			tx_eprt = tx_fifo[0];
 80020a6:	687b      	ldr	r3, [r7, #4]
 80020a8:	f103 02d0 	add.w	r2, r3, #208	; 0xd0
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
 80020b2:	e007      	b.n	80020c4 <_ZN19SX128x_formal_board9PutPacketEPh+0x60>
		}
		else
		{
			tx_eprt += 8;
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80020ba:	f103 0208 	add.w	r2, r3, #8
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
		}
		tx_length ++;
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	f993 3118 	ldrsb.w	r3, [r3, #280]	; 0x118
 80020ca:	b2db      	uxtb	r3, r3
 80020cc:	3301      	adds	r3, #1
 80020ce:	b2db      	uxtb	r3, r3
 80020d0:	b25a      	sxtb	r2, r3
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	f883 2118 	strb.w	r2, [r3, #280]	; 0x118
		if(!tx_activated)
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	f893 3119 	ldrb.w	r3, [r3, #281]	; 0x119
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d111      	bne.n	8002106 <_ZN19SX128x_formal_board9PutPacketEPh+0xa2>
		{
			TickTime_t t;
			t.PeriodBase = RADIO_TICK_SIZE_0015_US;
 80020e2:	2300      	movs	r3, #0
 80020e4:	733b      	strb	r3, [r7, #12]
			t.PeriodBaseCount = 0;
 80020e6:	2300      	movs	r3, #0
 80020e8:	81fb      	strh	r3, [r7, #14]
			tx_activated = 1;
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	2201      	movs	r2, #1
 80020ee:	f883 2119 	strb.w	r2, [r3, #281]	; 0x119
			SendPayload(tx_sprt, 8, t, 0x80);
 80020f2:	6878      	ldr	r0, [r7, #4]
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	f8d3 1110 	ldr.w	r1, [r3, #272]	; 0x110
 80020fa:	2380      	movs	r3, #128	; 0x80
 80020fc:	9300      	str	r3, [sp, #0]
 80020fe:	68fb      	ldr	r3, [r7, #12]
 8002100:	2208      	movs	r2, #8
 8002102:	f7ff fa4e 	bl	80015a2 <_ZN6SX128x11SendPayloadEPhhNS_10TickTime_sEh>
		}
	}
	return 0;
 8002106:	2300      	movs	r3, #0
}
 8002108:	4618      	mov	r0, r3
 800210a:	3710      	adds	r7, #16
 800210c:	46bd      	mov	sp, r7
 800210e:	bd80      	pop	{r7, pc}

08002110 <_ZN19SX128x_formal_board12tx_recursionEv>:
{
	return tx_length;
}

void SX128x_formal_board::tx_recursion()
{
 8002110:	b580      	push	{r7, lr}
 8002112:	b086      	sub	sp, #24
 8002114:	af02      	add	r7, sp, #8
 8002116:	6078      	str	r0, [r7, #4]

	uint16_t irqRegs = GetIrqStatus();
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	4618      	mov	r0, r3
 800211c:	f7ff f9f3 	bl	8001506 <_ZN6SX128x12GetIrqStatusEv>
 8002120:	4603      	mov	r3, r0
 8002122:	81fb      	strh	r3, [r7, #14]
	if(!(irqRegs|IRQ_TX_DONE))
		return;
	ClearIrqStatus(IRQ_TX_DONE);
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	2101      	movs	r1, #1
 8002128:	4618      	mov	r0, r3
 800212a:	f7ff fa06 	bl	800153a <_ZN6SX128x14ClearIrqStatusEt>
	if(tx_sprt == tx_fifo[7])
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	f8d3 2110 	ldr.w	r2, [r3, #272]	; 0x110
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800213a:	429a      	cmp	r2, r3
 800213c:	d106      	bne.n	800214c <_ZN19SX128x_formal_board12tx_recursionEv+0x3c>
	{
		tx_sprt = tx_fifo[0];
 800213e:	687b      	ldr	r3, [r7, #4]
 8002140:	f103 02d0 	add.w	r2, r3, #208	; 0xd0
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
 800214a:	e006      	b.n	800215a <_ZN19SX128x_formal_board12tx_recursionEv+0x4a>
	}
	else
	{
		tx_sprt += 4;
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 8002152:	1d1a      	adds	r2, r3, #4
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
	}
	tx_length--;
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	f993 3118 	ldrsb.w	r3, [r3, #280]	; 0x118
 8002160:	b2db      	uxtb	r3, r3
 8002162:	3b01      	subs	r3, #1
 8002164:	b2db      	uxtb	r3, r3
 8002166:	b25a      	sxtb	r2, r3
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	f883 2118 	strb.w	r2, [r3, #280]	; 0x118
	if(tx_length >= 0)
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	f993 3118 	ldrsb.w	r3, [r3, #280]	; 0x118
 8002174:	2b00      	cmp	r3, #0
 8002176:	db04      	blt.n	8002182 <_ZN19SX128x_formal_board12tx_recursionEv+0x72>
	{
		tx_activated = 0;
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	2200      	movs	r2, #0
 800217c:	f883 2119 	strb.w	r2, [r3, #281]	; 0x119
 8002180:	e00d      	b.n	800219e <_ZN19SX128x_formal_board12tx_recursionEv+0x8e>
		return;
	}
	TickTime_t t;
	t.PeriodBase = RADIO_TICK_SIZE_0015_US;
 8002182:	2300      	movs	r3, #0
 8002184:	723b      	strb	r3, [r7, #8]
	t.PeriodBaseCount = 0;
 8002186:	2300      	movs	r3, #0
 8002188:	817b      	strh	r3, [r7, #10]
	SendPayload(tx_sprt, 8, t, 0x80);
 800218a:	6878      	ldr	r0, [r7, #4]
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	f8d3 1110 	ldr.w	r1, [r3, #272]	; 0x110
 8002192:	2380      	movs	r3, #128	; 0x80
 8002194:	9300      	str	r3, [sp, #0]
 8002196:	68bb      	ldr	r3, [r7, #8]
 8002198:	2208      	movs	r2, #8
 800219a:	f7ff fa02 	bl	80015a2 <_ZN6SX128x11SendPayloadEPhhNS_10TickTime_sEh>

}
 800219e:	3710      	adds	r7, #16
 80021a0:	46bd      	mov	sp, r7
 80021a2:	bd80      	pop	{r7, pc}

080021a4 <_ZNSt14_Function_baseC1Ev>:
    _Function_base() = default;
 80021a4:	b480      	push	{r7}
 80021a6:	b083      	sub	sp, #12
 80021a8:	af00      	add	r7, sp, #0
 80021aa:	6078      	str	r0, [r7, #4]
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	461a      	mov	r2, r3
 80021b0:	2300      	movs	r3, #0
 80021b2:	6013      	str	r3, [r2, #0]
 80021b4:	6053      	str	r3, [r2, #4]
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	2200      	movs	r2, #0
 80021ba:	609a      	str	r2, [r3, #8]
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	4618      	mov	r0, r3
 80021c0:	370c      	adds	r7, #12
 80021c2:	46bd      	mov	sp, r7
 80021c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021c8:	4770      	bx	lr

080021ca <_ZNSt8functionIFvvEEC1Ev>:

      /**
       *  @brief Default construct creates an empty function call wrapper.
       *  @post `!(bool)*this`
       */
      function() noexcept
 80021ca:	b580      	push	{r7, lr}
 80021cc:	b082      	sub	sp, #8
 80021ce:	af00      	add	r7, sp, #0
 80021d0:	6078      	str	r0, [r7, #4]
      : _Function_base() { }
 80021d2:	687b      	ldr	r3, [r7, #4]
 80021d4:	461a      	mov	r2, r3
 80021d6:	2300      	movs	r3, #0
 80021d8:	6013      	str	r3, [r2, #0]
 80021da:	6053      	str	r3, [r2, #4]
 80021dc:	6093      	str	r3, [r2, #8]
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	4618      	mov	r0, r3
 80021e2:	f7ff ffdf 	bl	80021a4 <_ZNSt14_Function_baseC1Ev>
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	2200      	movs	r2, #0
 80021ea:	60da      	str	r2, [r3, #12]
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	4618      	mov	r0, r3
 80021f0:	3708      	adds	r7, #8
 80021f2:	46bd      	mov	sp, r7
 80021f4:	bd80      	pop	{r7, pc}

080021f6 <_ZNSt8functionIFvN6SX128x14IrqErrorCode_tEEEC1Ev>:
      function() noexcept
 80021f6:	b580      	push	{r7, lr}
 80021f8:	b082      	sub	sp, #8
 80021fa:	af00      	add	r7, sp, #0
 80021fc:	6078      	str	r0, [r7, #4]
      : _Function_base() { }
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	461a      	mov	r2, r3
 8002202:	2300      	movs	r3, #0
 8002204:	6013      	str	r3, [r2, #0]
 8002206:	6053      	str	r3, [r2, #4]
 8002208:	6093      	str	r3, [r2, #8]
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	4618      	mov	r0, r3
 800220e:	f7ff ffc9 	bl	80021a4 <_ZNSt14_Function_baseC1Ev>
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	2200      	movs	r2, #0
 8002216:	60da      	str	r2, [r3, #12]
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	4618      	mov	r0, r3
 800221c:	3708      	adds	r7, #8
 800221e:	46bd      	mov	sp, r7
 8002220:	bd80      	pop	{r7, pc}

08002222 <_ZNSt8functionIFvN6SX128x16IrqRangingCode_tEEEC1Ev>:
      function() noexcept
 8002222:	b580      	push	{r7, lr}
 8002224:	b082      	sub	sp, #8
 8002226:	af00      	add	r7, sp, #0
 8002228:	6078      	str	r0, [r7, #4]
      : _Function_base() { }
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	461a      	mov	r2, r3
 800222e:	2300      	movs	r3, #0
 8002230:	6013      	str	r3, [r2, #0]
 8002232:	6053      	str	r3, [r2, #4]
 8002234:	6093      	str	r3, [r2, #8]
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	4618      	mov	r0, r3
 800223a:	f7ff ffb3 	bl	80021a4 <_ZNSt14_Function_baseC1Ev>
 800223e:	687b      	ldr	r3, [r7, #4]
 8002240:	2200      	movs	r2, #0
 8002242:	60da      	str	r2, [r3, #12]
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	4618      	mov	r0, r3
 8002248:	3708      	adds	r7, #8
 800224a:	46bd      	mov	sp, r7
 800224c:	bd80      	pop	{r7, pc}

0800224e <_ZNSt8functionIFvbEEC1Ev>:
      function() noexcept
 800224e:	b580      	push	{r7, lr}
 8002250:	b082      	sub	sp, #8
 8002252:	af00      	add	r7, sp, #0
 8002254:	6078      	str	r0, [r7, #4]
      : _Function_base() { }
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	461a      	mov	r2, r3
 800225a:	2300      	movs	r3, #0
 800225c:	6013      	str	r3, [r2, #0]
 800225e:	6053      	str	r3, [r2, #4]
 8002260:	6093      	str	r3, [r2, #8]
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	4618      	mov	r0, r3
 8002266:	f7ff ff9d 	bl	80021a4 <_ZNSt14_Function_baseC1Ev>
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	2200      	movs	r2, #0
 800226e:	60da      	str	r2, [r3, #12]
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	4618      	mov	r0, r3
 8002274:	3708      	adds	r7, #8
 8002276:	46bd      	mov	sp, r7
 8002278:	bd80      	pop	{r7, pc}
 800227a:	0000      	movs	r0, r0
 800227c:	0000      	movs	r0, r0
	...

08002280 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002280:	b580      	push	{r7, lr}
 8002282:	b0a4      	sub	sp, #144	; 0x90
 8002284:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002286:	f000 fdb7 	bl	8002df8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800228a:	f000 f90b 	bl	80024a4 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800228e:	f000 fa9f 	bl	80027d0 <_ZL12MX_GPIO_Initv>
  MX_USART2_UART_Init();
 8002292:	f000 fa69 	bl	8002768 <_ZL19MX_USART2_UART_Initv>
  MX_SPI1_Init();
 8002296:	f000 f965 	bl	8002564 <_ZL12MX_SPI1_Initv>
  MX_TIM1_Init();
 800229a:	f000 f9a5 	bl	80025e8 <_ZL12MX_TIM1_Initv>
  MX_TIM2_Init();
 800229e:	f000 fa05 	bl	80026ac <_ZL12MX_TIM2_Initv>
  /* USER CODE BEGIN 2 */

  uint8_t test_packet[8] = {1, 2, 3, 4, 5, 6, 7, 8};
 80022a2:	4a79      	ldr	r2, [pc, #484]	; (8002488 <main+0x208>)
 80022a4:	f107 0308 	add.w	r3, r7, #8
 80022a8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80022ac:	e883 0003 	stmia.w	r3, {r0, r1}
  uint8_t rx;

  rx = a.Init();
 80022b0:	4876      	ldr	r0, [pc, #472]	; (800248c <main+0x20c>)
 80022b2:	f7ff fdc1 	bl	8001e38 <_ZN19SX128x_formal_board4InitEv>
 80022b6:	4603      	mov	r3, r0
 80022b8:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  if(rx == 0)
 80022bc:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 80022c0:	2b00      	cmp	r3, #0
 80022c2:	d175      	bne.n	80023b0 <main+0x130>
  {
	  uart_buf_len = sprintf(uart_buf, "SX1280 Initialize success\r\n");
 80022c4:	f107 0310 	add.w	r3, r7, #16
 80022c8:	4971      	ldr	r1, [pc, #452]	; (8002490 <main+0x210>)
 80022ca:	4618      	mov	r0, r3
 80022cc:	f005 f8b0 	bl	8007430 <siprintf>
 80022d0:	67b8      	str	r0, [r7, #120]	; 0x78
	  HAL_UART_Transmit(&huart2, (uint8_t *)uart_buf, uart_buf_len, 100);
 80022d2:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80022d4:	b29a      	uxth	r2, r3
 80022d6:	f107 0110 	add.w	r1, r7, #16
 80022da:	2364      	movs	r3, #100	; 0x64
 80022dc:	486d      	ldr	r0, [pc, #436]	; (8002494 <main+0x214>)
 80022de:	f003 fd73 	bl	8005dc8 <HAL_UART_Transmit>
	  HAL_UART_Transmit(&huart2, (uint8_t *)uart_buf, uart_buf_len, 100);
	  while(1);
  }


  HAL_TIM_Base_Start_IT(&htim2);
 80022e2:	486d      	ldr	r0, [pc, #436]	; (8002498 <main+0x218>)
 80022e4:	f003 f8da 	bl	800549c <HAL_TIM_Base_Start_IT>

  a.TxSetting();
 80022e8:	4868      	ldr	r0, [pc, #416]	; (800248c <main+0x20c>)
 80022ea:	f7ff fd7a 	bl	8001de2 <_ZN19SX128x_formal_board9TxSettingEv>
  rx = a.PutPacket(test_packet); //1
 80022ee:	f107 0308 	add.w	r3, r7, #8
 80022f2:	4619      	mov	r1, r3
 80022f4:	4865      	ldr	r0, [pc, #404]	; (800248c <main+0x20c>)
 80022f6:	f7ff feb5 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 80022fa:	4603      	mov	r3, r0
 80022fc:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  rx = a.PutPacket(test_packet); //2
 8002300:	f107 0308 	add.w	r3, r7, #8
 8002304:	4619      	mov	r1, r3
 8002306:	4861      	ldr	r0, [pc, #388]	; (800248c <main+0x20c>)
 8002308:	f7ff feac 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 800230c:	4603      	mov	r3, r0
 800230e:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  rx = a.PutPacket(test_packet); //3
 8002312:	f107 0308 	add.w	r3, r7, #8
 8002316:	4619      	mov	r1, r3
 8002318:	485c      	ldr	r0, [pc, #368]	; (800248c <main+0x20c>)
 800231a:	f7ff fea3 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 800231e:	4603      	mov	r3, r0
 8002320:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  rx = a.PutPacket(test_packet); //4
 8002324:	f107 0308 	add.w	r3, r7, #8
 8002328:	4619      	mov	r1, r3
 800232a:	4858      	ldr	r0, [pc, #352]	; (800248c <main+0x20c>)
 800232c:	f7ff fe9a 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 8002330:	4603      	mov	r3, r0
 8002332:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  rx = a.PutPacket(test_packet); //5
 8002336:	f107 0308 	add.w	r3, r7, #8
 800233a:	4619      	mov	r1, r3
 800233c:	4853      	ldr	r0, [pc, #332]	; (800248c <main+0x20c>)
 800233e:	f7ff fe91 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 8002342:	4603      	mov	r3, r0
 8002344:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  rx = a.PutPacket(test_packet); //6
 8002348:	f107 0308 	add.w	r3, r7, #8
 800234c:	4619      	mov	r1, r3
 800234e:	484f      	ldr	r0, [pc, #316]	; (800248c <main+0x20c>)
 8002350:	f7ff fe88 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 8002354:	4603      	mov	r3, r0
 8002356:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  rx = a.PutPacket(test_packet); //7
 800235a:	f107 0308 	add.w	r3, r7, #8
 800235e:	4619      	mov	r1, r3
 8002360:	484a      	ldr	r0, [pc, #296]	; (800248c <main+0x20c>)
 8002362:	f7ff fe7f 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 8002366:	4603      	mov	r3, r0
 8002368:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  rx = a.PutPacket(test_packet); //8
 800236c:	f107 0308 	add.w	r3, r7, #8
 8002370:	4619      	mov	r1, r3
 8002372:	4846      	ldr	r0, [pc, #280]	; (800248c <main+0x20c>)
 8002374:	f7ff fe76 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 8002378:	4603      	mov	r3, r0
 800237a:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  rx = a.PutPacket(test_packet); //9
 800237e:	f107 0308 	add.w	r3, r7, #8
 8002382:	4619      	mov	r1, r3
 8002384:	4841      	ldr	r0, [pc, #260]	; (800248c <main+0x20c>)
 8002386:	f7ff fe6d 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 800238a:	4603      	mov	r3, r0
 800238c:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  uint16_t time_temp;
  uint32_t counter = 0;
 8002390:	2300      	movs	r3, #0
 8002392:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
  uint32_t temp_counter[2] = {0};
 8002396:	463b      	mov	r3, r7
 8002398:	2200      	movs	r2, #0
 800239a:	601a      	str	r2, [r3, #0]
 800239c:	605a      	str	r2, [r3, #4]

  time_temp = HAL_GetTick();
 800239e:	f000 fd9b 	bl	8002ed8 <HAL_GetTick>
 80023a2:	4603      	mov	r3, r0
 80023a4:	f8a7 3086 	strh.w	r3, [r7, #134]	; 0x86
  counter = 0;
 80023a8:	2300      	movs	r3, #0
 80023aa:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80023ae:	e00f      	b.n	80023d0 <main+0x150>
	  uart_buf_len = sprintf(uart_buf, "SX1280 Initialize fail\r\n");
 80023b0:	f107 0310 	add.w	r3, r7, #16
 80023b4:	4939      	ldr	r1, [pc, #228]	; (800249c <main+0x21c>)
 80023b6:	4618      	mov	r0, r3
 80023b8:	f005 f83a 	bl	8007430 <siprintf>
 80023bc:	67b8      	str	r0, [r7, #120]	; 0x78
	  HAL_UART_Transmit(&huart2, (uint8_t *)uart_buf, uart_buf_len, 100);
 80023be:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80023c0:	b29a      	uxth	r2, r3
 80023c2:	f107 0110 	add.w	r1, r7, #16
 80023c6:	2364      	movs	r3, #100	; 0x64
 80023c8:	4832      	ldr	r0, [pc, #200]	; (8002494 <main+0x214>)
 80023ca:	f003 fcfd 	bl	8005dc8 <HAL_UART_Transmit>
	  while(1);
 80023ce:	e7fe      	b.n	80023ce <main+0x14e>

  while (1)
  {
	  temp_counter[0] = counter;
 80023d0:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80023d4:	603b      	str	r3, [r7, #0]
	  while(a.PutPacket((uint8_t*)temp_counter));
 80023d6:	bf00      	nop
 80023d8:	463b      	mov	r3, r7
 80023da:	4619      	mov	r1, r3
 80023dc:	482b      	ldr	r0, [pc, #172]	; (800248c <main+0x20c>)
 80023de:	f7ff fe41 	bl	8002064 <_ZN19SX128x_formal_board9PutPacketEPh>
 80023e2:	4603      	mov	r3, r0
 80023e4:	2b00      	cmp	r3, #0
 80023e6:	bf14      	ite	ne
 80023e8:	2301      	movne	r3, #1
 80023ea:	2300      	moveq	r3, #0
 80023ec:	b2db      	uxtb	r3, r3
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	d1f2      	bne.n	80023d8 <main+0x158>
//	  times++;
	  counter ++;
 80023f2:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80023f6:	3301      	adds	r3, #1
 80023f8:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
	  if (counter >= 100)
 80023fc:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002400:	2b63      	cmp	r3, #99	; 0x63
 8002402:	d9e5      	bls.n	80023d0 <main+0x150>
	  {
		  time_temp = HAL_GetTick() - time_temp;
 8002404:	f000 fd68 	bl	8002ed8 <HAL_GetTick>
 8002408:	4603      	mov	r3, r0
 800240a:	b29a      	uxth	r2, r3
 800240c:	f8b7 3086 	ldrh.w	r3, [r7, #134]	; 0x86
 8002410:	1ad3      	subs	r3, r2, r3
 8002412:	f8a7 3086 	strh.w	r3, [r7, #134]	; 0x86

		  float bps = 100*8*8*1000./time_temp;
 8002416:	f8b7 3086 	ldrh.w	r3, [r7, #134]	; 0x86
 800241a:	4618      	mov	r0, r3
 800241c:	f7fe f882 	bl	8000524 <__aeabi_i2d>
 8002420:	4602      	mov	r2, r0
 8002422:	460b      	mov	r3, r1
 8002424:	a116      	add	r1, pc, #88	; (adr r1, 8002480 <main+0x200>)
 8002426:	e9d1 0100 	ldrd	r0, r1, [r1]
 800242a:	f7fe fa0f 	bl	800084c <__aeabi_ddiv>
 800242e:	4602      	mov	r2, r0
 8002430:	460b      	mov	r3, r1
 8002432:	4610      	mov	r0, r2
 8002434:	4619      	mov	r1, r3
 8002436:	f7fe fbd7 	bl	8000be8 <__aeabi_d2f>
 800243a:	4603      	mov	r3, r0
 800243c:	677b      	str	r3, [r7, #116]	; 0x74


		  uart_buf_len = sprintf(uart_buf, "Bit Rate: %15.5f bps, count: %3lu \r\n", bps, counter);
 800243e:	6f78      	ldr	r0, [r7, #116]	; 0x74
 8002440:	f7fe f882 	bl	8000548 <__aeabi_f2d>
 8002444:	4602      	mov	r2, r0
 8002446:	460b      	mov	r3, r1
 8002448:	f107 0010 	add.w	r0, r7, #16
 800244c:	f8d7 1080 	ldr.w	r1, [r7, #128]	; 0x80
 8002450:	9100      	str	r1, [sp, #0]
 8002452:	4913      	ldr	r1, [pc, #76]	; (80024a0 <main+0x220>)
 8002454:	f004 ffec 	bl	8007430 <siprintf>
 8002458:	67b8      	str	r0, [r7, #120]	; 0x78
		  HAL_UART_Transmit(&huart2, (uint8_t *)uart_buf, uart_buf_len, 100);
 800245a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800245c:	b29a      	uxth	r2, r3
 800245e:	f107 0110 	add.w	r1, r7, #16
 8002462:	2364      	movs	r3, #100	; 0x64
 8002464:	480b      	ldr	r0, [pc, #44]	; (8002494 <main+0x214>)
 8002466:	f003 fcaf 	bl	8005dc8 <HAL_UART_Transmit>

		  counter = 0;
 800246a:	2300      	movs	r3, #0
 800246c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
		  time_temp = HAL_GetTick();
 8002470:	f000 fd32 	bl	8002ed8 <HAL_GetTick>
 8002474:	4603      	mov	r3, r0
 8002476:	f8a7 3086 	strh.w	r3, [r7, #134]	; 0x86
//	  uint16_t temp;
//	  temp = a.GetIrqStatus();
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
  }
 800247a:	e7a9      	b.n	80023d0 <main+0x150>
 800247c:	f3af 8000 	nop.w
 8002480:	00000000 	.word	0x00000000
 8002484:	41586a00 	.word	0x41586a00
 8002488:	080095e8 	.word	0x080095e8
 800248c:	20000378 	.word	0x20000378
 8002490:	08009588 	.word	0x08009588
 8002494:	200002f0 	.word	0x200002f0
 8002498:	200002a4 	.word	0x200002a4
 800249c:	080095a4 	.word	0x080095a4
 80024a0:	080095c0 	.word	0x080095c0

080024a4 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80024a4:	b580      	push	{r7, lr}
 80024a6:	b096      	sub	sp, #88	; 0x58
 80024a8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80024aa:	f107 0314 	add.w	r3, r7, #20
 80024ae:	2244      	movs	r2, #68	; 0x44
 80024b0:	2100      	movs	r1, #0
 80024b2:	4618      	mov	r0, r3
 80024b4:	f005 f81f 	bl	80074f6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80024b8:	463b      	mov	r3, r7
 80024ba:	2200      	movs	r2, #0
 80024bc:	601a      	str	r2, [r3, #0]
 80024be:	605a      	str	r2, [r3, #4]
 80024c0:	609a      	str	r2, [r3, #8]
 80024c2:	60da      	str	r2, [r3, #12]
 80024c4:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 80024c6:	f44f 7000 	mov.w	r0, #512	; 0x200
 80024ca:	f001 f853 	bl	8003574 <HAL_PWREx_ControlVoltageScaling>
 80024ce:	4603      	mov	r3, r0
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	bf14      	ite	ne
 80024d4:	2301      	movne	r3, #1
 80024d6:	2300      	moveq	r3, #0
 80024d8:	b2db      	uxtb	r3, r3
 80024da:	2b00      	cmp	r3, #0
 80024dc:	d001      	beq.n	80024e2 <_Z18SystemClock_Configv+0x3e>
  {
    Error_Handler();
 80024de:	f000 fa15 	bl	800290c <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80024e2:	2302      	movs	r3, #2
 80024e4:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80024e6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80024ea:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80024ec:	2310      	movs	r3, #16
 80024ee:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80024f0:	2302      	movs	r3, #2
 80024f2:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80024f4:	2302      	movs	r3, #2
 80024f6:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 80024f8:	2301      	movs	r3, #1
 80024fa:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLN = 10;
 80024fc:	230a      	movs	r3, #10
 80024fe:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 8002500:	2307      	movs	r3, #7
 8002502:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8002504:	2302      	movs	r3, #2
 8002506:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8002508:	2302      	movs	r3, #2
 800250a:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800250c:	f107 0314 	add.w	r3, r7, #20
 8002510:	4618      	mov	r0, r3
 8002512:	f001 f885 	bl	8003620 <HAL_RCC_OscConfig>
 8002516:	4603      	mov	r3, r0
 8002518:	2b00      	cmp	r3, #0
 800251a:	bf14      	ite	ne
 800251c:	2301      	movne	r3, #1
 800251e:	2300      	moveq	r3, #0
 8002520:	b2db      	uxtb	r3, r3
 8002522:	2b00      	cmp	r3, #0
 8002524:	d001      	beq.n	800252a <_Z18SystemClock_Configv+0x86>
  {
    Error_Handler();
 8002526:	f000 f9f1 	bl	800290c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800252a:	230f      	movs	r3, #15
 800252c:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800252e:	2303      	movs	r3, #3
 8002530:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002532:	2300      	movs	r3, #0
 8002534:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002536:	2300      	movs	r3, #0
 8002538:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800253a:	2300      	movs	r3, #0
 800253c:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800253e:	463b      	mov	r3, r7
 8002540:	2104      	movs	r1, #4
 8002542:	4618      	mov	r0, r3
 8002544:	f001 fc48 	bl	8003dd8 <HAL_RCC_ClockConfig>
 8002548:	4603      	mov	r3, r0
 800254a:	2b00      	cmp	r3, #0
 800254c:	bf14      	ite	ne
 800254e:	2301      	movne	r3, #1
 8002550:	2300      	moveq	r3, #0
 8002552:	b2db      	uxtb	r3, r3
 8002554:	2b00      	cmp	r3, #0
 8002556:	d001      	beq.n	800255c <_Z18SystemClock_Configv+0xb8>
  {
    Error_Handler();
 8002558:	f000 f9d8 	bl	800290c <Error_Handler>
  }
}
 800255c:	bf00      	nop
 800255e:	3758      	adds	r7, #88	; 0x58
 8002560:	46bd      	mov	sp, r7
 8002562:	bd80      	pop	{r7, pc}

08002564 <_ZL12MX_SPI1_Initv>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8002564:	b580      	push	{r7, lr}
 8002566:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8002568:	4b1d      	ldr	r3, [pc, #116]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 800256a:	4a1e      	ldr	r2, [pc, #120]	; (80025e4 <_ZL12MX_SPI1_Initv+0x80>)
 800256c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800256e:	4b1c      	ldr	r3, [pc, #112]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 8002570:	f44f 7282 	mov.w	r2, #260	; 0x104
 8002574:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8002576:	4b1a      	ldr	r3, [pc, #104]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 8002578:	2200      	movs	r2, #0
 800257a:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800257c:	4b18      	ldr	r3, [pc, #96]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 800257e:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8002582:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002584:	4b16      	ldr	r3, [pc, #88]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 8002586:	2200      	movs	r2, #0
 8002588:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800258a:	4b15      	ldr	r3, [pc, #84]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 800258c:	2200      	movs	r2, #0
 800258e:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002590:	4b13      	ldr	r3, [pc, #76]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 8002592:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002596:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8002598:	4b11      	ldr	r3, [pc, #68]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 800259a:	2210      	movs	r2, #16
 800259c:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800259e:	4b10      	ldr	r3, [pc, #64]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 80025a0:	2200      	movs	r2, #0
 80025a2:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80025a4:	4b0e      	ldr	r3, [pc, #56]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 80025a6:	2200      	movs	r2, #0
 80025a8:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80025aa:	4b0d      	ldr	r3, [pc, #52]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 80025ac:	2200      	movs	r2, #0
 80025ae:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 7;
 80025b0:	4b0b      	ldr	r3, [pc, #44]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 80025b2:	2207      	movs	r2, #7
 80025b4:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 80025b6:	4b0a      	ldr	r3, [pc, #40]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 80025b8:	2200      	movs	r2, #0
 80025ba:	631a      	str	r2, [r3, #48]	; 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 80025bc:	4b08      	ldr	r3, [pc, #32]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 80025be:	2208      	movs	r2, #8
 80025c0:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80025c2:	4807      	ldr	r0, [pc, #28]	; (80025e0 <_ZL12MX_SPI1_Initv+0x7c>)
 80025c4:	f002 fae8 	bl	8004b98 <HAL_SPI_Init>
 80025c8:	4603      	mov	r3, r0
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	bf14      	ite	ne
 80025ce:	2301      	movne	r3, #1
 80025d0:	2300      	moveq	r3, #0
 80025d2:	b2db      	uxtb	r3, r3
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d001      	beq.n	80025dc <_ZL12MX_SPI1_Initv+0x78>
  {
    Error_Handler();
 80025d8:	f000 f998 	bl	800290c <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80025dc:	bf00      	nop
 80025de:	bd80      	pop	{r7, pc}
 80025e0:	200001f4 	.word	0x200001f4
 80025e4:	40013000 	.word	0x40013000

080025e8 <_ZL12MX_TIM1_Initv>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80025e8:	b580      	push	{r7, lr}
 80025ea:	b088      	sub	sp, #32
 80025ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80025ee:	f107 0310 	add.w	r3, r7, #16
 80025f2:	2200      	movs	r2, #0
 80025f4:	601a      	str	r2, [r3, #0]
 80025f6:	605a      	str	r2, [r3, #4]
 80025f8:	609a      	str	r2, [r3, #8]
 80025fa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80025fc:	1d3b      	adds	r3, r7, #4
 80025fe:	2200      	movs	r2, #0
 8002600:	601a      	str	r2, [r3, #0]
 8002602:	605a      	str	r2, [r3, #4]
 8002604:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8002606:	4b27      	ldr	r3, [pc, #156]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 8002608:	4a27      	ldr	r2, [pc, #156]	; (80026a8 <_ZL12MX_TIM1_Initv+0xc0>)
 800260a:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 79;
 800260c:	4b25      	ldr	r3, [pc, #148]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 800260e:	224f      	movs	r2, #79	; 0x4f
 8002610:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002612:	4b24      	ldr	r3, [pc, #144]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 8002614:	2200      	movs	r2, #0
 8002616:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8002618:	4b22      	ldr	r3, [pc, #136]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 800261a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800261e:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002620:	4b20      	ldr	r3, [pc, #128]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 8002622:	2200      	movs	r2, #0
 8002624:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8002626:	4b1f      	ldr	r3, [pc, #124]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 8002628:	2200      	movs	r2, #0
 800262a:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800262c:	4b1d      	ldr	r3, [pc, #116]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 800262e:	2200      	movs	r2, #0
 8002630:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8002632:	481c      	ldr	r0, [pc, #112]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 8002634:	f002 feda 	bl	80053ec <HAL_TIM_Base_Init>
 8002638:	4603      	mov	r3, r0
 800263a:	2b00      	cmp	r3, #0
 800263c:	bf14      	ite	ne
 800263e:	2301      	movne	r3, #1
 8002640:	2300      	moveq	r3, #0
 8002642:	b2db      	uxtb	r3, r3
 8002644:	2b00      	cmp	r3, #0
 8002646:	d001      	beq.n	800264c <_ZL12MX_TIM1_Initv+0x64>
  {
    Error_Handler();
 8002648:	f000 f960 	bl	800290c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800264c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002650:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002652:	f107 0310 	add.w	r3, r7, #16
 8002656:	4619      	mov	r1, r3
 8002658:	4812      	ldr	r0, [pc, #72]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 800265a:	f003 f891 	bl	8005780 <HAL_TIM_ConfigClockSource>
 800265e:	4603      	mov	r3, r0
 8002660:	2b00      	cmp	r3, #0
 8002662:	bf14      	ite	ne
 8002664:	2301      	movne	r3, #1
 8002666:	2300      	moveq	r3, #0
 8002668:	b2db      	uxtb	r3, r3
 800266a:	2b00      	cmp	r3, #0
 800266c:	d001      	beq.n	8002672 <_ZL12MX_TIM1_Initv+0x8a>
  {
    Error_Handler();
 800266e:	f000 f94d 	bl	800290c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002672:	2300      	movs	r3, #0
 8002674:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8002676:	2300      	movs	r3, #0
 8002678:	60bb      	str	r3, [r7, #8]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800267a:	2300      	movs	r3, #0
 800267c:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800267e:	1d3b      	adds	r3, r7, #4
 8002680:	4619      	mov	r1, r3
 8002682:	4808      	ldr	r0, [pc, #32]	; (80026a4 <_ZL12MX_TIM1_Initv+0xbc>)
 8002684:	f003 faac 	bl	8005be0 <HAL_TIMEx_MasterConfigSynchronization>
 8002688:	4603      	mov	r3, r0
 800268a:	2b00      	cmp	r3, #0
 800268c:	bf14      	ite	ne
 800268e:	2301      	movne	r3, #1
 8002690:	2300      	moveq	r3, #0
 8002692:	b2db      	uxtb	r3, r3
 8002694:	2b00      	cmp	r3, #0
 8002696:	d001      	beq.n	800269c <_ZL12MX_TIM1_Initv+0xb4>
  {
    Error_Handler();
 8002698:	f000 f938 	bl	800290c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 800269c:	bf00      	nop
 800269e:	3720      	adds	r7, #32
 80026a0:	46bd      	mov	sp, r7
 80026a2:	bd80      	pop	{r7, pc}
 80026a4:	20000258 	.word	0x20000258
 80026a8:	40012c00 	.word	0x40012c00

080026ac <_ZL12MX_TIM2_Initv>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80026ac:	b580      	push	{r7, lr}
 80026ae:	b088      	sub	sp, #32
 80026b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80026b2:	f107 0310 	add.w	r3, r7, #16
 80026b6:	2200      	movs	r2, #0
 80026b8:	601a      	str	r2, [r3, #0]
 80026ba:	605a      	str	r2, [r3, #4]
 80026bc:	609a      	str	r2, [r3, #8]
 80026be:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80026c0:	1d3b      	adds	r3, r7, #4
 80026c2:	2200      	movs	r2, #0
 80026c4:	601a      	str	r2, [r3, #0]
 80026c6:	605a      	str	r2, [r3, #4]
 80026c8:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80026ca:	4b25      	ldr	r3, [pc, #148]	; (8002760 <_ZL12MX_TIM2_Initv+0xb4>)
 80026cc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80026d0:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 79;
 80026d2:	4b23      	ldr	r3, [pc, #140]	; (8002760 <_ZL12MX_TIM2_Initv+0xb4>)
 80026d4:	224f      	movs	r2, #79	; 0x4f
 80026d6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80026d8:	4b21      	ldr	r3, [pc, #132]	; (8002760 <_ZL12MX_TIM2_Initv+0xb4>)
 80026da:	2200      	movs	r2, #0
 80026dc:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4999999;
 80026de:	4b20      	ldr	r3, [pc, #128]	; (8002760 <_ZL12MX_TIM2_Initv+0xb4>)
 80026e0:	4a20      	ldr	r2, [pc, #128]	; (8002764 <_ZL12MX_TIM2_Initv+0xb8>)
 80026e2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80026e4:	4b1e      	ldr	r3, [pc, #120]	; (8002760 <_ZL12MX_TIM2_Initv+0xb4>)
 80026e6:	2200      	movs	r2, #0
 80026e8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80026ea:	4b1d      	ldr	r3, [pc, #116]	; (8002760 <_ZL12MX_TIM2_Initv+0xb4>)
 80026ec:	2200      	movs	r2, #0
 80026ee:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80026f0:	481b      	ldr	r0, [pc, #108]	; (8002760 <_ZL12MX_TIM2_Initv+0xb4>)
 80026f2:	f002 fe7b 	bl	80053ec <HAL_TIM_Base_Init>
 80026f6:	4603      	mov	r3, r0
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	bf14      	ite	ne
 80026fc:	2301      	movne	r3, #1
 80026fe:	2300      	moveq	r3, #0
 8002700:	b2db      	uxtb	r3, r3
 8002702:	2b00      	cmp	r3, #0
 8002704:	d001      	beq.n	800270a <_ZL12MX_TIM2_Initv+0x5e>
  {
    Error_Handler();
 8002706:	f000 f901 	bl	800290c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800270a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800270e:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002710:	f107 0310 	add.w	r3, r7, #16
 8002714:	4619      	mov	r1, r3
 8002716:	4812      	ldr	r0, [pc, #72]	; (8002760 <_ZL12MX_TIM2_Initv+0xb4>)
 8002718:	f003 f832 	bl	8005780 <HAL_TIM_ConfigClockSource>
 800271c:	4603      	mov	r3, r0
 800271e:	2b00      	cmp	r3, #0
 8002720:	bf14      	ite	ne
 8002722:	2301      	movne	r3, #1
 8002724:	2300      	moveq	r3, #0
 8002726:	b2db      	uxtb	r3, r3
 8002728:	2b00      	cmp	r3, #0
 800272a:	d001      	beq.n	8002730 <_ZL12MX_TIM2_Initv+0x84>
  {
    Error_Handler();
 800272c:	f000 f8ee 	bl	800290c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002730:	2300      	movs	r3, #0
 8002732:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002734:	2300      	movs	r3, #0
 8002736:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002738:	1d3b      	adds	r3, r7, #4
 800273a:	4619      	mov	r1, r3
 800273c:	4808      	ldr	r0, [pc, #32]	; (8002760 <_ZL12MX_TIM2_Initv+0xb4>)
 800273e:	f003 fa4f 	bl	8005be0 <HAL_TIMEx_MasterConfigSynchronization>
 8002742:	4603      	mov	r3, r0
 8002744:	2b00      	cmp	r3, #0
 8002746:	bf14      	ite	ne
 8002748:	2301      	movne	r3, #1
 800274a:	2300      	moveq	r3, #0
 800274c:	b2db      	uxtb	r3, r3
 800274e:	2b00      	cmp	r3, #0
 8002750:	d001      	beq.n	8002756 <_ZL12MX_TIM2_Initv+0xaa>
  {
    Error_Handler();
 8002752:	f000 f8db 	bl	800290c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002756:	bf00      	nop
 8002758:	3720      	adds	r7, #32
 800275a:	46bd      	mov	sp, r7
 800275c:	bd80      	pop	{r7, pc}
 800275e:	bf00      	nop
 8002760:	200002a4 	.word	0x200002a4
 8002764:	004c4b3f 	.word	0x004c4b3f

08002768 <_ZL19MX_USART2_UART_Initv>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002768:	b580      	push	{r7, lr}
 800276a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800276c:	4b16      	ldr	r3, [pc, #88]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 800276e:	4a17      	ldr	r2, [pc, #92]	; (80027cc <_ZL19MX_USART2_UART_Initv+0x64>)
 8002770:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 921600;
 8002772:	4b15      	ldr	r3, [pc, #84]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 8002774:	f44f 2261 	mov.w	r2, #921600	; 0xe1000
 8002778:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800277a:	4b13      	ldr	r3, [pc, #76]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 800277c:	2200      	movs	r2, #0
 800277e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002780:	4b11      	ldr	r3, [pc, #68]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 8002782:	2200      	movs	r2, #0
 8002784:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002786:	4b10      	ldr	r3, [pc, #64]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 8002788:	2200      	movs	r2, #0
 800278a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800278c:	4b0e      	ldr	r3, [pc, #56]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 800278e:	220c      	movs	r2, #12
 8002790:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002792:	4b0d      	ldr	r3, [pc, #52]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 8002794:	2200      	movs	r2, #0
 8002796:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002798:	4b0b      	ldr	r3, [pc, #44]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 800279a:	2200      	movs	r2, #0
 800279c:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800279e:	4b0a      	ldr	r3, [pc, #40]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 80027a0:	2200      	movs	r2, #0
 80027a2:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80027a4:	4b08      	ldr	r3, [pc, #32]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 80027a6:	2200      	movs	r2, #0
 80027a8:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80027aa:	4807      	ldr	r0, [pc, #28]	; (80027c8 <_ZL19MX_USART2_UART_Initv+0x60>)
 80027ac:	f003 fabe 	bl	8005d2c <HAL_UART_Init>
 80027b0:	4603      	mov	r3, r0
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	bf14      	ite	ne
 80027b6:	2301      	movne	r3, #1
 80027b8:	2300      	moveq	r3, #0
 80027ba:	b2db      	uxtb	r3, r3
 80027bc:	2b00      	cmp	r3, #0
 80027be:	d001      	beq.n	80027c4 <_ZL19MX_USART2_UART_Initv+0x5c>
  {
    Error_Handler();
 80027c0:	f000 f8a4 	bl	800290c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80027c4:	bf00      	nop
 80027c6:	bd80      	pop	{r7, pc}
 80027c8:	200002f0 	.word	0x200002f0
 80027cc:	40004400 	.word	0x40004400

080027d0 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80027d0:	b580      	push	{r7, lr}
 80027d2:	b08a      	sub	sp, #40	; 0x28
 80027d4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027d6:	f107 0314 	add.w	r3, r7, #20
 80027da:	2200      	movs	r2, #0
 80027dc:	601a      	str	r2, [r3, #0]
 80027de:	605a      	str	r2, [r3, #4]
 80027e0:	609a      	str	r2, [r3, #8]
 80027e2:	60da      	str	r2, [r3, #12]
 80027e4:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80027e6:	4b46      	ldr	r3, [pc, #280]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 80027e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80027ea:	4a45      	ldr	r2, [pc, #276]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 80027ec:	f043 0304 	orr.w	r3, r3, #4
 80027f0:	64d3      	str	r3, [r2, #76]	; 0x4c
 80027f2:	4b43      	ldr	r3, [pc, #268]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 80027f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80027f6:	f003 0304 	and.w	r3, r3, #4
 80027fa:	613b      	str	r3, [r7, #16]
 80027fc:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80027fe:	4b40      	ldr	r3, [pc, #256]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 8002800:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002802:	4a3f      	ldr	r2, [pc, #252]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 8002804:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002808:	64d3      	str	r3, [r2, #76]	; 0x4c
 800280a:	4b3d      	ldr	r3, [pc, #244]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 800280c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800280e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002812:	60fb      	str	r3, [r7, #12]
 8002814:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002816:	4b3a      	ldr	r3, [pc, #232]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 8002818:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800281a:	4a39      	ldr	r2, [pc, #228]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 800281c:	f043 0301 	orr.w	r3, r3, #1
 8002820:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002822:	4b37      	ldr	r3, [pc, #220]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 8002824:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002826:	f003 0301 	and.w	r3, r3, #1
 800282a:	60bb      	str	r3, [r7, #8]
 800282c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800282e:	4b34      	ldr	r3, [pc, #208]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 8002830:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002832:	4a33      	ldr	r2, [pc, #204]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 8002834:	f043 0302 	orr.w	r3, r3, #2
 8002838:	64d3      	str	r3, [r2, #76]	; 0x4c
 800283a:	4b31      	ldr	r3, [pc, #196]	; (8002900 <_ZL12MX_GPIO_Initv+0x130>)
 800283c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800283e:	f003 0302 	and.w	r3, r3, #2
 8002842:	607b      	str	r3, [r7, #4]
 8002844:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SX1280_RST_GPIO_Port, SX1280_RST_Pin, GPIO_PIN_SET);
 8002846:	2201      	movs	r2, #1
 8002848:	2180      	movs	r1, #128	; 0x80
 800284a:	482e      	ldr	r0, [pc, #184]	; (8002904 <_ZL12MX_GPIO_Initv+0x134>)
 800284c:	f000 fe48 	bl	80034e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SX1280_NSS_GPIO_Port, SX1280_NSS_Pin, GPIO_PIN_SET);
 8002850:	2201      	movs	r2, #1
 8002852:	2140      	movs	r1, #64	; 0x40
 8002854:	482c      	ldr	r0, [pc, #176]	; (8002908 <_ZL12MX_GPIO_Initv+0x138>)
 8002856:	f000 fe43 	bl	80034e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 800285a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800285e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002860:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8002864:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002866:	2300      	movs	r3, #0
 8002868:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800286a:	f107 0314 	add.w	r3, r7, #20
 800286e:	4619      	mov	r1, r3
 8002870:	4824      	ldr	r0, [pc, #144]	; (8002904 <_ZL12MX_GPIO_Initv+0x134>)
 8002872:	f000 fc73 	bl	800315c <HAL_GPIO_Init>

  /*Configure GPIO pin : SX1280_RST_Pin */
  GPIO_InitStruct.Pin = SX1280_RST_Pin;
 8002876:	2380      	movs	r3, #128	; 0x80
 8002878:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800287a:	2301      	movs	r3, #1
 800287c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800287e:	2301      	movs	r3, #1
 8002880:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002882:	2303      	movs	r3, #3
 8002884:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SX1280_RST_GPIO_Port, &GPIO_InitStruct);
 8002886:	f107 0314 	add.w	r3, r7, #20
 800288a:	4619      	mov	r1, r3
 800288c:	481d      	ldr	r0, [pc, #116]	; (8002904 <_ZL12MX_GPIO_Initv+0x134>)
 800288e:	f000 fc65 	bl	800315c <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002892:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002896:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002898:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800289c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800289e:	2302      	movs	r3, #2
 80028a0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028a2:	f107 0314 	add.w	r3, r7, #20
 80028a6:	4619      	mov	r1, r3
 80028a8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80028ac:	f000 fc56 	bl	800315c <HAL_GPIO_Init>

  /*Configure GPIO pin : SX1280_BUSY_Pin */
  GPIO_InitStruct.Pin = SX1280_BUSY_Pin;
 80028b0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80028b4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80028b6:	2300      	movs	r3, #0
 80028b8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80028ba:	2302      	movs	r3, #2
 80028bc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SX1280_BUSY_GPIO_Port, &GPIO_InitStruct);
 80028be:	f107 0314 	add.w	r3, r7, #20
 80028c2:	4619      	mov	r1, r3
 80028c4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80028c8:	f000 fc48 	bl	800315c <HAL_GPIO_Init>

  /*Configure GPIO pin : SX1280_NSS_Pin */
  GPIO_InitStruct.Pin = SX1280_NSS_Pin;
 80028cc:	2340      	movs	r3, #64	; 0x40
 80028ce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80028d0:	2301      	movs	r3, #1
 80028d2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80028d4:	2301      	movs	r3, #1
 80028d6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80028d8:	2303      	movs	r3, #3
 80028da:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SX1280_NSS_GPIO_Port, &GPIO_InitStruct);
 80028dc:	f107 0314 	add.w	r3, r7, #20
 80028e0:	4619      	mov	r1, r3
 80028e2:	4809      	ldr	r0, [pc, #36]	; (8002908 <_ZL12MX_GPIO_Initv+0x138>)
 80028e4:	f000 fc3a 	bl	800315c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 80028e8:	2200      	movs	r2, #0
 80028ea:	2100      	movs	r1, #0
 80028ec:	2017      	movs	r0, #23
 80028ee:	f000 fbfe 	bl	80030ee <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80028f2:	2017      	movs	r0, #23
 80028f4:	f000 fc17 	bl	8003126 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80028f8:	bf00      	nop
 80028fa:	3728      	adds	r7, #40	; 0x28
 80028fc:	46bd      	mov	sp, r7
 80028fe:	bd80      	pop	{r7, pc}
 8002900:	40021000 	.word	0x40021000
 8002904:	48000800 	.word	0x48000800
 8002908:	48000400 	.word	0x48000400

0800290c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800290c:	b480      	push	{r7}
 800290e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002910:	b672      	cpsid	i
}
 8002912:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002914:	e7fe      	b.n	8002914 <Error_Handler+0x8>
	...

08002918 <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 8002918:	b580      	push	{r7, lr}
 800291a:	b082      	sub	sp, #8
 800291c:	af00      	add	r7, sp, #0
 800291e:	6078      	str	r0, [r7, #4]
 8002920:	6039      	str	r1, [r7, #0]
 8002922:	687b      	ldr	r3, [r7, #4]
 8002924:	2b01      	cmp	r3, #1
 8002926:	d107      	bne.n	8002938 <_Z41__static_initialization_and_destruction_0ii+0x20>
 8002928:	683b      	ldr	r3, [r7, #0]
 800292a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800292e:	4293      	cmp	r3, r2
 8002930:	d102      	bne.n	8002938 <_Z41__static_initialization_and_destruction_0ii+0x20>
SX128x_formal_board a;
 8002932:	4809      	ldr	r0, [pc, #36]	; (8002958 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8002934:	f7ff fb3a 	bl	8001fac <_ZN19SX128x_formal_boardC1Ev>
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	2b00      	cmp	r3, #0
 800293c:	d107      	bne.n	800294e <_Z41__static_initialization_and_destruction_0ii+0x36>
 800293e:	683b      	ldr	r3, [r7, #0]
 8002940:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002944:	4293      	cmp	r3, r2
 8002946:	d102      	bne.n	800294e <_Z41__static_initialization_and_destruction_0ii+0x36>
 8002948:	4803      	ldr	r0, [pc, #12]	; (8002958 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800294a:	f7ff f9f7 	bl	8001d3c <_ZN19SX128x_formal_boardD1Ev>
}
 800294e:	bf00      	nop
 8002950:	3708      	adds	r7, #8
 8002952:	46bd      	mov	sp, r7
 8002954:	bd80      	pop	{r7, pc}
 8002956:	bf00      	nop
 8002958:	20000378 	.word	0x20000378

0800295c <_GLOBAL__sub_I_hspi1>:
 800295c:	b580      	push	{r7, lr}
 800295e:	af00      	add	r7, sp, #0
 8002960:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002964:	2001      	movs	r0, #1
 8002966:	f7ff ffd7 	bl	8002918 <_Z41__static_initialization_and_destruction_0ii>
 800296a:	bd80      	pop	{r7, pc}

0800296c <_GLOBAL__sub_D_hspi1>:
 800296c:	b580      	push	{r7, lr}
 800296e:	af00      	add	r7, sp, #0
 8002970:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002974:	2000      	movs	r0, #0
 8002976:	f7ff ffcf 	bl	8002918 <_Z41__static_initialization_and_destruction_0ii>
 800297a:	bd80      	pop	{r7, pc}

0800297c <HAL_MspInit>:
 800297c:	b480      	push	{r7}
 800297e:	b083      	sub	sp, #12
 8002980:	af00      	add	r7, sp, #0
 8002982:	4b0f      	ldr	r3, [pc, #60]	; (80029c0 <HAL_MspInit+0x44>)
 8002984:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002986:	4a0e      	ldr	r2, [pc, #56]	; (80029c0 <HAL_MspInit+0x44>)
 8002988:	f043 0301 	orr.w	r3, r3, #1
 800298c:	6613      	str	r3, [r2, #96]	; 0x60
 800298e:	4b0c      	ldr	r3, [pc, #48]	; (80029c0 <HAL_MspInit+0x44>)
 8002990:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002992:	f003 0301 	and.w	r3, r3, #1
 8002996:	607b      	str	r3, [r7, #4]
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	4b09      	ldr	r3, [pc, #36]	; (80029c0 <HAL_MspInit+0x44>)
 800299c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800299e:	4a08      	ldr	r2, [pc, #32]	; (80029c0 <HAL_MspInit+0x44>)
 80029a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80029a4:	6593      	str	r3, [r2, #88]	; 0x58
 80029a6:	4b06      	ldr	r3, [pc, #24]	; (80029c0 <HAL_MspInit+0x44>)
 80029a8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80029aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029ae:	603b      	str	r3, [r7, #0]
 80029b0:	683b      	ldr	r3, [r7, #0]
 80029b2:	bf00      	nop
 80029b4:	370c      	adds	r7, #12
 80029b6:	46bd      	mov	sp, r7
 80029b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029bc:	4770      	bx	lr
 80029be:	bf00      	nop
 80029c0:	40021000 	.word	0x40021000

080029c4 <HAL_SPI_MspInit>:
 80029c4:	b580      	push	{r7, lr}
 80029c6:	b08a      	sub	sp, #40	; 0x28
 80029c8:	af00      	add	r7, sp, #0
 80029ca:	6078      	str	r0, [r7, #4]
 80029cc:	f107 0314 	add.w	r3, r7, #20
 80029d0:	2200      	movs	r2, #0
 80029d2:	601a      	str	r2, [r3, #0]
 80029d4:	605a      	str	r2, [r3, #4]
 80029d6:	609a      	str	r2, [r3, #8]
 80029d8:	60da      	str	r2, [r3, #12]
 80029da:	611a      	str	r2, [r3, #16]
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	4a17      	ldr	r2, [pc, #92]	; (8002a40 <HAL_SPI_MspInit+0x7c>)
 80029e2:	4293      	cmp	r3, r2
 80029e4:	d128      	bne.n	8002a38 <HAL_SPI_MspInit+0x74>
 80029e6:	4b17      	ldr	r3, [pc, #92]	; (8002a44 <HAL_SPI_MspInit+0x80>)
 80029e8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80029ea:	4a16      	ldr	r2, [pc, #88]	; (8002a44 <HAL_SPI_MspInit+0x80>)
 80029ec:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80029f0:	6613      	str	r3, [r2, #96]	; 0x60
 80029f2:	4b14      	ldr	r3, [pc, #80]	; (8002a44 <HAL_SPI_MspInit+0x80>)
 80029f4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80029f6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80029fa:	613b      	str	r3, [r7, #16]
 80029fc:	693b      	ldr	r3, [r7, #16]
 80029fe:	4b11      	ldr	r3, [pc, #68]	; (8002a44 <HAL_SPI_MspInit+0x80>)
 8002a00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a02:	4a10      	ldr	r2, [pc, #64]	; (8002a44 <HAL_SPI_MspInit+0x80>)
 8002a04:	f043 0301 	orr.w	r3, r3, #1
 8002a08:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002a0a:	4b0e      	ldr	r3, [pc, #56]	; (8002a44 <HAL_SPI_MspInit+0x80>)
 8002a0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002a0e:	f003 0301 	and.w	r3, r3, #1
 8002a12:	60fb      	str	r3, [r7, #12]
 8002a14:	68fb      	ldr	r3, [r7, #12]
 8002a16:	23e0      	movs	r3, #224	; 0xe0
 8002a18:	617b      	str	r3, [r7, #20]
 8002a1a:	2302      	movs	r3, #2
 8002a1c:	61bb      	str	r3, [r7, #24]
 8002a1e:	2302      	movs	r3, #2
 8002a20:	61fb      	str	r3, [r7, #28]
 8002a22:	2303      	movs	r3, #3
 8002a24:	623b      	str	r3, [r7, #32]
 8002a26:	2305      	movs	r3, #5
 8002a28:	627b      	str	r3, [r7, #36]	; 0x24
 8002a2a:	f107 0314 	add.w	r3, r7, #20
 8002a2e:	4619      	mov	r1, r3
 8002a30:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002a34:	f000 fb92 	bl	800315c <HAL_GPIO_Init>
 8002a38:	bf00      	nop
 8002a3a:	3728      	adds	r7, #40	; 0x28
 8002a3c:	46bd      	mov	sp, r7
 8002a3e:	bd80      	pop	{r7, pc}
 8002a40:	40013000 	.word	0x40013000
 8002a44:	40021000 	.word	0x40021000

08002a48 <HAL_TIM_Base_MspInit>:
 8002a48:	b580      	push	{r7, lr}
 8002a4a:	b084      	sub	sp, #16
 8002a4c:	af00      	add	r7, sp, #0
 8002a4e:	6078      	str	r0, [r7, #4]
 8002a50:	687b      	ldr	r3, [r7, #4]
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	4a16      	ldr	r2, [pc, #88]	; (8002ab0 <HAL_TIM_Base_MspInit+0x68>)
 8002a56:	4293      	cmp	r3, r2
 8002a58:	d10c      	bne.n	8002a74 <HAL_TIM_Base_MspInit+0x2c>
 8002a5a:	4b16      	ldr	r3, [pc, #88]	; (8002ab4 <HAL_TIM_Base_MspInit+0x6c>)
 8002a5c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002a5e:	4a15      	ldr	r2, [pc, #84]	; (8002ab4 <HAL_TIM_Base_MspInit+0x6c>)
 8002a60:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002a64:	6613      	str	r3, [r2, #96]	; 0x60
 8002a66:	4b13      	ldr	r3, [pc, #76]	; (8002ab4 <HAL_TIM_Base_MspInit+0x6c>)
 8002a68:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002a6a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002a6e:	60fb      	str	r3, [r7, #12]
 8002a70:	68fb      	ldr	r3, [r7, #12]
 8002a72:	e018      	b.n	8002aa6 <HAL_TIM_Base_MspInit+0x5e>
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	681b      	ldr	r3, [r3, #0]
 8002a78:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002a7c:	d113      	bne.n	8002aa6 <HAL_TIM_Base_MspInit+0x5e>
 8002a7e:	4b0d      	ldr	r3, [pc, #52]	; (8002ab4 <HAL_TIM_Base_MspInit+0x6c>)
 8002a80:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002a82:	4a0c      	ldr	r2, [pc, #48]	; (8002ab4 <HAL_TIM_Base_MspInit+0x6c>)
 8002a84:	f043 0301 	orr.w	r3, r3, #1
 8002a88:	6593      	str	r3, [r2, #88]	; 0x58
 8002a8a:	4b0a      	ldr	r3, [pc, #40]	; (8002ab4 <HAL_TIM_Base_MspInit+0x6c>)
 8002a8c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002a8e:	f003 0301 	and.w	r3, r3, #1
 8002a92:	60bb      	str	r3, [r7, #8]
 8002a94:	68bb      	ldr	r3, [r7, #8]
 8002a96:	2200      	movs	r2, #0
 8002a98:	2100      	movs	r1, #0
 8002a9a:	201c      	movs	r0, #28
 8002a9c:	f000 fb27 	bl	80030ee <HAL_NVIC_SetPriority>
 8002aa0:	201c      	movs	r0, #28
 8002aa2:	f000 fb40 	bl	8003126 <HAL_NVIC_EnableIRQ>
 8002aa6:	bf00      	nop
 8002aa8:	3710      	adds	r7, #16
 8002aaa:	46bd      	mov	sp, r7
 8002aac:	bd80      	pop	{r7, pc}
 8002aae:	bf00      	nop
 8002ab0:	40012c00 	.word	0x40012c00
 8002ab4:	40021000 	.word	0x40021000

08002ab8 <HAL_UART_MspInit>:
 8002ab8:	b580      	push	{r7, lr}
 8002aba:	b0ac      	sub	sp, #176	; 0xb0
 8002abc:	af00      	add	r7, sp, #0
 8002abe:	6078      	str	r0, [r7, #4]
 8002ac0:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002ac4:	2200      	movs	r2, #0
 8002ac6:	601a      	str	r2, [r3, #0]
 8002ac8:	605a      	str	r2, [r3, #4]
 8002aca:	609a      	str	r2, [r3, #8]
 8002acc:	60da      	str	r2, [r3, #12]
 8002ace:	611a      	str	r2, [r3, #16]
 8002ad0:	f107 0314 	add.w	r3, r7, #20
 8002ad4:	2288      	movs	r2, #136	; 0x88
 8002ad6:	2100      	movs	r1, #0
 8002ad8:	4618      	mov	r0, r3
 8002ada:	f004 fd0c 	bl	80074f6 <memset>
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	4a21      	ldr	r2, [pc, #132]	; (8002b68 <HAL_UART_MspInit+0xb0>)
 8002ae4:	4293      	cmp	r3, r2
 8002ae6:	d13b      	bne.n	8002b60 <HAL_UART_MspInit+0xa8>
 8002ae8:	2302      	movs	r3, #2
 8002aea:	617b      	str	r3, [r7, #20]
 8002aec:	2300      	movs	r3, #0
 8002aee:	653b      	str	r3, [r7, #80]	; 0x50
 8002af0:	f107 0314 	add.w	r3, r7, #20
 8002af4:	4618      	mov	r0, r3
 8002af6:	f001 fb93 	bl	8004220 <HAL_RCCEx_PeriphCLKConfig>
 8002afa:	4603      	mov	r3, r0
 8002afc:	2b00      	cmp	r3, #0
 8002afe:	d001      	beq.n	8002b04 <HAL_UART_MspInit+0x4c>
 8002b00:	f7ff ff04 	bl	800290c <Error_Handler>
 8002b04:	4b19      	ldr	r3, [pc, #100]	; (8002b6c <HAL_UART_MspInit+0xb4>)
 8002b06:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002b08:	4a18      	ldr	r2, [pc, #96]	; (8002b6c <HAL_UART_MspInit+0xb4>)
 8002b0a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002b0e:	6593      	str	r3, [r2, #88]	; 0x58
 8002b10:	4b16      	ldr	r3, [pc, #88]	; (8002b6c <HAL_UART_MspInit+0xb4>)
 8002b12:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002b14:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002b18:	613b      	str	r3, [r7, #16]
 8002b1a:	693b      	ldr	r3, [r7, #16]
 8002b1c:	4b13      	ldr	r3, [pc, #76]	; (8002b6c <HAL_UART_MspInit+0xb4>)
 8002b1e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002b20:	4a12      	ldr	r2, [pc, #72]	; (8002b6c <HAL_UART_MspInit+0xb4>)
 8002b22:	f043 0301 	orr.w	r3, r3, #1
 8002b26:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002b28:	4b10      	ldr	r3, [pc, #64]	; (8002b6c <HAL_UART_MspInit+0xb4>)
 8002b2a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002b2c:	f003 0301 	and.w	r3, r3, #1
 8002b30:	60fb      	str	r3, [r7, #12]
 8002b32:	68fb      	ldr	r3, [r7, #12]
 8002b34:	230c      	movs	r3, #12
 8002b36:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8002b3a:	2302      	movs	r3, #2
 8002b3c:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8002b40:	2300      	movs	r3, #0
 8002b42:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8002b46:	2303      	movs	r3, #3
 8002b48:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8002b4c:	2307      	movs	r3, #7
 8002b4e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002b52:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002b56:	4619      	mov	r1, r3
 8002b58:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002b5c:	f000 fafe 	bl	800315c <HAL_GPIO_Init>
 8002b60:	bf00      	nop
 8002b62:	37b0      	adds	r7, #176	; 0xb0
 8002b64:	46bd      	mov	sp, r7
 8002b66:	bd80      	pop	{r7, pc}
 8002b68:	40004400 	.word	0x40004400
 8002b6c:	40021000 	.word	0x40021000

08002b70 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002b70:	b480      	push	{r7}
 8002b72:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002b74:	e7fe      	b.n	8002b74 <NMI_Handler+0x4>

08002b76 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002b76:	b480      	push	{r7}
 8002b78:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002b7a:	e7fe      	b.n	8002b7a <HardFault_Handler+0x4>

08002b7c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002b7c:	b480      	push	{r7}
 8002b7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002b80:	e7fe      	b.n	8002b80 <MemManage_Handler+0x4>

08002b82 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002b82:	b480      	push	{r7}
 8002b84:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002b86:	e7fe      	b.n	8002b86 <BusFault_Handler+0x4>

08002b88 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002b88:	b480      	push	{r7}
 8002b8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002b8c:	e7fe      	b.n	8002b8c <UsageFault_Handler+0x4>

08002b8e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002b8e:	b480      	push	{r7}
 8002b90:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002b92:	bf00      	nop
 8002b94:	46bd      	mov	sp, r7
 8002b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b9a:	4770      	bx	lr

08002b9c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002b9c:	b480      	push	{r7}
 8002b9e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002ba0:	bf00      	nop
 8002ba2:	46bd      	mov	sp, r7
 8002ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ba8:	4770      	bx	lr

08002baa <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002baa:	b480      	push	{r7}
 8002bac:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002bae:	bf00      	nop
 8002bb0:	46bd      	mov	sp, r7
 8002bb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bb6:	4770      	bx	lr

08002bb8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002bb8:	b580      	push	{r7, lr}
 8002bba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002bbc:	f000 f978 	bl	8002eb0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002bc0:	bf00      	nop
 8002bc2:	bd80      	pop	{r7, pc}

08002bc4 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8002bc4:	b580      	push	{r7, lr}
 8002bc6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */
	a.tx_recursion();
 8002bc8:	4804      	ldr	r0, [pc, #16]	; (8002bdc <EXTI9_5_IRQHandler+0x18>)
 8002bca:	f7ff faa1 	bl	8002110 <_ZN19SX128x_formal_board12tx_recursionEv>
  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_8);
 8002bce:	f44f 7080 	mov.w	r0, #256	; 0x100
 8002bd2:	f000 fc9d 	bl	8003510 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8002bd6:	bf00      	nop
 8002bd8:	bd80      	pop	{r7, pc}
 8002bda:	bf00      	nop
 8002bdc:	20000378 	.word	0x20000378

08002be0 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002be0:	b580      	push	{r7, lr}
 8002be2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002be4:	4802      	ldr	r0, [pc, #8]	; (8002bf0 <TIM2_IRQHandler+0x10>)
 8002be6:	f002 fcc9 	bl	800557c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002bea:	bf00      	nop
 8002bec:	bd80      	pop	{r7, pc}
 8002bee:	bf00      	nop
 8002bf0:	200002a4 	.word	0x200002a4

08002bf4 <_getpid>:
 8002bf4:	b480      	push	{r7}
 8002bf6:	af00      	add	r7, sp, #0
 8002bf8:	2301      	movs	r3, #1
 8002bfa:	4618      	mov	r0, r3
 8002bfc:	46bd      	mov	sp, r7
 8002bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c02:	4770      	bx	lr

08002c04 <_kill>:
 8002c04:	b580      	push	{r7, lr}
 8002c06:	b082      	sub	sp, #8
 8002c08:	af00      	add	r7, sp, #0
 8002c0a:	6078      	str	r0, [r7, #4]
 8002c0c:	6039      	str	r1, [r7, #0]
 8002c0e:	f004 fd19 	bl	8007644 <__errno>
 8002c12:	4603      	mov	r3, r0
 8002c14:	2216      	movs	r2, #22
 8002c16:	601a      	str	r2, [r3, #0]
 8002c18:	f04f 33ff 	mov.w	r3, #4294967295
 8002c1c:	4618      	mov	r0, r3
 8002c1e:	3708      	adds	r7, #8
 8002c20:	46bd      	mov	sp, r7
 8002c22:	bd80      	pop	{r7, pc}

08002c24 <_exit>:
 8002c24:	b580      	push	{r7, lr}
 8002c26:	b082      	sub	sp, #8
 8002c28:	af00      	add	r7, sp, #0
 8002c2a:	6078      	str	r0, [r7, #4]
 8002c2c:	f04f 31ff 	mov.w	r1, #4294967295
 8002c30:	6878      	ldr	r0, [r7, #4]
 8002c32:	f7ff ffe7 	bl	8002c04 <_kill>
 8002c36:	e7fe      	b.n	8002c36 <_exit+0x12>

08002c38 <_read>:
 8002c38:	b580      	push	{r7, lr}
 8002c3a:	b086      	sub	sp, #24
 8002c3c:	af00      	add	r7, sp, #0
 8002c3e:	60f8      	str	r0, [r7, #12]
 8002c40:	60b9      	str	r1, [r7, #8]
 8002c42:	607a      	str	r2, [r7, #4]
 8002c44:	2300      	movs	r3, #0
 8002c46:	617b      	str	r3, [r7, #20]
 8002c48:	e00a      	b.n	8002c60 <_read+0x28>
 8002c4a:	f3af 8000 	nop.w
 8002c4e:	4601      	mov	r1, r0
 8002c50:	68bb      	ldr	r3, [r7, #8]
 8002c52:	1c5a      	adds	r2, r3, #1
 8002c54:	60ba      	str	r2, [r7, #8]
 8002c56:	b2ca      	uxtb	r2, r1
 8002c58:	701a      	strb	r2, [r3, #0]
 8002c5a:	697b      	ldr	r3, [r7, #20]
 8002c5c:	3301      	adds	r3, #1
 8002c5e:	617b      	str	r3, [r7, #20]
 8002c60:	697a      	ldr	r2, [r7, #20]
 8002c62:	687b      	ldr	r3, [r7, #4]
 8002c64:	429a      	cmp	r2, r3
 8002c66:	dbf0      	blt.n	8002c4a <_read+0x12>
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	4618      	mov	r0, r3
 8002c6c:	3718      	adds	r7, #24
 8002c6e:	46bd      	mov	sp, r7
 8002c70:	bd80      	pop	{r7, pc}

08002c72 <_write>:
 8002c72:	b580      	push	{r7, lr}
 8002c74:	b086      	sub	sp, #24
 8002c76:	af00      	add	r7, sp, #0
 8002c78:	60f8      	str	r0, [r7, #12]
 8002c7a:	60b9      	str	r1, [r7, #8]
 8002c7c:	607a      	str	r2, [r7, #4]
 8002c7e:	2300      	movs	r3, #0
 8002c80:	617b      	str	r3, [r7, #20]
 8002c82:	e009      	b.n	8002c98 <_write+0x26>
 8002c84:	68bb      	ldr	r3, [r7, #8]
 8002c86:	1c5a      	adds	r2, r3, #1
 8002c88:	60ba      	str	r2, [r7, #8]
 8002c8a:	781b      	ldrb	r3, [r3, #0]
 8002c8c:	4618      	mov	r0, r3
 8002c8e:	f3af 8000 	nop.w
 8002c92:	697b      	ldr	r3, [r7, #20]
 8002c94:	3301      	adds	r3, #1
 8002c96:	617b      	str	r3, [r7, #20]
 8002c98:	697a      	ldr	r2, [r7, #20]
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	429a      	cmp	r2, r3
 8002c9e:	dbf1      	blt.n	8002c84 <_write+0x12>
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	4618      	mov	r0, r3
 8002ca4:	3718      	adds	r7, #24
 8002ca6:	46bd      	mov	sp, r7
 8002ca8:	bd80      	pop	{r7, pc}

08002caa <_close>:
 8002caa:	b480      	push	{r7}
 8002cac:	b083      	sub	sp, #12
 8002cae:	af00      	add	r7, sp, #0
 8002cb0:	6078      	str	r0, [r7, #4]
 8002cb2:	f04f 33ff 	mov.w	r3, #4294967295
 8002cb6:	4618      	mov	r0, r3
 8002cb8:	370c      	adds	r7, #12
 8002cba:	46bd      	mov	sp, r7
 8002cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cc0:	4770      	bx	lr

08002cc2 <_fstat>:
 8002cc2:	b480      	push	{r7}
 8002cc4:	b083      	sub	sp, #12
 8002cc6:	af00      	add	r7, sp, #0
 8002cc8:	6078      	str	r0, [r7, #4]
 8002cca:	6039      	str	r1, [r7, #0]
 8002ccc:	683b      	ldr	r3, [r7, #0]
 8002cce:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002cd2:	605a      	str	r2, [r3, #4]
 8002cd4:	2300      	movs	r3, #0
 8002cd6:	4618      	mov	r0, r3
 8002cd8:	370c      	adds	r7, #12
 8002cda:	46bd      	mov	sp, r7
 8002cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ce0:	4770      	bx	lr

08002ce2 <_isatty>:
 8002ce2:	b480      	push	{r7}
 8002ce4:	b083      	sub	sp, #12
 8002ce6:	af00      	add	r7, sp, #0
 8002ce8:	6078      	str	r0, [r7, #4]
 8002cea:	2301      	movs	r3, #1
 8002cec:	4618      	mov	r0, r3
 8002cee:	370c      	adds	r7, #12
 8002cf0:	46bd      	mov	sp, r7
 8002cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cf6:	4770      	bx	lr

08002cf8 <_lseek>:
 8002cf8:	b480      	push	{r7}
 8002cfa:	b085      	sub	sp, #20
 8002cfc:	af00      	add	r7, sp, #0
 8002cfe:	60f8      	str	r0, [r7, #12]
 8002d00:	60b9      	str	r1, [r7, #8]
 8002d02:	607a      	str	r2, [r7, #4]
 8002d04:	2300      	movs	r3, #0
 8002d06:	4618      	mov	r0, r3
 8002d08:	3714      	adds	r7, #20
 8002d0a:	46bd      	mov	sp, r7
 8002d0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d10:	4770      	bx	lr
	...

08002d14 <_sbrk>:
 8002d14:	b580      	push	{r7, lr}
 8002d16:	b086      	sub	sp, #24
 8002d18:	af00      	add	r7, sp, #0
 8002d1a:	6078      	str	r0, [r7, #4]
 8002d1c:	4a14      	ldr	r2, [pc, #80]	; (8002d70 <_sbrk+0x5c>)
 8002d1e:	4b15      	ldr	r3, [pc, #84]	; (8002d74 <_sbrk+0x60>)
 8002d20:	1ad3      	subs	r3, r2, r3
 8002d22:	617b      	str	r3, [r7, #20]
 8002d24:	697b      	ldr	r3, [r7, #20]
 8002d26:	613b      	str	r3, [r7, #16]
 8002d28:	4b13      	ldr	r3, [pc, #76]	; (8002d78 <_sbrk+0x64>)
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	2b00      	cmp	r3, #0
 8002d2e:	d102      	bne.n	8002d36 <_sbrk+0x22>
 8002d30:	4b11      	ldr	r3, [pc, #68]	; (8002d78 <_sbrk+0x64>)
 8002d32:	4a12      	ldr	r2, [pc, #72]	; (8002d7c <_sbrk+0x68>)
 8002d34:	601a      	str	r2, [r3, #0]
 8002d36:	4b10      	ldr	r3, [pc, #64]	; (8002d78 <_sbrk+0x64>)
 8002d38:	681a      	ldr	r2, [r3, #0]
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	4413      	add	r3, r2
 8002d3e:	693a      	ldr	r2, [r7, #16]
 8002d40:	429a      	cmp	r2, r3
 8002d42:	d207      	bcs.n	8002d54 <_sbrk+0x40>
 8002d44:	f004 fc7e 	bl	8007644 <__errno>
 8002d48:	4603      	mov	r3, r0
 8002d4a:	220c      	movs	r2, #12
 8002d4c:	601a      	str	r2, [r3, #0]
 8002d4e:	f04f 33ff 	mov.w	r3, #4294967295
 8002d52:	e009      	b.n	8002d68 <_sbrk+0x54>
 8002d54:	4b08      	ldr	r3, [pc, #32]	; (8002d78 <_sbrk+0x64>)
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	60fb      	str	r3, [r7, #12]
 8002d5a:	4b07      	ldr	r3, [pc, #28]	; (8002d78 <_sbrk+0x64>)
 8002d5c:	681a      	ldr	r2, [r3, #0]
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	4413      	add	r3, r2
 8002d62:	4a05      	ldr	r2, [pc, #20]	; (8002d78 <_sbrk+0x64>)
 8002d64:	6013      	str	r3, [r2, #0]
 8002d66:	68fb      	ldr	r3, [r7, #12]
 8002d68:	4618      	mov	r0, r3
 8002d6a:	3718      	adds	r7, #24
 8002d6c:	46bd      	mov	sp, r7
 8002d6e:	bd80      	pop	{r7, pc}
 8002d70:	20018000 	.word	0x20018000
 8002d74:	00000400 	.word	0x00000400
 8002d78:	200004c0 	.word	0x200004c0
 8002d7c:	20000618 	.word	0x20000618

08002d80 <SystemInit>:
 8002d80:	b480      	push	{r7}
 8002d82:	af00      	add	r7, sp, #0
 8002d84:	4b06      	ldr	r3, [pc, #24]	; (8002da0 <SystemInit+0x20>)
 8002d86:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002d8a:	4a05      	ldr	r2, [pc, #20]	; (8002da0 <SystemInit+0x20>)
 8002d8c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002d90:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002d94:	bf00      	nop
 8002d96:	46bd      	mov	sp, r7
 8002d98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d9c:	4770      	bx	lr
 8002d9e:	bf00      	nop
 8002da0:	e000ed00 	.word	0xe000ed00

08002da4 <Reset_Handler>:
 8002da4:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002ddc <LoopForever+0x2>
 8002da8:	f7ff ffea 	bl	8002d80 <SystemInit>
 8002dac:	480c      	ldr	r0, [pc, #48]	; (8002de0 <LoopForever+0x6>)
 8002dae:	490d      	ldr	r1, [pc, #52]	; (8002de4 <LoopForever+0xa>)
 8002db0:	4a0d      	ldr	r2, [pc, #52]	; (8002de8 <LoopForever+0xe>)
 8002db2:	2300      	movs	r3, #0
 8002db4:	e002      	b.n	8002dbc <LoopCopyDataInit>

08002db6 <CopyDataInit>:
 8002db6:	58d4      	ldr	r4, [r2, r3]
 8002db8:	50c4      	str	r4, [r0, r3]
 8002dba:	3304      	adds	r3, #4

08002dbc <LoopCopyDataInit>:
 8002dbc:	18c4      	adds	r4, r0, r3
 8002dbe:	428c      	cmp	r4, r1
 8002dc0:	d3f9      	bcc.n	8002db6 <CopyDataInit>
 8002dc2:	4a0a      	ldr	r2, [pc, #40]	; (8002dec <LoopForever+0x12>)
 8002dc4:	4c0a      	ldr	r4, [pc, #40]	; (8002df0 <LoopForever+0x16>)
 8002dc6:	2300      	movs	r3, #0
 8002dc8:	e001      	b.n	8002dce <LoopFillZerobss>

08002dca <FillZerobss>:
 8002dca:	6013      	str	r3, [r2, #0]
 8002dcc:	3204      	adds	r2, #4

08002dce <LoopFillZerobss>:
 8002dce:	42a2      	cmp	r2, r4
 8002dd0:	d3fb      	bcc.n	8002dca <FillZerobss>
 8002dd2:	f004 fc3d 	bl	8007650 <__libc_init_array>
 8002dd6:	f7ff fa53 	bl	8002280 <main>

08002dda <LoopForever>:
 8002dda:	e7fe      	b.n	8002dda <LoopForever>
 8002ddc:	20018000 	.word	0x20018000
 8002de0:	20000000 	.word	0x20000000
 8002de4:	200001d4 	.word	0x200001d4
 8002de8:	08009a8c 	.word	0x08009a8c
 8002dec:	200001d8 	.word	0x200001d8
 8002df0:	20000614 	.word	0x20000614

08002df4 <ADC1_2_IRQHandler>:
 8002df4:	e7fe      	b.n	8002df4 <ADC1_2_IRQHandler>
	...

08002df8 <HAL_Init>:
 8002df8:	b580      	push	{r7, lr}
 8002dfa:	b082      	sub	sp, #8
 8002dfc:	af00      	add	r7, sp, #0
 8002dfe:	2300      	movs	r3, #0
 8002e00:	71fb      	strb	r3, [r7, #7]
 8002e02:	4b0c      	ldr	r3, [pc, #48]	; (8002e34 <HAL_Init+0x3c>)
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	4a0b      	ldr	r2, [pc, #44]	; (8002e34 <HAL_Init+0x3c>)
 8002e08:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002e0c:	6013      	str	r3, [r2, #0]
 8002e0e:	2003      	movs	r0, #3
 8002e10:	f000 f962 	bl	80030d8 <HAL_NVIC_SetPriorityGrouping>
 8002e14:	2000      	movs	r0, #0
 8002e16:	f000 f80f 	bl	8002e38 <HAL_InitTick>
 8002e1a:	4603      	mov	r3, r0
 8002e1c:	2b00      	cmp	r3, #0
 8002e1e:	d002      	beq.n	8002e26 <HAL_Init+0x2e>
 8002e20:	2301      	movs	r3, #1
 8002e22:	71fb      	strb	r3, [r7, #7]
 8002e24:	e001      	b.n	8002e2a <HAL_Init+0x32>
 8002e26:	f7ff fda9 	bl	800297c <HAL_MspInit>
 8002e2a:	79fb      	ldrb	r3, [r7, #7]
 8002e2c:	4618      	mov	r0, r3
 8002e2e:	3708      	adds	r7, #8
 8002e30:	46bd      	mov	sp, r7
 8002e32:	bd80      	pop	{r7, pc}
 8002e34:	40022000 	.word	0x40022000

08002e38 <HAL_InitTick>:
 8002e38:	b580      	push	{r7, lr}
 8002e3a:	b084      	sub	sp, #16
 8002e3c:	af00      	add	r7, sp, #0
 8002e3e:	6078      	str	r0, [r7, #4]
 8002e40:	2300      	movs	r3, #0
 8002e42:	73fb      	strb	r3, [r7, #15]
 8002e44:	4b17      	ldr	r3, [pc, #92]	; (8002ea4 <HAL_InitTick+0x6c>)
 8002e46:	781b      	ldrb	r3, [r3, #0]
 8002e48:	2b00      	cmp	r3, #0
 8002e4a:	d023      	beq.n	8002e94 <HAL_InitTick+0x5c>
 8002e4c:	4b16      	ldr	r3, [pc, #88]	; (8002ea8 <HAL_InitTick+0x70>)
 8002e4e:	681a      	ldr	r2, [r3, #0]
 8002e50:	4b14      	ldr	r3, [pc, #80]	; (8002ea4 <HAL_InitTick+0x6c>)
 8002e52:	781b      	ldrb	r3, [r3, #0]
 8002e54:	4619      	mov	r1, r3
 8002e56:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e5a:	fbb3 f3f1 	udiv	r3, r3, r1
 8002e5e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e62:	4618      	mov	r0, r3
 8002e64:	f000 f96d 	bl	8003142 <HAL_SYSTICK_Config>
 8002e68:	4603      	mov	r3, r0
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d10f      	bne.n	8002e8e <HAL_InitTick+0x56>
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	2b0f      	cmp	r3, #15
 8002e72:	d809      	bhi.n	8002e88 <HAL_InitTick+0x50>
 8002e74:	2200      	movs	r2, #0
 8002e76:	6879      	ldr	r1, [r7, #4]
 8002e78:	f04f 30ff 	mov.w	r0, #4294967295
 8002e7c:	f000 f937 	bl	80030ee <HAL_NVIC_SetPriority>
 8002e80:	4a0a      	ldr	r2, [pc, #40]	; (8002eac <HAL_InitTick+0x74>)
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	6013      	str	r3, [r2, #0]
 8002e86:	e007      	b.n	8002e98 <HAL_InitTick+0x60>
 8002e88:	2301      	movs	r3, #1
 8002e8a:	73fb      	strb	r3, [r7, #15]
 8002e8c:	e004      	b.n	8002e98 <HAL_InitTick+0x60>
 8002e8e:	2301      	movs	r3, #1
 8002e90:	73fb      	strb	r3, [r7, #15]
 8002e92:	e001      	b.n	8002e98 <HAL_InitTick+0x60>
 8002e94:	2301      	movs	r3, #1
 8002e96:	73fb      	strb	r3, [r7, #15]
 8002e98:	7bfb      	ldrb	r3, [r7, #15]
 8002e9a:	4618      	mov	r0, r3
 8002e9c:	3710      	adds	r7, #16
 8002e9e:	46bd      	mov	sp, r7
 8002ea0:	bd80      	pop	{r7, pc}
 8002ea2:	bf00      	nop
 8002ea4:	20000008 	.word	0x20000008
 8002ea8:	20000000 	.word	0x20000000
 8002eac:	20000004 	.word	0x20000004

08002eb0 <HAL_IncTick>:
 8002eb0:	b480      	push	{r7}
 8002eb2:	af00      	add	r7, sp, #0
 8002eb4:	4b06      	ldr	r3, [pc, #24]	; (8002ed0 <HAL_IncTick+0x20>)
 8002eb6:	781b      	ldrb	r3, [r3, #0]
 8002eb8:	461a      	mov	r2, r3
 8002eba:	4b06      	ldr	r3, [pc, #24]	; (8002ed4 <HAL_IncTick+0x24>)
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	4413      	add	r3, r2
 8002ec0:	4a04      	ldr	r2, [pc, #16]	; (8002ed4 <HAL_IncTick+0x24>)
 8002ec2:	6013      	str	r3, [r2, #0]
 8002ec4:	bf00      	nop
 8002ec6:	46bd      	mov	sp, r7
 8002ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ecc:	4770      	bx	lr
 8002ece:	bf00      	nop
 8002ed0:	20000008 	.word	0x20000008
 8002ed4:	200004c4 	.word	0x200004c4

08002ed8 <HAL_GetTick>:
 8002ed8:	b480      	push	{r7}
 8002eda:	af00      	add	r7, sp, #0
 8002edc:	4b03      	ldr	r3, [pc, #12]	; (8002eec <HAL_GetTick+0x14>)
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	4618      	mov	r0, r3
 8002ee2:	46bd      	mov	sp, r7
 8002ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ee8:	4770      	bx	lr
 8002eea:	bf00      	nop
 8002eec:	200004c4 	.word	0x200004c4

08002ef0 <HAL_Delay>:
 8002ef0:	b580      	push	{r7, lr}
 8002ef2:	b084      	sub	sp, #16
 8002ef4:	af00      	add	r7, sp, #0
 8002ef6:	6078      	str	r0, [r7, #4]
 8002ef8:	f7ff ffee 	bl	8002ed8 <HAL_GetTick>
 8002efc:	60b8      	str	r0, [r7, #8]
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	60fb      	str	r3, [r7, #12]
 8002f02:	68fb      	ldr	r3, [r7, #12]
 8002f04:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002f08:	d005      	beq.n	8002f16 <HAL_Delay+0x26>
 8002f0a:	4b0a      	ldr	r3, [pc, #40]	; (8002f34 <HAL_Delay+0x44>)
 8002f0c:	781b      	ldrb	r3, [r3, #0]
 8002f0e:	461a      	mov	r2, r3
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	4413      	add	r3, r2
 8002f14:	60fb      	str	r3, [r7, #12]
 8002f16:	bf00      	nop
 8002f18:	f7ff ffde 	bl	8002ed8 <HAL_GetTick>
 8002f1c:	4602      	mov	r2, r0
 8002f1e:	68bb      	ldr	r3, [r7, #8]
 8002f20:	1ad3      	subs	r3, r2, r3
 8002f22:	68fa      	ldr	r2, [r7, #12]
 8002f24:	429a      	cmp	r2, r3
 8002f26:	d8f7      	bhi.n	8002f18 <HAL_Delay+0x28>
 8002f28:	bf00      	nop
 8002f2a:	bf00      	nop
 8002f2c:	3710      	adds	r7, #16
 8002f2e:	46bd      	mov	sp, r7
 8002f30:	bd80      	pop	{r7, pc}
 8002f32:	bf00      	nop
 8002f34:	20000008 	.word	0x20000008

08002f38 <__NVIC_SetPriorityGrouping>:
 8002f38:	b480      	push	{r7}
 8002f3a:	b085      	sub	sp, #20
 8002f3c:	af00      	add	r7, sp, #0
 8002f3e:	6078      	str	r0, [r7, #4]
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	f003 0307 	and.w	r3, r3, #7
 8002f46:	60fb      	str	r3, [r7, #12]
 8002f48:	4b0c      	ldr	r3, [pc, #48]	; (8002f7c <__NVIC_SetPriorityGrouping+0x44>)
 8002f4a:	68db      	ldr	r3, [r3, #12]
 8002f4c:	60bb      	str	r3, [r7, #8]
 8002f4e:	68ba      	ldr	r2, [r7, #8]
 8002f50:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002f54:	4013      	ands	r3, r2
 8002f56:	60bb      	str	r3, [r7, #8]
 8002f58:	68fb      	ldr	r3, [r7, #12]
 8002f5a:	021a      	lsls	r2, r3, #8
 8002f5c:	68bb      	ldr	r3, [r7, #8]
 8002f5e:	4313      	orrs	r3, r2
 8002f60:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002f64:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002f68:	60bb      	str	r3, [r7, #8]
 8002f6a:	4a04      	ldr	r2, [pc, #16]	; (8002f7c <__NVIC_SetPriorityGrouping+0x44>)
 8002f6c:	68bb      	ldr	r3, [r7, #8]
 8002f6e:	60d3      	str	r3, [r2, #12]
 8002f70:	bf00      	nop
 8002f72:	3714      	adds	r7, #20
 8002f74:	46bd      	mov	sp, r7
 8002f76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f7a:	4770      	bx	lr
 8002f7c:	e000ed00 	.word	0xe000ed00

08002f80 <__NVIC_GetPriorityGrouping>:
 8002f80:	b480      	push	{r7}
 8002f82:	af00      	add	r7, sp, #0
 8002f84:	4b04      	ldr	r3, [pc, #16]	; (8002f98 <__NVIC_GetPriorityGrouping+0x18>)
 8002f86:	68db      	ldr	r3, [r3, #12]
 8002f88:	0a1b      	lsrs	r3, r3, #8
 8002f8a:	f003 0307 	and.w	r3, r3, #7
 8002f8e:	4618      	mov	r0, r3
 8002f90:	46bd      	mov	sp, r7
 8002f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f96:	4770      	bx	lr
 8002f98:	e000ed00 	.word	0xe000ed00

08002f9c <__NVIC_EnableIRQ>:
 8002f9c:	b480      	push	{r7}
 8002f9e:	b083      	sub	sp, #12
 8002fa0:	af00      	add	r7, sp, #0
 8002fa2:	4603      	mov	r3, r0
 8002fa4:	71fb      	strb	r3, [r7, #7]
 8002fa6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	db0b      	blt.n	8002fc6 <__NVIC_EnableIRQ+0x2a>
 8002fae:	79fb      	ldrb	r3, [r7, #7]
 8002fb0:	f003 021f 	and.w	r2, r3, #31
 8002fb4:	4907      	ldr	r1, [pc, #28]	; (8002fd4 <__NVIC_EnableIRQ+0x38>)
 8002fb6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002fba:	095b      	lsrs	r3, r3, #5
 8002fbc:	2001      	movs	r0, #1
 8002fbe:	fa00 f202 	lsl.w	r2, r0, r2
 8002fc2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002fc6:	bf00      	nop
 8002fc8:	370c      	adds	r7, #12
 8002fca:	46bd      	mov	sp, r7
 8002fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fd0:	4770      	bx	lr
 8002fd2:	bf00      	nop
 8002fd4:	e000e100 	.word	0xe000e100

08002fd8 <__NVIC_SetPriority>:
 8002fd8:	b480      	push	{r7}
 8002fda:	b083      	sub	sp, #12
 8002fdc:	af00      	add	r7, sp, #0
 8002fde:	4603      	mov	r3, r0
 8002fe0:	6039      	str	r1, [r7, #0]
 8002fe2:	71fb      	strb	r3, [r7, #7]
 8002fe4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	db0a      	blt.n	8003002 <__NVIC_SetPriority+0x2a>
 8002fec:	683b      	ldr	r3, [r7, #0]
 8002fee:	b2da      	uxtb	r2, r3
 8002ff0:	490c      	ldr	r1, [pc, #48]	; (8003024 <__NVIC_SetPriority+0x4c>)
 8002ff2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ff6:	0112      	lsls	r2, r2, #4
 8002ff8:	b2d2      	uxtb	r2, r2
 8002ffa:	440b      	add	r3, r1
 8002ffc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003000:	e00a      	b.n	8003018 <__NVIC_SetPriority+0x40>
 8003002:	683b      	ldr	r3, [r7, #0]
 8003004:	b2da      	uxtb	r2, r3
 8003006:	4908      	ldr	r1, [pc, #32]	; (8003028 <__NVIC_SetPriority+0x50>)
 8003008:	79fb      	ldrb	r3, [r7, #7]
 800300a:	f003 030f 	and.w	r3, r3, #15
 800300e:	3b04      	subs	r3, #4
 8003010:	0112      	lsls	r2, r2, #4
 8003012:	b2d2      	uxtb	r2, r2
 8003014:	440b      	add	r3, r1
 8003016:	761a      	strb	r2, [r3, #24]
 8003018:	bf00      	nop
 800301a:	370c      	adds	r7, #12
 800301c:	46bd      	mov	sp, r7
 800301e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003022:	4770      	bx	lr
 8003024:	e000e100 	.word	0xe000e100
 8003028:	e000ed00 	.word	0xe000ed00

0800302c <NVIC_EncodePriority>:
 800302c:	b480      	push	{r7}
 800302e:	b089      	sub	sp, #36	; 0x24
 8003030:	af00      	add	r7, sp, #0
 8003032:	60f8      	str	r0, [r7, #12]
 8003034:	60b9      	str	r1, [r7, #8]
 8003036:	607a      	str	r2, [r7, #4]
 8003038:	68fb      	ldr	r3, [r7, #12]
 800303a:	f003 0307 	and.w	r3, r3, #7
 800303e:	61fb      	str	r3, [r7, #28]
 8003040:	69fb      	ldr	r3, [r7, #28]
 8003042:	f1c3 0307 	rsb	r3, r3, #7
 8003046:	2b04      	cmp	r3, #4
 8003048:	bf28      	it	cs
 800304a:	2304      	movcs	r3, #4
 800304c:	61bb      	str	r3, [r7, #24]
 800304e:	69fb      	ldr	r3, [r7, #28]
 8003050:	3304      	adds	r3, #4
 8003052:	2b06      	cmp	r3, #6
 8003054:	d902      	bls.n	800305c <NVIC_EncodePriority+0x30>
 8003056:	69fb      	ldr	r3, [r7, #28]
 8003058:	3b03      	subs	r3, #3
 800305a:	e000      	b.n	800305e <NVIC_EncodePriority+0x32>
 800305c:	2300      	movs	r3, #0
 800305e:	617b      	str	r3, [r7, #20]
 8003060:	f04f 32ff 	mov.w	r2, #4294967295
 8003064:	69bb      	ldr	r3, [r7, #24]
 8003066:	fa02 f303 	lsl.w	r3, r2, r3
 800306a:	43da      	mvns	r2, r3
 800306c:	68bb      	ldr	r3, [r7, #8]
 800306e:	401a      	ands	r2, r3
 8003070:	697b      	ldr	r3, [r7, #20]
 8003072:	409a      	lsls	r2, r3
 8003074:	f04f 31ff 	mov.w	r1, #4294967295
 8003078:	697b      	ldr	r3, [r7, #20]
 800307a:	fa01 f303 	lsl.w	r3, r1, r3
 800307e:	43d9      	mvns	r1, r3
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	400b      	ands	r3, r1
 8003084:	4313      	orrs	r3, r2
 8003086:	4618      	mov	r0, r3
 8003088:	3724      	adds	r7, #36	; 0x24
 800308a:	46bd      	mov	sp, r7
 800308c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003090:	4770      	bx	lr
	...

08003094 <SysTick_Config>:
 8003094:	b580      	push	{r7, lr}
 8003096:	b082      	sub	sp, #8
 8003098:	af00      	add	r7, sp, #0
 800309a:	6078      	str	r0, [r7, #4]
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	3b01      	subs	r3, #1
 80030a0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80030a4:	d301      	bcc.n	80030aa <SysTick_Config+0x16>
 80030a6:	2301      	movs	r3, #1
 80030a8:	e00f      	b.n	80030ca <SysTick_Config+0x36>
 80030aa:	4a0a      	ldr	r2, [pc, #40]	; (80030d4 <SysTick_Config+0x40>)
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	3b01      	subs	r3, #1
 80030b0:	6053      	str	r3, [r2, #4]
 80030b2:	210f      	movs	r1, #15
 80030b4:	f04f 30ff 	mov.w	r0, #4294967295
 80030b8:	f7ff ff8e 	bl	8002fd8 <__NVIC_SetPriority>
 80030bc:	4b05      	ldr	r3, [pc, #20]	; (80030d4 <SysTick_Config+0x40>)
 80030be:	2200      	movs	r2, #0
 80030c0:	609a      	str	r2, [r3, #8]
 80030c2:	4b04      	ldr	r3, [pc, #16]	; (80030d4 <SysTick_Config+0x40>)
 80030c4:	2207      	movs	r2, #7
 80030c6:	601a      	str	r2, [r3, #0]
 80030c8:	2300      	movs	r3, #0
 80030ca:	4618      	mov	r0, r3
 80030cc:	3708      	adds	r7, #8
 80030ce:	46bd      	mov	sp, r7
 80030d0:	bd80      	pop	{r7, pc}
 80030d2:	bf00      	nop
 80030d4:	e000e010 	.word	0xe000e010

080030d8 <HAL_NVIC_SetPriorityGrouping>:
 80030d8:	b580      	push	{r7, lr}
 80030da:	b082      	sub	sp, #8
 80030dc:	af00      	add	r7, sp, #0
 80030de:	6078      	str	r0, [r7, #4]
 80030e0:	6878      	ldr	r0, [r7, #4]
 80030e2:	f7ff ff29 	bl	8002f38 <__NVIC_SetPriorityGrouping>
 80030e6:	bf00      	nop
 80030e8:	3708      	adds	r7, #8
 80030ea:	46bd      	mov	sp, r7
 80030ec:	bd80      	pop	{r7, pc}

080030ee <HAL_NVIC_SetPriority>:
 80030ee:	b580      	push	{r7, lr}
 80030f0:	b086      	sub	sp, #24
 80030f2:	af00      	add	r7, sp, #0
 80030f4:	4603      	mov	r3, r0
 80030f6:	60b9      	str	r1, [r7, #8]
 80030f8:	607a      	str	r2, [r7, #4]
 80030fa:	73fb      	strb	r3, [r7, #15]
 80030fc:	2300      	movs	r3, #0
 80030fe:	617b      	str	r3, [r7, #20]
 8003100:	f7ff ff3e 	bl	8002f80 <__NVIC_GetPriorityGrouping>
 8003104:	6178      	str	r0, [r7, #20]
 8003106:	687a      	ldr	r2, [r7, #4]
 8003108:	68b9      	ldr	r1, [r7, #8]
 800310a:	6978      	ldr	r0, [r7, #20]
 800310c:	f7ff ff8e 	bl	800302c <NVIC_EncodePriority>
 8003110:	4602      	mov	r2, r0
 8003112:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003116:	4611      	mov	r1, r2
 8003118:	4618      	mov	r0, r3
 800311a:	f7ff ff5d 	bl	8002fd8 <__NVIC_SetPriority>
 800311e:	bf00      	nop
 8003120:	3718      	adds	r7, #24
 8003122:	46bd      	mov	sp, r7
 8003124:	bd80      	pop	{r7, pc}

08003126 <HAL_NVIC_EnableIRQ>:
 8003126:	b580      	push	{r7, lr}
 8003128:	b082      	sub	sp, #8
 800312a:	af00      	add	r7, sp, #0
 800312c:	4603      	mov	r3, r0
 800312e:	71fb      	strb	r3, [r7, #7]
 8003130:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003134:	4618      	mov	r0, r3
 8003136:	f7ff ff31 	bl	8002f9c <__NVIC_EnableIRQ>
 800313a:	bf00      	nop
 800313c:	3708      	adds	r7, #8
 800313e:	46bd      	mov	sp, r7
 8003140:	bd80      	pop	{r7, pc}

08003142 <HAL_SYSTICK_Config>:
 8003142:	b580      	push	{r7, lr}
 8003144:	b082      	sub	sp, #8
 8003146:	af00      	add	r7, sp, #0
 8003148:	6078      	str	r0, [r7, #4]
 800314a:	6878      	ldr	r0, [r7, #4]
 800314c:	f7ff ffa2 	bl	8003094 <SysTick_Config>
 8003150:	4603      	mov	r3, r0
 8003152:	4618      	mov	r0, r3
 8003154:	3708      	adds	r7, #8
 8003156:	46bd      	mov	sp, r7
 8003158:	bd80      	pop	{r7, pc}
	...

0800315c <HAL_GPIO_Init>:
 800315c:	b480      	push	{r7}
 800315e:	b087      	sub	sp, #28
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	6039      	str	r1, [r7, #0]
 8003166:	2300      	movs	r3, #0
 8003168:	617b      	str	r3, [r7, #20]
 800316a:	e17f      	b.n	800346c <HAL_GPIO_Init+0x310>
 800316c:	683b      	ldr	r3, [r7, #0]
 800316e:	681a      	ldr	r2, [r3, #0]
 8003170:	2101      	movs	r1, #1
 8003172:	697b      	ldr	r3, [r7, #20]
 8003174:	fa01 f303 	lsl.w	r3, r1, r3
 8003178:	4013      	ands	r3, r2
 800317a:	60fb      	str	r3, [r7, #12]
 800317c:	68fb      	ldr	r3, [r7, #12]
 800317e:	2b00      	cmp	r3, #0
 8003180:	f000 8171 	beq.w	8003466 <HAL_GPIO_Init+0x30a>
 8003184:	683b      	ldr	r3, [r7, #0]
 8003186:	685b      	ldr	r3, [r3, #4]
 8003188:	f003 0303 	and.w	r3, r3, #3
 800318c:	2b01      	cmp	r3, #1
 800318e:	d005      	beq.n	800319c <HAL_GPIO_Init+0x40>
 8003190:	683b      	ldr	r3, [r7, #0]
 8003192:	685b      	ldr	r3, [r3, #4]
 8003194:	f003 0303 	and.w	r3, r3, #3
 8003198:	2b02      	cmp	r3, #2
 800319a:	d130      	bne.n	80031fe <HAL_GPIO_Init+0xa2>
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	689b      	ldr	r3, [r3, #8]
 80031a0:	613b      	str	r3, [r7, #16]
 80031a2:	697b      	ldr	r3, [r7, #20]
 80031a4:	005b      	lsls	r3, r3, #1
 80031a6:	2203      	movs	r2, #3
 80031a8:	fa02 f303 	lsl.w	r3, r2, r3
 80031ac:	43db      	mvns	r3, r3
 80031ae:	693a      	ldr	r2, [r7, #16]
 80031b0:	4013      	ands	r3, r2
 80031b2:	613b      	str	r3, [r7, #16]
 80031b4:	683b      	ldr	r3, [r7, #0]
 80031b6:	68da      	ldr	r2, [r3, #12]
 80031b8:	697b      	ldr	r3, [r7, #20]
 80031ba:	005b      	lsls	r3, r3, #1
 80031bc:	fa02 f303 	lsl.w	r3, r2, r3
 80031c0:	693a      	ldr	r2, [r7, #16]
 80031c2:	4313      	orrs	r3, r2
 80031c4:	613b      	str	r3, [r7, #16]
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	693a      	ldr	r2, [r7, #16]
 80031ca:	609a      	str	r2, [r3, #8]
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	685b      	ldr	r3, [r3, #4]
 80031d0:	613b      	str	r3, [r7, #16]
 80031d2:	2201      	movs	r2, #1
 80031d4:	697b      	ldr	r3, [r7, #20]
 80031d6:	fa02 f303 	lsl.w	r3, r2, r3
 80031da:	43db      	mvns	r3, r3
 80031dc:	693a      	ldr	r2, [r7, #16]
 80031de:	4013      	ands	r3, r2
 80031e0:	613b      	str	r3, [r7, #16]
 80031e2:	683b      	ldr	r3, [r7, #0]
 80031e4:	685b      	ldr	r3, [r3, #4]
 80031e6:	091b      	lsrs	r3, r3, #4
 80031e8:	f003 0201 	and.w	r2, r3, #1
 80031ec:	697b      	ldr	r3, [r7, #20]
 80031ee:	fa02 f303 	lsl.w	r3, r2, r3
 80031f2:	693a      	ldr	r2, [r7, #16]
 80031f4:	4313      	orrs	r3, r2
 80031f6:	613b      	str	r3, [r7, #16]
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	693a      	ldr	r2, [r7, #16]
 80031fc:	605a      	str	r2, [r3, #4]
 80031fe:	683b      	ldr	r3, [r7, #0]
 8003200:	685b      	ldr	r3, [r3, #4]
 8003202:	f003 0303 	and.w	r3, r3, #3
 8003206:	2b03      	cmp	r3, #3
 8003208:	d118      	bne.n	800323c <HAL_GPIO_Init+0xe0>
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800320e:	613b      	str	r3, [r7, #16]
 8003210:	2201      	movs	r2, #1
 8003212:	697b      	ldr	r3, [r7, #20]
 8003214:	fa02 f303 	lsl.w	r3, r2, r3
 8003218:	43db      	mvns	r3, r3
 800321a:	693a      	ldr	r2, [r7, #16]
 800321c:	4013      	ands	r3, r2
 800321e:	613b      	str	r3, [r7, #16]
 8003220:	683b      	ldr	r3, [r7, #0]
 8003222:	685b      	ldr	r3, [r3, #4]
 8003224:	08db      	lsrs	r3, r3, #3
 8003226:	f003 0201 	and.w	r2, r3, #1
 800322a:	697b      	ldr	r3, [r7, #20]
 800322c:	fa02 f303 	lsl.w	r3, r2, r3
 8003230:	693a      	ldr	r2, [r7, #16]
 8003232:	4313      	orrs	r3, r2
 8003234:	613b      	str	r3, [r7, #16]
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	693a      	ldr	r2, [r7, #16]
 800323a:	62da      	str	r2, [r3, #44]	; 0x2c
 800323c:	683b      	ldr	r3, [r7, #0]
 800323e:	685b      	ldr	r3, [r3, #4]
 8003240:	f003 0303 	and.w	r3, r3, #3
 8003244:	2b03      	cmp	r3, #3
 8003246:	d017      	beq.n	8003278 <HAL_GPIO_Init+0x11c>
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	68db      	ldr	r3, [r3, #12]
 800324c:	613b      	str	r3, [r7, #16]
 800324e:	697b      	ldr	r3, [r7, #20]
 8003250:	005b      	lsls	r3, r3, #1
 8003252:	2203      	movs	r2, #3
 8003254:	fa02 f303 	lsl.w	r3, r2, r3
 8003258:	43db      	mvns	r3, r3
 800325a:	693a      	ldr	r2, [r7, #16]
 800325c:	4013      	ands	r3, r2
 800325e:	613b      	str	r3, [r7, #16]
 8003260:	683b      	ldr	r3, [r7, #0]
 8003262:	689a      	ldr	r2, [r3, #8]
 8003264:	697b      	ldr	r3, [r7, #20]
 8003266:	005b      	lsls	r3, r3, #1
 8003268:	fa02 f303 	lsl.w	r3, r2, r3
 800326c:	693a      	ldr	r2, [r7, #16]
 800326e:	4313      	orrs	r3, r2
 8003270:	613b      	str	r3, [r7, #16]
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	693a      	ldr	r2, [r7, #16]
 8003276:	60da      	str	r2, [r3, #12]
 8003278:	683b      	ldr	r3, [r7, #0]
 800327a:	685b      	ldr	r3, [r3, #4]
 800327c:	f003 0303 	and.w	r3, r3, #3
 8003280:	2b02      	cmp	r3, #2
 8003282:	d123      	bne.n	80032cc <HAL_GPIO_Init+0x170>
 8003284:	697b      	ldr	r3, [r7, #20]
 8003286:	08da      	lsrs	r2, r3, #3
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	3208      	adds	r2, #8
 800328c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003290:	613b      	str	r3, [r7, #16]
 8003292:	697b      	ldr	r3, [r7, #20]
 8003294:	f003 0307 	and.w	r3, r3, #7
 8003298:	009b      	lsls	r3, r3, #2
 800329a:	220f      	movs	r2, #15
 800329c:	fa02 f303 	lsl.w	r3, r2, r3
 80032a0:	43db      	mvns	r3, r3
 80032a2:	693a      	ldr	r2, [r7, #16]
 80032a4:	4013      	ands	r3, r2
 80032a6:	613b      	str	r3, [r7, #16]
 80032a8:	683b      	ldr	r3, [r7, #0]
 80032aa:	691a      	ldr	r2, [r3, #16]
 80032ac:	697b      	ldr	r3, [r7, #20]
 80032ae:	f003 0307 	and.w	r3, r3, #7
 80032b2:	009b      	lsls	r3, r3, #2
 80032b4:	fa02 f303 	lsl.w	r3, r2, r3
 80032b8:	693a      	ldr	r2, [r7, #16]
 80032ba:	4313      	orrs	r3, r2
 80032bc:	613b      	str	r3, [r7, #16]
 80032be:	697b      	ldr	r3, [r7, #20]
 80032c0:	08da      	lsrs	r2, r3, #3
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	3208      	adds	r2, #8
 80032c6:	6939      	ldr	r1, [r7, #16]
 80032c8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	613b      	str	r3, [r7, #16]
 80032d2:	697b      	ldr	r3, [r7, #20]
 80032d4:	005b      	lsls	r3, r3, #1
 80032d6:	2203      	movs	r2, #3
 80032d8:	fa02 f303 	lsl.w	r3, r2, r3
 80032dc:	43db      	mvns	r3, r3
 80032de:	693a      	ldr	r2, [r7, #16]
 80032e0:	4013      	ands	r3, r2
 80032e2:	613b      	str	r3, [r7, #16]
 80032e4:	683b      	ldr	r3, [r7, #0]
 80032e6:	685b      	ldr	r3, [r3, #4]
 80032e8:	f003 0203 	and.w	r2, r3, #3
 80032ec:	697b      	ldr	r3, [r7, #20]
 80032ee:	005b      	lsls	r3, r3, #1
 80032f0:	fa02 f303 	lsl.w	r3, r2, r3
 80032f4:	693a      	ldr	r2, [r7, #16]
 80032f6:	4313      	orrs	r3, r2
 80032f8:	613b      	str	r3, [r7, #16]
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	693a      	ldr	r2, [r7, #16]
 80032fe:	601a      	str	r2, [r3, #0]
 8003300:	683b      	ldr	r3, [r7, #0]
 8003302:	685b      	ldr	r3, [r3, #4]
 8003304:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003308:	2b00      	cmp	r3, #0
 800330a:	f000 80ac 	beq.w	8003466 <HAL_GPIO_Init+0x30a>
 800330e:	4b5f      	ldr	r3, [pc, #380]	; (800348c <HAL_GPIO_Init+0x330>)
 8003310:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003312:	4a5e      	ldr	r2, [pc, #376]	; (800348c <HAL_GPIO_Init+0x330>)
 8003314:	f043 0301 	orr.w	r3, r3, #1
 8003318:	6613      	str	r3, [r2, #96]	; 0x60
 800331a:	4b5c      	ldr	r3, [pc, #368]	; (800348c <HAL_GPIO_Init+0x330>)
 800331c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800331e:	f003 0301 	and.w	r3, r3, #1
 8003322:	60bb      	str	r3, [r7, #8]
 8003324:	68bb      	ldr	r3, [r7, #8]
 8003326:	4a5a      	ldr	r2, [pc, #360]	; (8003490 <HAL_GPIO_Init+0x334>)
 8003328:	697b      	ldr	r3, [r7, #20]
 800332a:	089b      	lsrs	r3, r3, #2
 800332c:	3302      	adds	r3, #2
 800332e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003332:	613b      	str	r3, [r7, #16]
 8003334:	697b      	ldr	r3, [r7, #20]
 8003336:	f003 0303 	and.w	r3, r3, #3
 800333a:	009b      	lsls	r3, r3, #2
 800333c:	220f      	movs	r2, #15
 800333e:	fa02 f303 	lsl.w	r3, r2, r3
 8003342:	43db      	mvns	r3, r3
 8003344:	693a      	ldr	r2, [r7, #16]
 8003346:	4013      	ands	r3, r2
 8003348:	613b      	str	r3, [r7, #16]
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8003350:	d025      	beq.n	800339e <HAL_GPIO_Init+0x242>
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	4a4f      	ldr	r2, [pc, #316]	; (8003494 <HAL_GPIO_Init+0x338>)
 8003356:	4293      	cmp	r3, r2
 8003358:	d01f      	beq.n	800339a <HAL_GPIO_Init+0x23e>
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	4a4e      	ldr	r2, [pc, #312]	; (8003498 <HAL_GPIO_Init+0x33c>)
 800335e:	4293      	cmp	r3, r2
 8003360:	d019      	beq.n	8003396 <HAL_GPIO_Init+0x23a>
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	4a4d      	ldr	r2, [pc, #308]	; (800349c <HAL_GPIO_Init+0x340>)
 8003366:	4293      	cmp	r3, r2
 8003368:	d013      	beq.n	8003392 <HAL_GPIO_Init+0x236>
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	4a4c      	ldr	r2, [pc, #304]	; (80034a0 <HAL_GPIO_Init+0x344>)
 800336e:	4293      	cmp	r3, r2
 8003370:	d00d      	beq.n	800338e <HAL_GPIO_Init+0x232>
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	4a4b      	ldr	r2, [pc, #300]	; (80034a4 <HAL_GPIO_Init+0x348>)
 8003376:	4293      	cmp	r3, r2
 8003378:	d007      	beq.n	800338a <HAL_GPIO_Init+0x22e>
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	4a4a      	ldr	r2, [pc, #296]	; (80034a8 <HAL_GPIO_Init+0x34c>)
 800337e:	4293      	cmp	r3, r2
 8003380:	d101      	bne.n	8003386 <HAL_GPIO_Init+0x22a>
 8003382:	2306      	movs	r3, #6
 8003384:	e00c      	b.n	80033a0 <HAL_GPIO_Init+0x244>
 8003386:	2307      	movs	r3, #7
 8003388:	e00a      	b.n	80033a0 <HAL_GPIO_Init+0x244>
 800338a:	2305      	movs	r3, #5
 800338c:	e008      	b.n	80033a0 <HAL_GPIO_Init+0x244>
 800338e:	2304      	movs	r3, #4
 8003390:	e006      	b.n	80033a0 <HAL_GPIO_Init+0x244>
 8003392:	2303      	movs	r3, #3
 8003394:	e004      	b.n	80033a0 <HAL_GPIO_Init+0x244>
 8003396:	2302      	movs	r3, #2
 8003398:	e002      	b.n	80033a0 <HAL_GPIO_Init+0x244>
 800339a:	2301      	movs	r3, #1
 800339c:	e000      	b.n	80033a0 <HAL_GPIO_Init+0x244>
 800339e:	2300      	movs	r3, #0
 80033a0:	697a      	ldr	r2, [r7, #20]
 80033a2:	f002 0203 	and.w	r2, r2, #3
 80033a6:	0092      	lsls	r2, r2, #2
 80033a8:	4093      	lsls	r3, r2
 80033aa:	693a      	ldr	r2, [r7, #16]
 80033ac:	4313      	orrs	r3, r2
 80033ae:	613b      	str	r3, [r7, #16]
 80033b0:	4937      	ldr	r1, [pc, #220]	; (8003490 <HAL_GPIO_Init+0x334>)
 80033b2:	697b      	ldr	r3, [r7, #20]
 80033b4:	089b      	lsrs	r3, r3, #2
 80033b6:	3302      	adds	r3, #2
 80033b8:	693a      	ldr	r2, [r7, #16]
 80033ba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80033be:	4b3b      	ldr	r3, [pc, #236]	; (80034ac <HAL_GPIO_Init+0x350>)
 80033c0:	689b      	ldr	r3, [r3, #8]
 80033c2:	613b      	str	r3, [r7, #16]
 80033c4:	68fb      	ldr	r3, [r7, #12]
 80033c6:	43db      	mvns	r3, r3
 80033c8:	693a      	ldr	r2, [r7, #16]
 80033ca:	4013      	ands	r3, r2
 80033cc:	613b      	str	r3, [r7, #16]
 80033ce:	683b      	ldr	r3, [r7, #0]
 80033d0:	685b      	ldr	r3, [r3, #4]
 80033d2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	d003      	beq.n	80033e2 <HAL_GPIO_Init+0x286>
 80033da:	693a      	ldr	r2, [r7, #16]
 80033dc:	68fb      	ldr	r3, [r7, #12]
 80033de:	4313      	orrs	r3, r2
 80033e0:	613b      	str	r3, [r7, #16]
 80033e2:	4a32      	ldr	r2, [pc, #200]	; (80034ac <HAL_GPIO_Init+0x350>)
 80033e4:	693b      	ldr	r3, [r7, #16]
 80033e6:	6093      	str	r3, [r2, #8]
 80033e8:	4b30      	ldr	r3, [pc, #192]	; (80034ac <HAL_GPIO_Init+0x350>)
 80033ea:	68db      	ldr	r3, [r3, #12]
 80033ec:	613b      	str	r3, [r7, #16]
 80033ee:	68fb      	ldr	r3, [r7, #12]
 80033f0:	43db      	mvns	r3, r3
 80033f2:	693a      	ldr	r2, [r7, #16]
 80033f4:	4013      	ands	r3, r2
 80033f6:	613b      	str	r3, [r7, #16]
 80033f8:	683b      	ldr	r3, [r7, #0]
 80033fa:	685b      	ldr	r3, [r3, #4]
 80033fc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003400:	2b00      	cmp	r3, #0
 8003402:	d003      	beq.n	800340c <HAL_GPIO_Init+0x2b0>
 8003404:	693a      	ldr	r2, [r7, #16]
 8003406:	68fb      	ldr	r3, [r7, #12]
 8003408:	4313      	orrs	r3, r2
 800340a:	613b      	str	r3, [r7, #16]
 800340c:	4a27      	ldr	r2, [pc, #156]	; (80034ac <HAL_GPIO_Init+0x350>)
 800340e:	693b      	ldr	r3, [r7, #16]
 8003410:	60d3      	str	r3, [r2, #12]
 8003412:	4b26      	ldr	r3, [pc, #152]	; (80034ac <HAL_GPIO_Init+0x350>)
 8003414:	685b      	ldr	r3, [r3, #4]
 8003416:	613b      	str	r3, [r7, #16]
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	43db      	mvns	r3, r3
 800341c:	693a      	ldr	r2, [r7, #16]
 800341e:	4013      	ands	r3, r2
 8003420:	613b      	str	r3, [r7, #16]
 8003422:	683b      	ldr	r3, [r7, #0]
 8003424:	685b      	ldr	r3, [r3, #4]
 8003426:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800342a:	2b00      	cmp	r3, #0
 800342c:	d003      	beq.n	8003436 <HAL_GPIO_Init+0x2da>
 800342e:	693a      	ldr	r2, [r7, #16]
 8003430:	68fb      	ldr	r3, [r7, #12]
 8003432:	4313      	orrs	r3, r2
 8003434:	613b      	str	r3, [r7, #16]
 8003436:	4a1d      	ldr	r2, [pc, #116]	; (80034ac <HAL_GPIO_Init+0x350>)
 8003438:	693b      	ldr	r3, [r7, #16]
 800343a:	6053      	str	r3, [r2, #4]
 800343c:	4b1b      	ldr	r3, [pc, #108]	; (80034ac <HAL_GPIO_Init+0x350>)
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	613b      	str	r3, [r7, #16]
 8003442:	68fb      	ldr	r3, [r7, #12]
 8003444:	43db      	mvns	r3, r3
 8003446:	693a      	ldr	r2, [r7, #16]
 8003448:	4013      	ands	r3, r2
 800344a:	613b      	str	r3, [r7, #16]
 800344c:	683b      	ldr	r3, [r7, #0]
 800344e:	685b      	ldr	r3, [r3, #4]
 8003450:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003454:	2b00      	cmp	r3, #0
 8003456:	d003      	beq.n	8003460 <HAL_GPIO_Init+0x304>
 8003458:	693a      	ldr	r2, [r7, #16]
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	4313      	orrs	r3, r2
 800345e:	613b      	str	r3, [r7, #16]
 8003460:	4a12      	ldr	r2, [pc, #72]	; (80034ac <HAL_GPIO_Init+0x350>)
 8003462:	693b      	ldr	r3, [r7, #16]
 8003464:	6013      	str	r3, [r2, #0]
 8003466:	697b      	ldr	r3, [r7, #20]
 8003468:	3301      	adds	r3, #1
 800346a:	617b      	str	r3, [r7, #20]
 800346c:	683b      	ldr	r3, [r7, #0]
 800346e:	681a      	ldr	r2, [r3, #0]
 8003470:	697b      	ldr	r3, [r7, #20]
 8003472:	fa22 f303 	lsr.w	r3, r2, r3
 8003476:	2b00      	cmp	r3, #0
 8003478:	f47f ae78 	bne.w	800316c <HAL_GPIO_Init+0x10>
 800347c:	bf00      	nop
 800347e:	bf00      	nop
 8003480:	371c      	adds	r7, #28
 8003482:	46bd      	mov	sp, r7
 8003484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003488:	4770      	bx	lr
 800348a:	bf00      	nop
 800348c:	40021000 	.word	0x40021000
 8003490:	40010000 	.word	0x40010000
 8003494:	48000400 	.word	0x48000400
 8003498:	48000800 	.word	0x48000800
 800349c:	48000c00 	.word	0x48000c00
 80034a0:	48001000 	.word	0x48001000
 80034a4:	48001400 	.word	0x48001400
 80034a8:	48001800 	.word	0x48001800
 80034ac:	40010400 	.word	0x40010400

080034b0 <HAL_GPIO_ReadPin>:
 80034b0:	b480      	push	{r7}
 80034b2:	b085      	sub	sp, #20
 80034b4:	af00      	add	r7, sp, #0
 80034b6:	6078      	str	r0, [r7, #4]
 80034b8:	460b      	mov	r3, r1
 80034ba:	807b      	strh	r3, [r7, #2]
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	691a      	ldr	r2, [r3, #16]
 80034c0:	887b      	ldrh	r3, [r7, #2]
 80034c2:	4013      	ands	r3, r2
 80034c4:	2b00      	cmp	r3, #0
 80034c6:	d002      	beq.n	80034ce <HAL_GPIO_ReadPin+0x1e>
 80034c8:	2301      	movs	r3, #1
 80034ca:	73fb      	strb	r3, [r7, #15]
 80034cc:	e001      	b.n	80034d2 <HAL_GPIO_ReadPin+0x22>
 80034ce:	2300      	movs	r3, #0
 80034d0:	73fb      	strb	r3, [r7, #15]
 80034d2:	7bfb      	ldrb	r3, [r7, #15]
 80034d4:	4618      	mov	r0, r3
 80034d6:	3714      	adds	r7, #20
 80034d8:	46bd      	mov	sp, r7
 80034da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034de:	4770      	bx	lr

080034e0 <HAL_GPIO_WritePin>:
 80034e0:	b480      	push	{r7}
 80034e2:	b083      	sub	sp, #12
 80034e4:	af00      	add	r7, sp, #0
 80034e6:	6078      	str	r0, [r7, #4]
 80034e8:	460b      	mov	r3, r1
 80034ea:	807b      	strh	r3, [r7, #2]
 80034ec:	4613      	mov	r3, r2
 80034ee:	707b      	strb	r3, [r7, #1]
 80034f0:	787b      	ldrb	r3, [r7, #1]
 80034f2:	2b00      	cmp	r3, #0
 80034f4:	d003      	beq.n	80034fe <HAL_GPIO_WritePin+0x1e>
 80034f6:	887a      	ldrh	r2, [r7, #2]
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	619a      	str	r2, [r3, #24]
 80034fc:	e002      	b.n	8003504 <HAL_GPIO_WritePin+0x24>
 80034fe:	887a      	ldrh	r2, [r7, #2]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	629a      	str	r2, [r3, #40]	; 0x28
 8003504:	bf00      	nop
 8003506:	370c      	adds	r7, #12
 8003508:	46bd      	mov	sp, r7
 800350a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800350e:	4770      	bx	lr

08003510 <HAL_GPIO_EXTI_IRQHandler>:
 8003510:	b580      	push	{r7, lr}
 8003512:	b082      	sub	sp, #8
 8003514:	af00      	add	r7, sp, #0
 8003516:	4603      	mov	r3, r0
 8003518:	80fb      	strh	r3, [r7, #6]
 800351a:	4b08      	ldr	r3, [pc, #32]	; (800353c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800351c:	695a      	ldr	r2, [r3, #20]
 800351e:	88fb      	ldrh	r3, [r7, #6]
 8003520:	4013      	ands	r3, r2
 8003522:	2b00      	cmp	r3, #0
 8003524:	d006      	beq.n	8003534 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8003526:	4a05      	ldr	r2, [pc, #20]	; (800353c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003528:	88fb      	ldrh	r3, [r7, #6]
 800352a:	6153      	str	r3, [r2, #20]
 800352c:	88fb      	ldrh	r3, [r7, #6]
 800352e:	4618      	mov	r0, r3
 8003530:	f000 f806 	bl	8003540 <HAL_GPIO_EXTI_Callback>
 8003534:	bf00      	nop
 8003536:	3708      	adds	r7, #8
 8003538:	46bd      	mov	sp, r7
 800353a:	bd80      	pop	{r7, pc}
 800353c:	40010400 	.word	0x40010400

08003540 <HAL_GPIO_EXTI_Callback>:
 8003540:	b480      	push	{r7}
 8003542:	b083      	sub	sp, #12
 8003544:	af00      	add	r7, sp, #0
 8003546:	4603      	mov	r3, r0
 8003548:	80fb      	strh	r3, [r7, #6]
 800354a:	bf00      	nop
 800354c:	370c      	adds	r7, #12
 800354e:	46bd      	mov	sp, r7
 8003550:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003554:	4770      	bx	lr
	...

08003558 <HAL_PWREx_GetVoltageRange>:
 8003558:	b480      	push	{r7}
 800355a:	af00      	add	r7, sp, #0
 800355c:	4b04      	ldr	r3, [pc, #16]	; (8003570 <HAL_PWREx_GetVoltageRange+0x18>)
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8003564:	4618      	mov	r0, r3
 8003566:	46bd      	mov	sp, r7
 8003568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800356c:	4770      	bx	lr
 800356e:	bf00      	nop
 8003570:	40007000 	.word	0x40007000

08003574 <HAL_PWREx_ControlVoltageScaling>:
 8003574:	b480      	push	{r7}
 8003576:	b085      	sub	sp, #20
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003582:	d130      	bne.n	80035e6 <HAL_PWREx_ControlVoltageScaling+0x72>
 8003584:	4b23      	ldr	r3, [pc, #140]	; (8003614 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800358c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003590:	d038      	beq.n	8003604 <HAL_PWREx_ControlVoltageScaling+0x90>
 8003592:	4b20      	ldr	r3, [pc, #128]	; (8003614 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003594:	681b      	ldr	r3, [r3, #0]
 8003596:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 800359a:	4a1e      	ldr	r2, [pc, #120]	; (8003614 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800359c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80035a0:	6013      	str	r3, [r2, #0]
 80035a2:	4b1d      	ldr	r3, [pc, #116]	; (8003618 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	2232      	movs	r2, #50	; 0x32
 80035a8:	fb02 f303 	mul.w	r3, r2, r3
 80035ac:	4a1b      	ldr	r2, [pc, #108]	; (800361c <HAL_PWREx_ControlVoltageScaling+0xa8>)
 80035ae:	fba2 2303 	umull	r2, r3, r2, r3
 80035b2:	0c9b      	lsrs	r3, r3, #18
 80035b4:	3301      	adds	r3, #1
 80035b6:	60fb      	str	r3, [r7, #12]
 80035b8:	e002      	b.n	80035c0 <HAL_PWREx_ControlVoltageScaling+0x4c>
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	3b01      	subs	r3, #1
 80035be:	60fb      	str	r3, [r7, #12]
 80035c0:	4b14      	ldr	r3, [pc, #80]	; (8003614 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80035c2:	695b      	ldr	r3, [r3, #20]
 80035c4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80035c8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80035cc:	d102      	bne.n	80035d4 <HAL_PWREx_ControlVoltageScaling+0x60>
 80035ce:	68fb      	ldr	r3, [r7, #12]
 80035d0:	2b00      	cmp	r3, #0
 80035d2:	d1f2      	bne.n	80035ba <HAL_PWREx_ControlVoltageScaling+0x46>
 80035d4:	4b0f      	ldr	r3, [pc, #60]	; (8003614 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80035d6:	695b      	ldr	r3, [r3, #20]
 80035d8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80035dc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80035e0:	d110      	bne.n	8003604 <HAL_PWREx_ControlVoltageScaling+0x90>
 80035e2:	2303      	movs	r3, #3
 80035e4:	e00f      	b.n	8003606 <HAL_PWREx_ControlVoltageScaling+0x92>
 80035e6:	4b0b      	ldr	r3, [pc, #44]	; (8003614 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80035ee:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80035f2:	d007      	beq.n	8003604 <HAL_PWREx_ControlVoltageScaling+0x90>
 80035f4:	4b07      	ldr	r3, [pc, #28]	; (8003614 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80035fc:	4a05      	ldr	r2, [pc, #20]	; (8003614 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 80035fe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003602:	6013      	str	r3, [r2, #0]
 8003604:	2300      	movs	r3, #0
 8003606:	4618      	mov	r0, r3
 8003608:	3714      	adds	r7, #20
 800360a:	46bd      	mov	sp, r7
 800360c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003610:	4770      	bx	lr
 8003612:	bf00      	nop
 8003614:	40007000 	.word	0x40007000
 8003618:	20000000 	.word	0x20000000
 800361c:	431bde83 	.word	0x431bde83

08003620 <HAL_RCC_OscConfig>:
 8003620:	b580      	push	{r7, lr}
 8003622:	b088      	sub	sp, #32
 8003624:	af00      	add	r7, sp, #0
 8003626:	6078      	str	r0, [r7, #4]
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	2b00      	cmp	r3, #0
 800362c:	d101      	bne.n	8003632 <HAL_RCC_OscConfig+0x12>
 800362e:	2301      	movs	r3, #1
 8003630:	e3ca      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003632:	4b97      	ldr	r3, [pc, #604]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003634:	689b      	ldr	r3, [r3, #8]
 8003636:	f003 030c 	and.w	r3, r3, #12
 800363a:	61bb      	str	r3, [r7, #24]
 800363c:	4b94      	ldr	r3, [pc, #592]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 800363e:	68db      	ldr	r3, [r3, #12]
 8003640:	f003 0303 	and.w	r3, r3, #3
 8003644:	617b      	str	r3, [r7, #20]
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	f003 0310 	and.w	r3, r3, #16
 800364e:	2b00      	cmp	r3, #0
 8003650:	f000 80e4 	beq.w	800381c <HAL_RCC_OscConfig+0x1fc>
 8003654:	69bb      	ldr	r3, [r7, #24]
 8003656:	2b00      	cmp	r3, #0
 8003658:	d007      	beq.n	800366a <HAL_RCC_OscConfig+0x4a>
 800365a:	69bb      	ldr	r3, [r7, #24]
 800365c:	2b0c      	cmp	r3, #12
 800365e:	f040 808b 	bne.w	8003778 <HAL_RCC_OscConfig+0x158>
 8003662:	697b      	ldr	r3, [r7, #20]
 8003664:	2b01      	cmp	r3, #1
 8003666:	f040 8087 	bne.w	8003778 <HAL_RCC_OscConfig+0x158>
 800366a:	4b89      	ldr	r3, [pc, #548]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	f003 0302 	and.w	r3, r3, #2
 8003672:	2b00      	cmp	r3, #0
 8003674:	d005      	beq.n	8003682 <HAL_RCC_OscConfig+0x62>
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	699b      	ldr	r3, [r3, #24]
 800367a:	2b00      	cmp	r3, #0
 800367c:	d101      	bne.n	8003682 <HAL_RCC_OscConfig+0x62>
 800367e:	2301      	movs	r3, #1
 8003680:	e3a2      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	6a1a      	ldr	r2, [r3, #32]
 8003686:	4b82      	ldr	r3, [pc, #520]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	f003 0308 	and.w	r3, r3, #8
 800368e:	2b00      	cmp	r3, #0
 8003690:	d004      	beq.n	800369c <HAL_RCC_OscConfig+0x7c>
 8003692:	4b7f      	ldr	r3, [pc, #508]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800369a:	e005      	b.n	80036a8 <HAL_RCC_OscConfig+0x88>
 800369c:	4b7c      	ldr	r3, [pc, #496]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 800369e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80036a2:	091b      	lsrs	r3, r3, #4
 80036a4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80036a8:	4293      	cmp	r3, r2
 80036aa:	d223      	bcs.n	80036f4 <HAL_RCC_OscConfig+0xd4>
 80036ac:	687b      	ldr	r3, [r7, #4]
 80036ae:	6a1b      	ldr	r3, [r3, #32]
 80036b0:	4618      	mov	r0, r3
 80036b2:	f000 fd55 	bl	8004160 <RCC_SetFlashLatencyFromMSIRange>
 80036b6:	4603      	mov	r3, r0
 80036b8:	2b00      	cmp	r3, #0
 80036ba:	d001      	beq.n	80036c0 <HAL_RCC_OscConfig+0xa0>
 80036bc:	2301      	movs	r3, #1
 80036be:	e383      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 80036c0:	4b73      	ldr	r3, [pc, #460]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	4a72      	ldr	r2, [pc, #456]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80036c6:	f043 0308 	orr.w	r3, r3, #8
 80036ca:	6013      	str	r3, [r2, #0]
 80036cc:	4b70      	ldr	r3, [pc, #448]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	6a1b      	ldr	r3, [r3, #32]
 80036d8:	496d      	ldr	r1, [pc, #436]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80036da:	4313      	orrs	r3, r2
 80036dc:	600b      	str	r3, [r1, #0]
 80036de:	4b6c      	ldr	r3, [pc, #432]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80036e0:	685b      	ldr	r3, [r3, #4]
 80036e2:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	69db      	ldr	r3, [r3, #28]
 80036ea:	021b      	lsls	r3, r3, #8
 80036ec:	4968      	ldr	r1, [pc, #416]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80036ee:	4313      	orrs	r3, r2
 80036f0:	604b      	str	r3, [r1, #4]
 80036f2:	e025      	b.n	8003740 <HAL_RCC_OscConfig+0x120>
 80036f4:	4b66      	ldr	r3, [pc, #408]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	4a65      	ldr	r2, [pc, #404]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80036fa:	f043 0308 	orr.w	r3, r3, #8
 80036fe:	6013      	str	r3, [r2, #0]
 8003700:	4b63      	ldr	r3, [pc, #396]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	6a1b      	ldr	r3, [r3, #32]
 800370c:	4960      	ldr	r1, [pc, #384]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 800370e:	4313      	orrs	r3, r2
 8003710:	600b      	str	r3, [r1, #0]
 8003712:	4b5f      	ldr	r3, [pc, #380]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003714:	685b      	ldr	r3, [r3, #4]
 8003716:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	69db      	ldr	r3, [r3, #28]
 800371e:	021b      	lsls	r3, r3, #8
 8003720:	495b      	ldr	r1, [pc, #364]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003722:	4313      	orrs	r3, r2
 8003724:	604b      	str	r3, [r1, #4]
 8003726:	69bb      	ldr	r3, [r7, #24]
 8003728:	2b00      	cmp	r3, #0
 800372a:	d109      	bne.n	8003740 <HAL_RCC_OscConfig+0x120>
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	6a1b      	ldr	r3, [r3, #32]
 8003730:	4618      	mov	r0, r3
 8003732:	f000 fd15 	bl	8004160 <RCC_SetFlashLatencyFromMSIRange>
 8003736:	4603      	mov	r3, r0
 8003738:	2b00      	cmp	r3, #0
 800373a:	d001      	beq.n	8003740 <HAL_RCC_OscConfig+0x120>
 800373c:	2301      	movs	r3, #1
 800373e:	e343      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003740:	f000 fc4a 	bl	8003fd8 <HAL_RCC_GetSysClockFreq>
 8003744:	4602      	mov	r2, r0
 8003746:	4b52      	ldr	r3, [pc, #328]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003748:	689b      	ldr	r3, [r3, #8]
 800374a:	091b      	lsrs	r3, r3, #4
 800374c:	f003 030f 	and.w	r3, r3, #15
 8003750:	4950      	ldr	r1, [pc, #320]	; (8003894 <HAL_RCC_OscConfig+0x274>)
 8003752:	5ccb      	ldrb	r3, [r1, r3]
 8003754:	f003 031f 	and.w	r3, r3, #31
 8003758:	fa22 f303 	lsr.w	r3, r2, r3
 800375c:	4a4e      	ldr	r2, [pc, #312]	; (8003898 <HAL_RCC_OscConfig+0x278>)
 800375e:	6013      	str	r3, [r2, #0]
 8003760:	4b4e      	ldr	r3, [pc, #312]	; (800389c <HAL_RCC_OscConfig+0x27c>)
 8003762:	681b      	ldr	r3, [r3, #0]
 8003764:	4618      	mov	r0, r3
 8003766:	f7ff fb67 	bl	8002e38 <HAL_InitTick>
 800376a:	4603      	mov	r3, r0
 800376c:	73fb      	strb	r3, [r7, #15]
 800376e:	7bfb      	ldrb	r3, [r7, #15]
 8003770:	2b00      	cmp	r3, #0
 8003772:	d052      	beq.n	800381a <HAL_RCC_OscConfig+0x1fa>
 8003774:	7bfb      	ldrb	r3, [r7, #15]
 8003776:	e327      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	699b      	ldr	r3, [r3, #24]
 800377c:	2b00      	cmp	r3, #0
 800377e:	d032      	beq.n	80037e6 <HAL_RCC_OscConfig+0x1c6>
 8003780:	4b43      	ldr	r3, [pc, #268]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003782:	681b      	ldr	r3, [r3, #0]
 8003784:	4a42      	ldr	r2, [pc, #264]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003786:	f043 0301 	orr.w	r3, r3, #1
 800378a:	6013      	str	r3, [r2, #0]
 800378c:	f7ff fba4 	bl	8002ed8 <HAL_GetTick>
 8003790:	6138      	str	r0, [r7, #16]
 8003792:	e008      	b.n	80037a6 <HAL_RCC_OscConfig+0x186>
 8003794:	f7ff fba0 	bl	8002ed8 <HAL_GetTick>
 8003798:	4602      	mov	r2, r0
 800379a:	693b      	ldr	r3, [r7, #16]
 800379c:	1ad3      	subs	r3, r2, r3
 800379e:	2b02      	cmp	r3, #2
 80037a0:	d901      	bls.n	80037a6 <HAL_RCC_OscConfig+0x186>
 80037a2:	2303      	movs	r3, #3
 80037a4:	e310      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 80037a6:	4b3a      	ldr	r3, [pc, #232]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80037a8:	681b      	ldr	r3, [r3, #0]
 80037aa:	f003 0302 	and.w	r3, r3, #2
 80037ae:	2b00      	cmp	r3, #0
 80037b0:	d0f0      	beq.n	8003794 <HAL_RCC_OscConfig+0x174>
 80037b2:	4b37      	ldr	r3, [pc, #220]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	4a36      	ldr	r2, [pc, #216]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80037b8:	f043 0308 	orr.w	r3, r3, #8
 80037bc:	6013      	str	r3, [r2, #0]
 80037be:	4b34      	ldr	r3, [pc, #208]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	6a1b      	ldr	r3, [r3, #32]
 80037ca:	4931      	ldr	r1, [pc, #196]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80037cc:	4313      	orrs	r3, r2
 80037ce:	600b      	str	r3, [r1, #0]
 80037d0:	4b2f      	ldr	r3, [pc, #188]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80037d2:	685b      	ldr	r3, [r3, #4]
 80037d4:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	69db      	ldr	r3, [r3, #28]
 80037dc:	021b      	lsls	r3, r3, #8
 80037de:	492c      	ldr	r1, [pc, #176]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80037e0:	4313      	orrs	r3, r2
 80037e2:	604b      	str	r3, [r1, #4]
 80037e4:	e01a      	b.n	800381c <HAL_RCC_OscConfig+0x1fc>
 80037e6:	4b2a      	ldr	r3, [pc, #168]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80037e8:	681b      	ldr	r3, [r3, #0]
 80037ea:	4a29      	ldr	r2, [pc, #164]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 80037ec:	f023 0301 	bic.w	r3, r3, #1
 80037f0:	6013      	str	r3, [r2, #0]
 80037f2:	f7ff fb71 	bl	8002ed8 <HAL_GetTick>
 80037f6:	6138      	str	r0, [r7, #16]
 80037f8:	e008      	b.n	800380c <HAL_RCC_OscConfig+0x1ec>
 80037fa:	f7ff fb6d 	bl	8002ed8 <HAL_GetTick>
 80037fe:	4602      	mov	r2, r0
 8003800:	693b      	ldr	r3, [r7, #16]
 8003802:	1ad3      	subs	r3, r2, r3
 8003804:	2b02      	cmp	r3, #2
 8003806:	d901      	bls.n	800380c <HAL_RCC_OscConfig+0x1ec>
 8003808:	2303      	movs	r3, #3
 800380a:	e2dd      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 800380c:	4b20      	ldr	r3, [pc, #128]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	f003 0302 	and.w	r3, r3, #2
 8003814:	2b00      	cmp	r3, #0
 8003816:	d1f0      	bne.n	80037fa <HAL_RCC_OscConfig+0x1da>
 8003818:	e000      	b.n	800381c <HAL_RCC_OscConfig+0x1fc>
 800381a:	bf00      	nop
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	681b      	ldr	r3, [r3, #0]
 8003820:	f003 0301 	and.w	r3, r3, #1
 8003824:	2b00      	cmp	r3, #0
 8003826:	d074      	beq.n	8003912 <HAL_RCC_OscConfig+0x2f2>
 8003828:	69bb      	ldr	r3, [r7, #24]
 800382a:	2b08      	cmp	r3, #8
 800382c:	d005      	beq.n	800383a <HAL_RCC_OscConfig+0x21a>
 800382e:	69bb      	ldr	r3, [r7, #24]
 8003830:	2b0c      	cmp	r3, #12
 8003832:	d10e      	bne.n	8003852 <HAL_RCC_OscConfig+0x232>
 8003834:	697b      	ldr	r3, [r7, #20]
 8003836:	2b03      	cmp	r3, #3
 8003838:	d10b      	bne.n	8003852 <HAL_RCC_OscConfig+0x232>
 800383a:	4b15      	ldr	r3, [pc, #84]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003842:	2b00      	cmp	r3, #0
 8003844:	d064      	beq.n	8003910 <HAL_RCC_OscConfig+0x2f0>
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	685b      	ldr	r3, [r3, #4]
 800384a:	2b00      	cmp	r3, #0
 800384c:	d160      	bne.n	8003910 <HAL_RCC_OscConfig+0x2f0>
 800384e:	2301      	movs	r3, #1
 8003850:	e2ba      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	685b      	ldr	r3, [r3, #4]
 8003856:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800385a:	d106      	bne.n	800386a <HAL_RCC_OscConfig+0x24a>
 800385c:	4b0c      	ldr	r3, [pc, #48]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	4a0b      	ldr	r2, [pc, #44]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003862:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003866:	6013      	str	r3, [r2, #0]
 8003868:	e026      	b.n	80038b8 <HAL_RCC_OscConfig+0x298>
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	685b      	ldr	r3, [r3, #4]
 800386e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003872:	d115      	bne.n	80038a0 <HAL_RCC_OscConfig+0x280>
 8003874:	4b06      	ldr	r3, [pc, #24]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	4a05      	ldr	r2, [pc, #20]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 800387a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800387e:	6013      	str	r3, [r2, #0]
 8003880:	4b03      	ldr	r3, [pc, #12]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003882:	681b      	ldr	r3, [r3, #0]
 8003884:	4a02      	ldr	r2, [pc, #8]	; (8003890 <HAL_RCC_OscConfig+0x270>)
 8003886:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800388a:	6013      	str	r3, [r2, #0]
 800388c:	e014      	b.n	80038b8 <HAL_RCC_OscConfig+0x298>
 800388e:	bf00      	nop
 8003890:	40021000 	.word	0x40021000
 8003894:	080096b8 	.word	0x080096b8
 8003898:	20000000 	.word	0x20000000
 800389c:	20000004 	.word	0x20000004
 80038a0:	4ba0      	ldr	r3, [pc, #640]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	4a9f      	ldr	r2, [pc, #636]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80038a6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80038aa:	6013      	str	r3, [r2, #0]
 80038ac:	4b9d      	ldr	r3, [pc, #628]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	4a9c      	ldr	r2, [pc, #624]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80038b2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80038b6:	6013      	str	r3, [r2, #0]
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	685b      	ldr	r3, [r3, #4]
 80038bc:	2b00      	cmp	r3, #0
 80038be:	d013      	beq.n	80038e8 <HAL_RCC_OscConfig+0x2c8>
 80038c0:	f7ff fb0a 	bl	8002ed8 <HAL_GetTick>
 80038c4:	6138      	str	r0, [r7, #16]
 80038c6:	e008      	b.n	80038da <HAL_RCC_OscConfig+0x2ba>
 80038c8:	f7ff fb06 	bl	8002ed8 <HAL_GetTick>
 80038cc:	4602      	mov	r2, r0
 80038ce:	693b      	ldr	r3, [r7, #16]
 80038d0:	1ad3      	subs	r3, r2, r3
 80038d2:	2b64      	cmp	r3, #100	; 0x64
 80038d4:	d901      	bls.n	80038da <HAL_RCC_OscConfig+0x2ba>
 80038d6:	2303      	movs	r3, #3
 80038d8:	e276      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 80038da:	4b92      	ldr	r3, [pc, #584]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80038dc:	681b      	ldr	r3, [r3, #0]
 80038de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	d0f0      	beq.n	80038c8 <HAL_RCC_OscConfig+0x2a8>
 80038e6:	e014      	b.n	8003912 <HAL_RCC_OscConfig+0x2f2>
 80038e8:	f7ff faf6 	bl	8002ed8 <HAL_GetTick>
 80038ec:	6138      	str	r0, [r7, #16]
 80038ee:	e008      	b.n	8003902 <HAL_RCC_OscConfig+0x2e2>
 80038f0:	f7ff faf2 	bl	8002ed8 <HAL_GetTick>
 80038f4:	4602      	mov	r2, r0
 80038f6:	693b      	ldr	r3, [r7, #16]
 80038f8:	1ad3      	subs	r3, r2, r3
 80038fa:	2b64      	cmp	r3, #100	; 0x64
 80038fc:	d901      	bls.n	8003902 <HAL_RCC_OscConfig+0x2e2>
 80038fe:	2303      	movs	r3, #3
 8003900:	e262      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003902:	4b88      	ldr	r3, [pc, #544]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003904:	681b      	ldr	r3, [r3, #0]
 8003906:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800390a:	2b00      	cmp	r3, #0
 800390c:	d1f0      	bne.n	80038f0 <HAL_RCC_OscConfig+0x2d0>
 800390e:	e000      	b.n	8003912 <HAL_RCC_OscConfig+0x2f2>
 8003910:	bf00      	nop
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	f003 0302 	and.w	r3, r3, #2
 800391a:	2b00      	cmp	r3, #0
 800391c:	d060      	beq.n	80039e0 <HAL_RCC_OscConfig+0x3c0>
 800391e:	69bb      	ldr	r3, [r7, #24]
 8003920:	2b04      	cmp	r3, #4
 8003922:	d005      	beq.n	8003930 <HAL_RCC_OscConfig+0x310>
 8003924:	69bb      	ldr	r3, [r7, #24]
 8003926:	2b0c      	cmp	r3, #12
 8003928:	d119      	bne.n	800395e <HAL_RCC_OscConfig+0x33e>
 800392a:	697b      	ldr	r3, [r7, #20]
 800392c:	2b02      	cmp	r3, #2
 800392e:	d116      	bne.n	800395e <HAL_RCC_OscConfig+0x33e>
 8003930:	4b7c      	ldr	r3, [pc, #496]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003938:	2b00      	cmp	r3, #0
 800393a:	d005      	beq.n	8003948 <HAL_RCC_OscConfig+0x328>
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	68db      	ldr	r3, [r3, #12]
 8003940:	2b00      	cmp	r3, #0
 8003942:	d101      	bne.n	8003948 <HAL_RCC_OscConfig+0x328>
 8003944:	2301      	movs	r3, #1
 8003946:	e23f      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003948:	4b76      	ldr	r3, [pc, #472]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 800394a:	685b      	ldr	r3, [r3, #4]
 800394c:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	691b      	ldr	r3, [r3, #16]
 8003954:	061b      	lsls	r3, r3, #24
 8003956:	4973      	ldr	r1, [pc, #460]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003958:	4313      	orrs	r3, r2
 800395a:	604b      	str	r3, [r1, #4]
 800395c:	e040      	b.n	80039e0 <HAL_RCC_OscConfig+0x3c0>
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	68db      	ldr	r3, [r3, #12]
 8003962:	2b00      	cmp	r3, #0
 8003964:	d023      	beq.n	80039ae <HAL_RCC_OscConfig+0x38e>
 8003966:	4b6f      	ldr	r3, [pc, #444]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	4a6e      	ldr	r2, [pc, #440]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 800396c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003970:	6013      	str	r3, [r2, #0]
 8003972:	f7ff fab1 	bl	8002ed8 <HAL_GetTick>
 8003976:	6138      	str	r0, [r7, #16]
 8003978:	e008      	b.n	800398c <HAL_RCC_OscConfig+0x36c>
 800397a:	f7ff faad 	bl	8002ed8 <HAL_GetTick>
 800397e:	4602      	mov	r2, r0
 8003980:	693b      	ldr	r3, [r7, #16]
 8003982:	1ad3      	subs	r3, r2, r3
 8003984:	2b02      	cmp	r3, #2
 8003986:	d901      	bls.n	800398c <HAL_RCC_OscConfig+0x36c>
 8003988:	2303      	movs	r3, #3
 800398a:	e21d      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 800398c:	4b65      	ldr	r3, [pc, #404]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003994:	2b00      	cmp	r3, #0
 8003996:	d0f0      	beq.n	800397a <HAL_RCC_OscConfig+0x35a>
 8003998:	4b62      	ldr	r3, [pc, #392]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 800399a:	685b      	ldr	r3, [r3, #4]
 800399c:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	691b      	ldr	r3, [r3, #16]
 80039a4:	061b      	lsls	r3, r3, #24
 80039a6:	495f      	ldr	r1, [pc, #380]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80039a8:	4313      	orrs	r3, r2
 80039aa:	604b      	str	r3, [r1, #4]
 80039ac:	e018      	b.n	80039e0 <HAL_RCC_OscConfig+0x3c0>
 80039ae:	4b5d      	ldr	r3, [pc, #372]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	4a5c      	ldr	r2, [pc, #368]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80039b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80039b8:	6013      	str	r3, [r2, #0]
 80039ba:	f7ff fa8d 	bl	8002ed8 <HAL_GetTick>
 80039be:	6138      	str	r0, [r7, #16]
 80039c0:	e008      	b.n	80039d4 <HAL_RCC_OscConfig+0x3b4>
 80039c2:	f7ff fa89 	bl	8002ed8 <HAL_GetTick>
 80039c6:	4602      	mov	r2, r0
 80039c8:	693b      	ldr	r3, [r7, #16]
 80039ca:	1ad3      	subs	r3, r2, r3
 80039cc:	2b02      	cmp	r3, #2
 80039ce:	d901      	bls.n	80039d4 <HAL_RCC_OscConfig+0x3b4>
 80039d0:	2303      	movs	r3, #3
 80039d2:	e1f9      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 80039d4:	4b53      	ldr	r3, [pc, #332]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d1f0      	bne.n	80039c2 <HAL_RCC_OscConfig+0x3a2>
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	f003 0308 	and.w	r3, r3, #8
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	d03c      	beq.n	8003a66 <HAL_RCC_OscConfig+0x446>
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	695b      	ldr	r3, [r3, #20]
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	d01c      	beq.n	8003a2e <HAL_RCC_OscConfig+0x40e>
 80039f4:	4b4b      	ldr	r3, [pc, #300]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80039f6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80039fa:	4a4a      	ldr	r2, [pc, #296]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 80039fc:	f043 0301 	orr.w	r3, r3, #1
 8003a00:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8003a04:	f7ff fa68 	bl	8002ed8 <HAL_GetTick>
 8003a08:	6138      	str	r0, [r7, #16]
 8003a0a:	e008      	b.n	8003a1e <HAL_RCC_OscConfig+0x3fe>
 8003a0c:	f7ff fa64 	bl	8002ed8 <HAL_GetTick>
 8003a10:	4602      	mov	r2, r0
 8003a12:	693b      	ldr	r3, [r7, #16]
 8003a14:	1ad3      	subs	r3, r2, r3
 8003a16:	2b02      	cmp	r3, #2
 8003a18:	d901      	bls.n	8003a1e <HAL_RCC_OscConfig+0x3fe>
 8003a1a:	2303      	movs	r3, #3
 8003a1c:	e1d4      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003a1e:	4b41      	ldr	r3, [pc, #260]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003a20:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003a24:	f003 0302 	and.w	r3, r3, #2
 8003a28:	2b00      	cmp	r3, #0
 8003a2a:	d0ef      	beq.n	8003a0c <HAL_RCC_OscConfig+0x3ec>
 8003a2c:	e01b      	b.n	8003a66 <HAL_RCC_OscConfig+0x446>
 8003a2e:	4b3d      	ldr	r3, [pc, #244]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003a30:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003a34:	4a3b      	ldr	r2, [pc, #236]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003a36:	f023 0301 	bic.w	r3, r3, #1
 8003a3a:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8003a3e:	f7ff fa4b 	bl	8002ed8 <HAL_GetTick>
 8003a42:	6138      	str	r0, [r7, #16]
 8003a44:	e008      	b.n	8003a58 <HAL_RCC_OscConfig+0x438>
 8003a46:	f7ff fa47 	bl	8002ed8 <HAL_GetTick>
 8003a4a:	4602      	mov	r2, r0
 8003a4c:	693b      	ldr	r3, [r7, #16]
 8003a4e:	1ad3      	subs	r3, r2, r3
 8003a50:	2b02      	cmp	r3, #2
 8003a52:	d901      	bls.n	8003a58 <HAL_RCC_OscConfig+0x438>
 8003a54:	2303      	movs	r3, #3
 8003a56:	e1b7      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003a58:	4b32      	ldr	r3, [pc, #200]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003a5a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003a5e:	f003 0302 	and.w	r3, r3, #2
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d1ef      	bne.n	8003a46 <HAL_RCC_OscConfig+0x426>
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	f003 0304 	and.w	r3, r3, #4
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	f000 80a6 	beq.w	8003bc0 <HAL_RCC_OscConfig+0x5a0>
 8003a74:	2300      	movs	r3, #0
 8003a76:	77fb      	strb	r3, [r7, #31]
 8003a78:	4b2a      	ldr	r3, [pc, #168]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003a7a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003a7c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	d10d      	bne.n	8003aa0 <HAL_RCC_OscConfig+0x480>
 8003a84:	4b27      	ldr	r3, [pc, #156]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003a86:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003a88:	4a26      	ldr	r2, [pc, #152]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003a8a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003a8e:	6593      	str	r3, [r2, #88]	; 0x58
 8003a90:	4b24      	ldr	r3, [pc, #144]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003a92:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003a94:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003a98:	60bb      	str	r3, [r7, #8]
 8003a9a:	68bb      	ldr	r3, [r7, #8]
 8003a9c:	2301      	movs	r3, #1
 8003a9e:	77fb      	strb	r3, [r7, #31]
 8003aa0:	4b21      	ldr	r3, [pc, #132]	; (8003b28 <HAL_RCC_OscConfig+0x508>)
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003aa8:	2b00      	cmp	r3, #0
 8003aaa:	d118      	bne.n	8003ade <HAL_RCC_OscConfig+0x4be>
 8003aac:	4b1e      	ldr	r3, [pc, #120]	; (8003b28 <HAL_RCC_OscConfig+0x508>)
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	4a1d      	ldr	r2, [pc, #116]	; (8003b28 <HAL_RCC_OscConfig+0x508>)
 8003ab2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003ab6:	6013      	str	r3, [r2, #0]
 8003ab8:	f7ff fa0e 	bl	8002ed8 <HAL_GetTick>
 8003abc:	6138      	str	r0, [r7, #16]
 8003abe:	e008      	b.n	8003ad2 <HAL_RCC_OscConfig+0x4b2>
 8003ac0:	f7ff fa0a 	bl	8002ed8 <HAL_GetTick>
 8003ac4:	4602      	mov	r2, r0
 8003ac6:	693b      	ldr	r3, [r7, #16]
 8003ac8:	1ad3      	subs	r3, r2, r3
 8003aca:	2b02      	cmp	r3, #2
 8003acc:	d901      	bls.n	8003ad2 <HAL_RCC_OscConfig+0x4b2>
 8003ace:	2303      	movs	r3, #3
 8003ad0:	e17a      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003ad2:	4b15      	ldr	r3, [pc, #84]	; (8003b28 <HAL_RCC_OscConfig+0x508>)
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003ada:	2b00      	cmp	r3, #0
 8003adc:	d0f0      	beq.n	8003ac0 <HAL_RCC_OscConfig+0x4a0>
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	689b      	ldr	r3, [r3, #8]
 8003ae2:	2b01      	cmp	r3, #1
 8003ae4:	d108      	bne.n	8003af8 <HAL_RCC_OscConfig+0x4d8>
 8003ae6:	4b0f      	ldr	r3, [pc, #60]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003ae8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003aec:	4a0d      	ldr	r2, [pc, #52]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003aee:	f043 0301 	orr.w	r3, r3, #1
 8003af2:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003af6:	e029      	b.n	8003b4c <HAL_RCC_OscConfig+0x52c>
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	689b      	ldr	r3, [r3, #8]
 8003afc:	2b05      	cmp	r3, #5
 8003afe:	d115      	bne.n	8003b2c <HAL_RCC_OscConfig+0x50c>
 8003b00:	4b08      	ldr	r3, [pc, #32]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003b02:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003b06:	4a07      	ldr	r2, [pc, #28]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003b08:	f043 0304 	orr.w	r3, r3, #4
 8003b0c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003b10:	4b04      	ldr	r3, [pc, #16]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003b12:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003b16:	4a03      	ldr	r2, [pc, #12]	; (8003b24 <HAL_RCC_OscConfig+0x504>)
 8003b18:	f043 0301 	orr.w	r3, r3, #1
 8003b1c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003b20:	e014      	b.n	8003b4c <HAL_RCC_OscConfig+0x52c>
 8003b22:	bf00      	nop
 8003b24:	40021000 	.word	0x40021000
 8003b28:	40007000 	.word	0x40007000
 8003b2c:	4b9c      	ldr	r3, [pc, #624]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003b2e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003b32:	4a9b      	ldr	r2, [pc, #620]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003b34:	f023 0301 	bic.w	r3, r3, #1
 8003b38:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003b3c:	4b98      	ldr	r3, [pc, #608]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003b3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003b42:	4a97      	ldr	r2, [pc, #604]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003b44:	f023 0304 	bic.w	r3, r3, #4
 8003b48:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	689b      	ldr	r3, [r3, #8]
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d016      	beq.n	8003b82 <HAL_RCC_OscConfig+0x562>
 8003b54:	f7ff f9c0 	bl	8002ed8 <HAL_GetTick>
 8003b58:	6138      	str	r0, [r7, #16]
 8003b5a:	e00a      	b.n	8003b72 <HAL_RCC_OscConfig+0x552>
 8003b5c:	f7ff f9bc 	bl	8002ed8 <HAL_GetTick>
 8003b60:	4602      	mov	r2, r0
 8003b62:	693b      	ldr	r3, [r7, #16]
 8003b64:	1ad3      	subs	r3, r2, r3
 8003b66:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b6a:	4293      	cmp	r3, r2
 8003b6c:	d901      	bls.n	8003b72 <HAL_RCC_OscConfig+0x552>
 8003b6e:	2303      	movs	r3, #3
 8003b70:	e12a      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003b72:	4b8b      	ldr	r3, [pc, #556]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003b74:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003b78:	f003 0302 	and.w	r3, r3, #2
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d0ed      	beq.n	8003b5c <HAL_RCC_OscConfig+0x53c>
 8003b80:	e015      	b.n	8003bae <HAL_RCC_OscConfig+0x58e>
 8003b82:	f7ff f9a9 	bl	8002ed8 <HAL_GetTick>
 8003b86:	6138      	str	r0, [r7, #16]
 8003b88:	e00a      	b.n	8003ba0 <HAL_RCC_OscConfig+0x580>
 8003b8a:	f7ff f9a5 	bl	8002ed8 <HAL_GetTick>
 8003b8e:	4602      	mov	r2, r0
 8003b90:	693b      	ldr	r3, [r7, #16]
 8003b92:	1ad3      	subs	r3, r2, r3
 8003b94:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b98:	4293      	cmp	r3, r2
 8003b9a:	d901      	bls.n	8003ba0 <HAL_RCC_OscConfig+0x580>
 8003b9c:	2303      	movs	r3, #3
 8003b9e:	e113      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003ba0:	4b7f      	ldr	r3, [pc, #508]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003ba2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003ba6:	f003 0302 	and.w	r3, r3, #2
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d1ed      	bne.n	8003b8a <HAL_RCC_OscConfig+0x56a>
 8003bae:	7ffb      	ldrb	r3, [r7, #31]
 8003bb0:	2b01      	cmp	r3, #1
 8003bb2:	d105      	bne.n	8003bc0 <HAL_RCC_OscConfig+0x5a0>
 8003bb4:	4b7a      	ldr	r3, [pc, #488]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003bb6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003bb8:	4a79      	ldr	r2, [pc, #484]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003bba:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003bbe:	6593      	str	r3, [r2, #88]	; 0x58
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	f000 80fe 	beq.w	8003dc6 <HAL_RCC_OscConfig+0x7a6>
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003bce:	2b02      	cmp	r3, #2
 8003bd0:	f040 80d0 	bne.w	8003d74 <HAL_RCC_OscConfig+0x754>
 8003bd4:	4b72      	ldr	r3, [pc, #456]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003bd6:	68db      	ldr	r3, [r3, #12]
 8003bd8:	617b      	str	r3, [r7, #20]
 8003bda:	697b      	ldr	r3, [r7, #20]
 8003bdc:	f003 0203 	and.w	r2, r3, #3
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003be4:	429a      	cmp	r2, r3
 8003be6:	d130      	bne.n	8003c4a <HAL_RCC_OscConfig+0x62a>
 8003be8:	697b      	ldr	r3, [r7, #20]
 8003bea:	f003 0270 	and.w	r2, r3, #112	; 0x70
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003bf2:	3b01      	subs	r3, #1
 8003bf4:	011b      	lsls	r3, r3, #4
 8003bf6:	429a      	cmp	r2, r3
 8003bf8:	d127      	bne.n	8003c4a <HAL_RCC_OscConfig+0x62a>
 8003bfa:	697b      	ldr	r3, [r7, #20]
 8003bfc:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c04:	021b      	lsls	r3, r3, #8
 8003c06:	429a      	cmp	r2, r3
 8003c08:	d11f      	bne.n	8003c4a <HAL_RCC_OscConfig+0x62a>
 8003c0a:	697b      	ldr	r3, [r7, #20]
 8003c0c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003c10:	687a      	ldr	r2, [r7, #4]
 8003c12:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8003c14:	2a07      	cmp	r2, #7
 8003c16:	bf14      	ite	ne
 8003c18:	2201      	movne	r2, #1
 8003c1a:	2200      	moveq	r2, #0
 8003c1c:	b2d2      	uxtb	r2, r2
 8003c1e:	4293      	cmp	r3, r2
 8003c20:	d113      	bne.n	8003c4a <HAL_RCC_OscConfig+0x62a>
 8003c22:	697b      	ldr	r3, [r7, #20]
 8003c24:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003c2c:	085b      	lsrs	r3, r3, #1
 8003c2e:	3b01      	subs	r3, #1
 8003c30:	055b      	lsls	r3, r3, #21
 8003c32:	429a      	cmp	r2, r3
 8003c34:	d109      	bne.n	8003c4a <HAL_RCC_OscConfig+0x62a>
 8003c36:	697b      	ldr	r3, [r7, #20]
 8003c38:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c40:	085b      	lsrs	r3, r3, #1
 8003c42:	3b01      	subs	r3, #1
 8003c44:	065b      	lsls	r3, r3, #25
 8003c46:	429a      	cmp	r2, r3
 8003c48:	d06e      	beq.n	8003d28 <HAL_RCC_OscConfig+0x708>
 8003c4a:	69bb      	ldr	r3, [r7, #24]
 8003c4c:	2b0c      	cmp	r3, #12
 8003c4e:	d069      	beq.n	8003d24 <HAL_RCC_OscConfig+0x704>
 8003c50:	4b53      	ldr	r3, [pc, #332]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8003c58:	2b00      	cmp	r3, #0
 8003c5a:	d105      	bne.n	8003c68 <HAL_RCC_OscConfig+0x648>
 8003c5c:	4b50      	ldr	r3, [pc, #320]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	d001      	beq.n	8003c6c <HAL_RCC_OscConfig+0x64c>
 8003c68:	2301      	movs	r3, #1
 8003c6a:	e0ad      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003c6c:	4b4c      	ldr	r3, [pc, #304]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	4a4b      	ldr	r2, [pc, #300]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003c72:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8003c76:	6013      	str	r3, [r2, #0]
 8003c78:	f7ff f92e 	bl	8002ed8 <HAL_GetTick>
 8003c7c:	6138      	str	r0, [r7, #16]
 8003c7e:	e008      	b.n	8003c92 <HAL_RCC_OscConfig+0x672>
 8003c80:	f7ff f92a 	bl	8002ed8 <HAL_GetTick>
 8003c84:	4602      	mov	r2, r0
 8003c86:	693b      	ldr	r3, [r7, #16]
 8003c88:	1ad3      	subs	r3, r2, r3
 8003c8a:	2b02      	cmp	r3, #2
 8003c8c:	d901      	bls.n	8003c92 <HAL_RCC_OscConfig+0x672>
 8003c8e:	2303      	movs	r3, #3
 8003c90:	e09a      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003c92:	4b43      	ldr	r3, [pc, #268]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	d1f0      	bne.n	8003c80 <HAL_RCC_OscConfig+0x660>
 8003c9e:	4b40      	ldr	r3, [pc, #256]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003ca0:	68da      	ldr	r2, [r3, #12]
 8003ca2:	4b40      	ldr	r3, [pc, #256]	; (8003da4 <HAL_RCC_OscConfig+0x784>)
 8003ca4:	4013      	ands	r3, r2
 8003ca6:	687a      	ldr	r2, [r7, #4]
 8003ca8:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8003caa:	687a      	ldr	r2, [r7, #4]
 8003cac:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8003cae:	3a01      	subs	r2, #1
 8003cb0:	0112      	lsls	r2, r2, #4
 8003cb2:	4311      	orrs	r1, r2
 8003cb4:	687a      	ldr	r2, [r7, #4]
 8003cb6:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8003cb8:	0212      	lsls	r2, r2, #8
 8003cba:	4311      	orrs	r1, r2
 8003cbc:	687a      	ldr	r2, [r7, #4]
 8003cbe:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8003cc0:	0852      	lsrs	r2, r2, #1
 8003cc2:	3a01      	subs	r2, #1
 8003cc4:	0552      	lsls	r2, r2, #21
 8003cc6:	4311      	orrs	r1, r2
 8003cc8:	687a      	ldr	r2, [r7, #4]
 8003cca:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8003ccc:	0852      	lsrs	r2, r2, #1
 8003cce:	3a01      	subs	r2, #1
 8003cd0:	0652      	lsls	r2, r2, #25
 8003cd2:	4311      	orrs	r1, r2
 8003cd4:	687a      	ldr	r2, [r7, #4]
 8003cd6:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8003cd8:	0912      	lsrs	r2, r2, #4
 8003cda:	0452      	lsls	r2, r2, #17
 8003cdc:	430a      	orrs	r2, r1
 8003cde:	4930      	ldr	r1, [pc, #192]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003ce0:	4313      	orrs	r3, r2
 8003ce2:	60cb      	str	r3, [r1, #12]
 8003ce4:	4b2e      	ldr	r3, [pc, #184]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	4a2d      	ldr	r2, [pc, #180]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003cea:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003cee:	6013      	str	r3, [r2, #0]
 8003cf0:	4b2b      	ldr	r3, [pc, #172]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003cf2:	68db      	ldr	r3, [r3, #12]
 8003cf4:	4a2a      	ldr	r2, [pc, #168]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003cf6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003cfa:	60d3      	str	r3, [r2, #12]
 8003cfc:	f7ff f8ec 	bl	8002ed8 <HAL_GetTick>
 8003d00:	6138      	str	r0, [r7, #16]
 8003d02:	e008      	b.n	8003d16 <HAL_RCC_OscConfig+0x6f6>
 8003d04:	f7ff f8e8 	bl	8002ed8 <HAL_GetTick>
 8003d08:	4602      	mov	r2, r0
 8003d0a:	693b      	ldr	r3, [r7, #16]
 8003d0c:	1ad3      	subs	r3, r2, r3
 8003d0e:	2b02      	cmp	r3, #2
 8003d10:	d901      	bls.n	8003d16 <HAL_RCC_OscConfig+0x6f6>
 8003d12:	2303      	movs	r3, #3
 8003d14:	e058      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003d16:	4b22      	ldr	r3, [pc, #136]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003d1e:	2b00      	cmp	r3, #0
 8003d20:	d0f0      	beq.n	8003d04 <HAL_RCC_OscConfig+0x6e4>
 8003d22:	e050      	b.n	8003dc6 <HAL_RCC_OscConfig+0x7a6>
 8003d24:	2301      	movs	r3, #1
 8003d26:	e04f      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003d28:	4b1d      	ldr	r3, [pc, #116]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003d2a:	681b      	ldr	r3, [r3, #0]
 8003d2c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d148      	bne.n	8003dc6 <HAL_RCC_OscConfig+0x7a6>
 8003d34:	4b1a      	ldr	r3, [pc, #104]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	4a19      	ldr	r2, [pc, #100]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003d3a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003d3e:	6013      	str	r3, [r2, #0]
 8003d40:	4b17      	ldr	r3, [pc, #92]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003d42:	68db      	ldr	r3, [r3, #12]
 8003d44:	4a16      	ldr	r2, [pc, #88]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003d46:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003d4a:	60d3      	str	r3, [r2, #12]
 8003d4c:	f7ff f8c4 	bl	8002ed8 <HAL_GetTick>
 8003d50:	6138      	str	r0, [r7, #16]
 8003d52:	e008      	b.n	8003d66 <HAL_RCC_OscConfig+0x746>
 8003d54:	f7ff f8c0 	bl	8002ed8 <HAL_GetTick>
 8003d58:	4602      	mov	r2, r0
 8003d5a:	693b      	ldr	r3, [r7, #16]
 8003d5c:	1ad3      	subs	r3, r2, r3
 8003d5e:	2b02      	cmp	r3, #2
 8003d60:	d901      	bls.n	8003d66 <HAL_RCC_OscConfig+0x746>
 8003d62:	2303      	movs	r3, #3
 8003d64:	e030      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003d66:	4b0e      	ldr	r3, [pc, #56]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003d6e:	2b00      	cmp	r3, #0
 8003d70:	d0f0      	beq.n	8003d54 <HAL_RCC_OscConfig+0x734>
 8003d72:	e028      	b.n	8003dc6 <HAL_RCC_OscConfig+0x7a6>
 8003d74:	69bb      	ldr	r3, [r7, #24]
 8003d76:	2b0c      	cmp	r3, #12
 8003d78:	d023      	beq.n	8003dc2 <HAL_RCC_OscConfig+0x7a2>
 8003d7a:	4b09      	ldr	r3, [pc, #36]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	4a08      	ldr	r2, [pc, #32]	; (8003da0 <HAL_RCC_OscConfig+0x780>)
 8003d80:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8003d84:	6013      	str	r3, [r2, #0]
 8003d86:	f7ff f8a7 	bl	8002ed8 <HAL_GetTick>
 8003d8a:	6138      	str	r0, [r7, #16]
 8003d8c:	e00c      	b.n	8003da8 <HAL_RCC_OscConfig+0x788>
 8003d8e:	f7ff f8a3 	bl	8002ed8 <HAL_GetTick>
 8003d92:	4602      	mov	r2, r0
 8003d94:	693b      	ldr	r3, [r7, #16]
 8003d96:	1ad3      	subs	r3, r2, r3
 8003d98:	2b02      	cmp	r3, #2
 8003d9a:	d905      	bls.n	8003da8 <HAL_RCC_OscConfig+0x788>
 8003d9c:	2303      	movs	r3, #3
 8003d9e:	e013      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003da0:	40021000 	.word	0x40021000
 8003da4:	f99d808c 	.word	0xf99d808c
 8003da8:	4b09      	ldr	r3, [pc, #36]	; (8003dd0 <HAL_RCC_OscConfig+0x7b0>)
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	d1ec      	bne.n	8003d8e <HAL_RCC_OscConfig+0x76e>
 8003db4:	4b06      	ldr	r3, [pc, #24]	; (8003dd0 <HAL_RCC_OscConfig+0x7b0>)
 8003db6:	68da      	ldr	r2, [r3, #12]
 8003db8:	4905      	ldr	r1, [pc, #20]	; (8003dd0 <HAL_RCC_OscConfig+0x7b0>)
 8003dba:	4b06      	ldr	r3, [pc, #24]	; (8003dd4 <HAL_RCC_OscConfig+0x7b4>)
 8003dbc:	4013      	ands	r3, r2
 8003dbe:	60cb      	str	r3, [r1, #12]
 8003dc0:	e001      	b.n	8003dc6 <HAL_RCC_OscConfig+0x7a6>
 8003dc2:	2301      	movs	r3, #1
 8003dc4:	e000      	b.n	8003dc8 <HAL_RCC_OscConfig+0x7a8>
 8003dc6:	2300      	movs	r3, #0
 8003dc8:	4618      	mov	r0, r3
 8003dca:	3720      	adds	r7, #32
 8003dcc:	46bd      	mov	sp, r7
 8003dce:	bd80      	pop	{r7, pc}
 8003dd0:	40021000 	.word	0x40021000
 8003dd4:	feeefffc 	.word	0xfeeefffc

08003dd8 <HAL_RCC_ClockConfig>:
 8003dd8:	b580      	push	{r7, lr}
 8003dda:	b084      	sub	sp, #16
 8003ddc:	af00      	add	r7, sp, #0
 8003dde:	6078      	str	r0, [r7, #4]
 8003de0:	6039      	str	r1, [r7, #0]
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	d101      	bne.n	8003dec <HAL_RCC_ClockConfig+0x14>
 8003de8:	2301      	movs	r3, #1
 8003dea:	e0e7      	b.n	8003fbc <HAL_RCC_ClockConfig+0x1e4>
 8003dec:	4b75      	ldr	r3, [pc, #468]	; (8003fc4 <HAL_RCC_ClockConfig+0x1ec>)
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	f003 0307 	and.w	r3, r3, #7
 8003df4:	683a      	ldr	r2, [r7, #0]
 8003df6:	429a      	cmp	r2, r3
 8003df8:	d910      	bls.n	8003e1c <HAL_RCC_ClockConfig+0x44>
 8003dfa:	4b72      	ldr	r3, [pc, #456]	; (8003fc4 <HAL_RCC_ClockConfig+0x1ec>)
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	f023 0207 	bic.w	r2, r3, #7
 8003e02:	4970      	ldr	r1, [pc, #448]	; (8003fc4 <HAL_RCC_ClockConfig+0x1ec>)
 8003e04:	683b      	ldr	r3, [r7, #0]
 8003e06:	4313      	orrs	r3, r2
 8003e08:	600b      	str	r3, [r1, #0]
 8003e0a:	4b6e      	ldr	r3, [pc, #440]	; (8003fc4 <HAL_RCC_ClockConfig+0x1ec>)
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	f003 0307 	and.w	r3, r3, #7
 8003e12:	683a      	ldr	r2, [r7, #0]
 8003e14:	429a      	cmp	r2, r3
 8003e16:	d001      	beq.n	8003e1c <HAL_RCC_ClockConfig+0x44>
 8003e18:	2301      	movs	r3, #1
 8003e1a:	e0cf      	b.n	8003fbc <HAL_RCC_ClockConfig+0x1e4>
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	f003 0302 	and.w	r3, r3, #2
 8003e24:	2b00      	cmp	r3, #0
 8003e26:	d010      	beq.n	8003e4a <HAL_RCC_ClockConfig+0x72>
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	689a      	ldr	r2, [r3, #8]
 8003e2c:	4b66      	ldr	r3, [pc, #408]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003e2e:	689b      	ldr	r3, [r3, #8]
 8003e30:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003e34:	429a      	cmp	r2, r3
 8003e36:	d908      	bls.n	8003e4a <HAL_RCC_ClockConfig+0x72>
 8003e38:	4b63      	ldr	r3, [pc, #396]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003e3a:	689b      	ldr	r3, [r3, #8]
 8003e3c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	689b      	ldr	r3, [r3, #8]
 8003e44:	4960      	ldr	r1, [pc, #384]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003e46:	4313      	orrs	r3, r2
 8003e48:	608b      	str	r3, [r1, #8]
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	f003 0301 	and.w	r3, r3, #1
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	d04c      	beq.n	8003ef0 <HAL_RCC_ClockConfig+0x118>
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	685b      	ldr	r3, [r3, #4]
 8003e5a:	2b03      	cmp	r3, #3
 8003e5c:	d107      	bne.n	8003e6e <HAL_RCC_ClockConfig+0x96>
 8003e5e:	4b5a      	ldr	r3, [pc, #360]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003e66:	2b00      	cmp	r3, #0
 8003e68:	d121      	bne.n	8003eae <HAL_RCC_ClockConfig+0xd6>
 8003e6a:	2301      	movs	r3, #1
 8003e6c:	e0a6      	b.n	8003fbc <HAL_RCC_ClockConfig+0x1e4>
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	685b      	ldr	r3, [r3, #4]
 8003e72:	2b02      	cmp	r3, #2
 8003e74:	d107      	bne.n	8003e86 <HAL_RCC_ClockConfig+0xae>
 8003e76:	4b54      	ldr	r3, [pc, #336]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d115      	bne.n	8003eae <HAL_RCC_ClockConfig+0xd6>
 8003e82:	2301      	movs	r3, #1
 8003e84:	e09a      	b.n	8003fbc <HAL_RCC_ClockConfig+0x1e4>
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	685b      	ldr	r3, [r3, #4]
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d107      	bne.n	8003e9e <HAL_RCC_ClockConfig+0xc6>
 8003e8e:	4b4e      	ldr	r3, [pc, #312]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	f003 0302 	and.w	r3, r3, #2
 8003e96:	2b00      	cmp	r3, #0
 8003e98:	d109      	bne.n	8003eae <HAL_RCC_ClockConfig+0xd6>
 8003e9a:	2301      	movs	r3, #1
 8003e9c:	e08e      	b.n	8003fbc <HAL_RCC_ClockConfig+0x1e4>
 8003e9e:	4b4a      	ldr	r3, [pc, #296]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	d101      	bne.n	8003eae <HAL_RCC_ClockConfig+0xd6>
 8003eaa:	2301      	movs	r3, #1
 8003eac:	e086      	b.n	8003fbc <HAL_RCC_ClockConfig+0x1e4>
 8003eae:	4b46      	ldr	r3, [pc, #280]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003eb0:	689b      	ldr	r3, [r3, #8]
 8003eb2:	f023 0203 	bic.w	r2, r3, #3
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	685b      	ldr	r3, [r3, #4]
 8003eba:	4943      	ldr	r1, [pc, #268]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003ebc:	4313      	orrs	r3, r2
 8003ebe:	608b      	str	r3, [r1, #8]
 8003ec0:	f7ff f80a 	bl	8002ed8 <HAL_GetTick>
 8003ec4:	60f8      	str	r0, [r7, #12]
 8003ec6:	e00a      	b.n	8003ede <HAL_RCC_ClockConfig+0x106>
 8003ec8:	f7ff f806 	bl	8002ed8 <HAL_GetTick>
 8003ecc:	4602      	mov	r2, r0
 8003ece:	68fb      	ldr	r3, [r7, #12]
 8003ed0:	1ad3      	subs	r3, r2, r3
 8003ed2:	f241 3288 	movw	r2, #5000	; 0x1388
 8003ed6:	4293      	cmp	r3, r2
 8003ed8:	d901      	bls.n	8003ede <HAL_RCC_ClockConfig+0x106>
 8003eda:	2303      	movs	r3, #3
 8003edc:	e06e      	b.n	8003fbc <HAL_RCC_ClockConfig+0x1e4>
 8003ede:	4b3a      	ldr	r3, [pc, #232]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003ee0:	689b      	ldr	r3, [r3, #8]
 8003ee2:	f003 020c 	and.w	r2, r3, #12
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	685b      	ldr	r3, [r3, #4]
 8003eea:	009b      	lsls	r3, r3, #2
 8003eec:	429a      	cmp	r2, r3
 8003eee:	d1eb      	bne.n	8003ec8 <HAL_RCC_ClockConfig+0xf0>
 8003ef0:	687b      	ldr	r3, [r7, #4]
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	f003 0302 	and.w	r3, r3, #2
 8003ef8:	2b00      	cmp	r3, #0
 8003efa:	d010      	beq.n	8003f1e <HAL_RCC_ClockConfig+0x146>
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	689a      	ldr	r2, [r3, #8]
 8003f00:	4b31      	ldr	r3, [pc, #196]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003f02:	689b      	ldr	r3, [r3, #8]
 8003f04:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003f08:	429a      	cmp	r2, r3
 8003f0a:	d208      	bcs.n	8003f1e <HAL_RCC_ClockConfig+0x146>
 8003f0c:	4b2e      	ldr	r3, [pc, #184]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003f0e:	689b      	ldr	r3, [r3, #8]
 8003f10:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	689b      	ldr	r3, [r3, #8]
 8003f18:	492b      	ldr	r1, [pc, #172]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003f1a:	4313      	orrs	r3, r2
 8003f1c:	608b      	str	r3, [r1, #8]
 8003f1e:	4b29      	ldr	r3, [pc, #164]	; (8003fc4 <HAL_RCC_ClockConfig+0x1ec>)
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	f003 0307 	and.w	r3, r3, #7
 8003f26:	683a      	ldr	r2, [r7, #0]
 8003f28:	429a      	cmp	r2, r3
 8003f2a:	d210      	bcs.n	8003f4e <HAL_RCC_ClockConfig+0x176>
 8003f2c:	4b25      	ldr	r3, [pc, #148]	; (8003fc4 <HAL_RCC_ClockConfig+0x1ec>)
 8003f2e:	681b      	ldr	r3, [r3, #0]
 8003f30:	f023 0207 	bic.w	r2, r3, #7
 8003f34:	4923      	ldr	r1, [pc, #140]	; (8003fc4 <HAL_RCC_ClockConfig+0x1ec>)
 8003f36:	683b      	ldr	r3, [r7, #0]
 8003f38:	4313      	orrs	r3, r2
 8003f3a:	600b      	str	r3, [r1, #0]
 8003f3c:	4b21      	ldr	r3, [pc, #132]	; (8003fc4 <HAL_RCC_ClockConfig+0x1ec>)
 8003f3e:	681b      	ldr	r3, [r3, #0]
 8003f40:	f003 0307 	and.w	r3, r3, #7
 8003f44:	683a      	ldr	r2, [r7, #0]
 8003f46:	429a      	cmp	r2, r3
 8003f48:	d001      	beq.n	8003f4e <HAL_RCC_ClockConfig+0x176>
 8003f4a:	2301      	movs	r3, #1
 8003f4c:	e036      	b.n	8003fbc <HAL_RCC_ClockConfig+0x1e4>
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	681b      	ldr	r3, [r3, #0]
 8003f52:	f003 0304 	and.w	r3, r3, #4
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	d008      	beq.n	8003f6c <HAL_RCC_ClockConfig+0x194>
 8003f5a:	4b1b      	ldr	r3, [pc, #108]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003f5c:	689b      	ldr	r3, [r3, #8]
 8003f5e:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	68db      	ldr	r3, [r3, #12]
 8003f66:	4918      	ldr	r1, [pc, #96]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003f68:	4313      	orrs	r3, r2
 8003f6a:	608b      	str	r3, [r1, #8]
 8003f6c:	687b      	ldr	r3, [r7, #4]
 8003f6e:	681b      	ldr	r3, [r3, #0]
 8003f70:	f003 0308 	and.w	r3, r3, #8
 8003f74:	2b00      	cmp	r3, #0
 8003f76:	d009      	beq.n	8003f8c <HAL_RCC_ClockConfig+0x1b4>
 8003f78:	4b13      	ldr	r3, [pc, #76]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003f7a:	689b      	ldr	r3, [r3, #8]
 8003f7c:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	691b      	ldr	r3, [r3, #16]
 8003f84:	00db      	lsls	r3, r3, #3
 8003f86:	4910      	ldr	r1, [pc, #64]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003f88:	4313      	orrs	r3, r2
 8003f8a:	608b      	str	r3, [r1, #8]
 8003f8c:	f000 f824 	bl	8003fd8 <HAL_RCC_GetSysClockFreq>
 8003f90:	4602      	mov	r2, r0
 8003f92:	4b0d      	ldr	r3, [pc, #52]	; (8003fc8 <HAL_RCC_ClockConfig+0x1f0>)
 8003f94:	689b      	ldr	r3, [r3, #8]
 8003f96:	091b      	lsrs	r3, r3, #4
 8003f98:	f003 030f 	and.w	r3, r3, #15
 8003f9c:	490b      	ldr	r1, [pc, #44]	; (8003fcc <HAL_RCC_ClockConfig+0x1f4>)
 8003f9e:	5ccb      	ldrb	r3, [r1, r3]
 8003fa0:	f003 031f 	and.w	r3, r3, #31
 8003fa4:	fa22 f303 	lsr.w	r3, r2, r3
 8003fa8:	4a09      	ldr	r2, [pc, #36]	; (8003fd0 <HAL_RCC_ClockConfig+0x1f8>)
 8003faa:	6013      	str	r3, [r2, #0]
 8003fac:	4b09      	ldr	r3, [pc, #36]	; (8003fd4 <HAL_RCC_ClockConfig+0x1fc>)
 8003fae:	681b      	ldr	r3, [r3, #0]
 8003fb0:	4618      	mov	r0, r3
 8003fb2:	f7fe ff41 	bl	8002e38 <HAL_InitTick>
 8003fb6:	4603      	mov	r3, r0
 8003fb8:	72fb      	strb	r3, [r7, #11]
 8003fba:	7afb      	ldrb	r3, [r7, #11]
 8003fbc:	4618      	mov	r0, r3
 8003fbe:	3710      	adds	r7, #16
 8003fc0:	46bd      	mov	sp, r7
 8003fc2:	bd80      	pop	{r7, pc}
 8003fc4:	40022000 	.word	0x40022000
 8003fc8:	40021000 	.word	0x40021000
 8003fcc:	080096b8 	.word	0x080096b8
 8003fd0:	20000000 	.word	0x20000000
 8003fd4:	20000004 	.word	0x20000004

08003fd8 <HAL_RCC_GetSysClockFreq>:
 8003fd8:	b480      	push	{r7}
 8003fda:	b089      	sub	sp, #36	; 0x24
 8003fdc:	af00      	add	r7, sp, #0
 8003fde:	2300      	movs	r3, #0
 8003fe0:	61fb      	str	r3, [r7, #28]
 8003fe2:	2300      	movs	r3, #0
 8003fe4:	61bb      	str	r3, [r7, #24]
 8003fe6:	4b3e      	ldr	r3, [pc, #248]	; (80040e0 <HAL_RCC_GetSysClockFreq+0x108>)
 8003fe8:	689b      	ldr	r3, [r3, #8]
 8003fea:	f003 030c 	and.w	r3, r3, #12
 8003fee:	613b      	str	r3, [r7, #16]
 8003ff0:	4b3b      	ldr	r3, [pc, #236]	; (80040e0 <HAL_RCC_GetSysClockFreq+0x108>)
 8003ff2:	68db      	ldr	r3, [r3, #12]
 8003ff4:	f003 0303 	and.w	r3, r3, #3
 8003ff8:	60fb      	str	r3, [r7, #12]
 8003ffa:	693b      	ldr	r3, [r7, #16]
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	d005      	beq.n	800400c <HAL_RCC_GetSysClockFreq+0x34>
 8004000:	693b      	ldr	r3, [r7, #16]
 8004002:	2b0c      	cmp	r3, #12
 8004004:	d121      	bne.n	800404a <HAL_RCC_GetSysClockFreq+0x72>
 8004006:	68fb      	ldr	r3, [r7, #12]
 8004008:	2b01      	cmp	r3, #1
 800400a:	d11e      	bne.n	800404a <HAL_RCC_GetSysClockFreq+0x72>
 800400c:	4b34      	ldr	r3, [pc, #208]	; (80040e0 <HAL_RCC_GetSysClockFreq+0x108>)
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	f003 0308 	and.w	r3, r3, #8
 8004014:	2b00      	cmp	r3, #0
 8004016:	d107      	bne.n	8004028 <HAL_RCC_GetSysClockFreq+0x50>
 8004018:	4b31      	ldr	r3, [pc, #196]	; (80040e0 <HAL_RCC_GetSysClockFreq+0x108>)
 800401a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800401e:	0a1b      	lsrs	r3, r3, #8
 8004020:	f003 030f 	and.w	r3, r3, #15
 8004024:	61fb      	str	r3, [r7, #28]
 8004026:	e005      	b.n	8004034 <HAL_RCC_GetSysClockFreq+0x5c>
 8004028:	4b2d      	ldr	r3, [pc, #180]	; (80040e0 <HAL_RCC_GetSysClockFreq+0x108>)
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	091b      	lsrs	r3, r3, #4
 800402e:	f003 030f 	and.w	r3, r3, #15
 8004032:	61fb      	str	r3, [r7, #28]
 8004034:	4a2b      	ldr	r2, [pc, #172]	; (80040e4 <HAL_RCC_GetSysClockFreq+0x10c>)
 8004036:	69fb      	ldr	r3, [r7, #28]
 8004038:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800403c:	61fb      	str	r3, [r7, #28]
 800403e:	693b      	ldr	r3, [r7, #16]
 8004040:	2b00      	cmp	r3, #0
 8004042:	d10d      	bne.n	8004060 <HAL_RCC_GetSysClockFreq+0x88>
 8004044:	69fb      	ldr	r3, [r7, #28]
 8004046:	61bb      	str	r3, [r7, #24]
 8004048:	e00a      	b.n	8004060 <HAL_RCC_GetSysClockFreq+0x88>
 800404a:	693b      	ldr	r3, [r7, #16]
 800404c:	2b04      	cmp	r3, #4
 800404e:	d102      	bne.n	8004056 <HAL_RCC_GetSysClockFreq+0x7e>
 8004050:	4b25      	ldr	r3, [pc, #148]	; (80040e8 <HAL_RCC_GetSysClockFreq+0x110>)
 8004052:	61bb      	str	r3, [r7, #24]
 8004054:	e004      	b.n	8004060 <HAL_RCC_GetSysClockFreq+0x88>
 8004056:	693b      	ldr	r3, [r7, #16]
 8004058:	2b08      	cmp	r3, #8
 800405a:	d101      	bne.n	8004060 <HAL_RCC_GetSysClockFreq+0x88>
 800405c:	4b23      	ldr	r3, [pc, #140]	; (80040ec <HAL_RCC_GetSysClockFreq+0x114>)
 800405e:	61bb      	str	r3, [r7, #24]
 8004060:	693b      	ldr	r3, [r7, #16]
 8004062:	2b0c      	cmp	r3, #12
 8004064:	d134      	bne.n	80040d0 <HAL_RCC_GetSysClockFreq+0xf8>
 8004066:	4b1e      	ldr	r3, [pc, #120]	; (80040e0 <HAL_RCC_GetSysClockFreq+0x108>)
 8004068:	68db      	ldr	r3, [r3, #12]
 800406a:	f003 0303 	and.w	r3, r3, #3
 800406e:	60bb      	str	r3, [r7, #8]
 8004070:	68bb      	ldr	r3, [r7, #8]
 8004072:	2b02      	cmp	r3, #2
 8004074:	d003      	beq.n	800407e <HAL_RCC_GetSysClockFreq+0xa6>
 8004076:	68bb      	ldr	r3, [r7, #8]
 8004078:	2b03      	cmp	r3, #3
 800407a:	d003      	beq.n	8004084 <HAL_RCC_GetSysClockFreq+0xac>
 800407c:	e005      	b.n	800408a <HAL_RCC_GetSysClockFreq+0xb2>
 800407e:	4b1a      	ldr	r3, [pc, #104]	; (80040e8 <HAL_RCC_GetSysClockFreq+0x110>)
 8004080:	617b      	str	r3, [r7, #20]
 8004082:	e005      	b.n	8004090 <HAL_RCC_GetSysClockFreq+0xb8>
 8004084:	4b19      	ldr	r3, [pc, #100]	; (80040ec <HAL_RCC_GetSysClockFreq+0x114>)
 8004086:	617b      	str	r3, [r7, #20]
 8004088:	e002      	b.n	8004090 <HAL_RCC_GetSysClockFreq+0xb8>
 800408a:	69fb      	ldr	r3, [r7, #28]
 800408c:	617b      	str	r3, [r7, #20]
 800408e:	bf00      	nop
 8004090:	4b13      	ldr	r3, [pc, #76]	; (80040e0 <HAL_RCC_GetSysClockFreq+0x108>)
 8004092:	68db      	ldr	r3, [r3, #12]
 8004094:	091b      	lsrs	r3, r3, #4
 8004096:	f003 0307 	and.w	r3, r3, #7
 800409a:	3301      	adds	r3, #1
 800409c:	607b      	str	r3, [r7, #4]
 800409e:	4b10      	ldr	r3, [pc, #64]	; (80040e0 <HAL_RCC_GetSysClockFreq+0x108>)
 80040a0:	68db      	ldr	r3, [r3, #12]
 80040a2:	0a1b      	lsrs	r3, r3, #8
 80040a4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80040a8:	697a      	ldr	r2, [r7, #20]
 80040aa:	fb03 f202 	mul.w	r2, r3, r2
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	fbb2 f3f3 	udiv	r3, r2, r3
 80040b4:	617b      	str	r3, [r7, #20]
 80040b6:	4b0a      	ldr	r3, [pc, #40]	; (80040e0 <HAL_RCC_GetSysClockFreq+0x108>)
 80040b8:	68db      	ldr	r3, [r3, #12]
 80040ba:	0e5b      	lsrs	r3, r3, #25
 80040bc:	f003 0303 	and.w	r3, r3, #3
 80040c0:	3301      	adds	r3, #1
 80040c2:	005b      	lsls	r3, r3, #1
 80040c4:	603b      	str	r3, [r7, #0]
 80040c6:	697a      	ldr	r2, [r7, #20]
 80040c8:	683b      	ldr	r3, [r7, #0]
 80040ca:	fbb2 f3f3 	udiv	r3, r2, r3
 80040ce:	61bb      	str	r3, [r7, #24]
 80040d0:	69bb      	ldr	r3, [r7, #24]
 80040d2:	4618      	mov	r0, r3
 80040d4:	3724      	adds	r7, #36	; 0x24
 80040d6:	46bd      	mov	sp, r7
 80040d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040dc:	4770      	bx	lr
 80040de:	bf00      	nop
 80040e0:	40021000 	.word	0x40021000
 80040e4:	080096d0 	.word	0x080096d0
 80040e8:	00f42400 	.word	0x00f42400
 80040ec:	007a1200 	.word	0x007a1200

080040f0 <HAL_RCC_GetHCLKFreq>:
 80040f0:	b480      	push	{r7}
 80040f2:	af00      	add	r7, sp, #0
 80040f4:	4b03      	ldr	r3, [pc, #12]	; (8004104 <HAL_RCC_GetHCLKFreq+0x14>)
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	4618      	mov	r0, r3
 80040fa:	46bd      	mov	sp, r7
 80040fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004100:	4770      	bx	lr
 8004102:	bf00      	nop
 8004104:	20000000 	.word	0x20000000

08004108 <HAL_RCC_GetPCLK1Freq>:
 8004108:	b580      	push	{r7, lr}
 800410a:	af00      	add	r7, sp, #0
 800410c:	f7ff fff0 	bl	80040f0 <HAL_RCC_GetHCLKFreq>
 8004110:	4602      	mov	r2, r0
 8004112:	4b06      	ldr	r3, [pc, #24]	; (800412c <HAL_RCC_GetPCLK1Freq+0x24>)
 8004114:	689b      	ldr	r3, [r3, #8]
 8004116:	0a1b      	lsrs	r3, r3, #8
 8004118:	f003 0307 	and.w	r3, r3, #7
 800411c:	4904      	ldr	r1, [pc, #16]	; (8004130 <HAL_RCC_GetPCLK1Freq+0x28>)
 800411e:	5ccb      	ldrb	r3, [r1, r3]
 8004120:	f003 031f 	and.w	r3, r3, #31
 8004124:	fa22 f303 	lsr.w	r3, r2, r3
 8004128:	4618      	mov	r0, r3
 800412a:	bd80      	pop	{r7, pc}
 800412c:	40021000 	.word	0x40021000
 8004130:	080096c8 	.word	0x080096c8

08004134 <HAL_RCC_GetPCLK2Freq>:
 8004134:	b580      	push	{r7, lr}
 8004136:	af00      	add	r7, sp, #0
 8004138:	f7ff ffda 	bl	80040f0 <HAL_RCC_GetHCLKFreq>
 800413c:	4602      	mov	r2, r0
 800413e:	4b06      	ldr	r3, [pc, #24]	; (8004158 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004140:	689b      	ldr	r3, [r3, #8]
 8004142:	0adb      	lsrs	r3, r3, #11
 8004144:	f003 0307 	and.w	r3, r3, #7
 8004148:	4904      	ldr	r1, [pc, #16]	; (800415c <HAL_RCC_GetPCLK2Freq+0x28>)
 800414a:	5ccb      	ldrb	r3, [r1, r3]
 800414c:	f003 031f 	and.w	r3, r3, #31
 8004150:	fa22 f303 	lsr.w	r3, r2, r3
 8004154:	4618      	mov	r0, r3
 8004156:	bd80      	pop	{r7, pc}
 8004158:	40021000 	.word	0x40021000
 800415c:	080096c8 	.word	0x080096c8

08004160 <RCC_SetFlashLatencyFromMSIRange>:
 8004160:	b580      	push	{r7, lr}
 8004162:	b086      	sub	sp, #24
 8004164:	af00      	add	r7, sp, #0
 8004166:	6078      	str	r0, [r7, #4]
 8004168:	2300      	movs	r3, #0
 800416a:	613b      	str	r3, [r7, #16]
 800416c:	4b2a      	ldr	r3, [pc, #168]	; (8004218 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800416e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004170:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004174:	2b00      	cmp	r3, #0
 8004176:	d003      	beq.n	8004180 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8004178:	f7ff f9ee 	bl	8003558 <HAL_PWREx_GetVoltageRange>
 800417c:	6178      	str	r0, [r7, #20]
 800417e:	e014      	b.n	80041aa <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8004180:	4b25      	ldr	r3, [pc, #148]	; (8004218 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8004182:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004184:	4a24      	ldr	r2, [pc, #144]	; (8004218 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8004186:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800418a:	6593      	str	r3, [r2, #88]	; 0x58
 800418c:	4b22      	ldr	r3, [pc, #136]	; (8004218 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800418e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004190:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004194:	60fb      	str	r3, [r7, #12]
 8004196:	68fb      	ldr	r3, [r7, #12]
 8004198:	f7ff f9de 	bl	8003558 <HAL_PWREx_GetVoltageRange>
 800419c:	6178      	str	r0, [r7, #20]
 800419e:	4b1e      	ldr	r3, [pc, #120]	; (8004218 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80041a0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80041a2:	4a1d      	ldr	r2, [pc, #116]	; (8004218 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80041a4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80041a8:	6593      	str	r3, [r2, #88]	; 0x58
 80041aa:	697b      	ldr	r3, [r7, #20]
 80041ac:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80041b0:	d10b      	bne.n	80041ca <RCC_SetFlashLatencyFromMSIRange+0x6a>
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	2b80      	cmp	r3, #128	; 0x80
 80041b6:	d919      	bls.n	80041ec <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	2ba0      	cmp	r3, #160	; 0xa0
 80041bc:	d902      	bls.n	80041c4 <RCC_SetFlashLatencyFromMSIRange+0x64>
 80041be:	2302      	movs	r3, #2
 80041c0:	613b      	str	r3, [r7, #16]
 80041c2:	e013      	b.n	80041ec <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80041c4:	2301      	movs	r3, #1
 80041c6:	613b      	str	r3, [r7, #16]
 80041c8:	e010      	b.n	80041ec <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	2b80      	cmp	r3, #128	; 0x80
 80041ce:	d902      	bls.n	80041d6 <RCC_SetFlashLatencyFromMSIRange+0x76>
 80041d0:	2303      	movs	r3, #3
 80041d2:	613b      	str	r3, [r7, #16]
 80041d4:	e00a      	b.n	80041ec <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	2b80      	cmp	r3, #128	; 0x80
 80041da:	d102      	bne.n	80041e2 <RCC_SetFlashLatencyFromMSIRange+0x82>
 80041dc:	2302      	movs	r3, #2
 80041de:	613b      	str	r3, [r7, #16]
 80041e0:	e004      	b.n	80041ec <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	2b70      	cmp	r3, #112	; 0x70
 80041e6:	d101      	bne.n	80041ec <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80041e8:	2301      	movs	r3, #1
 80041ea:	613b      	str	r3, [r7, #16]
 80041ec:	4b0b      	ldr	r3, [pc, #44]	; (800421c <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	f023 0207 	bic.w	r2, r3, #7
 80041f4:	4909      	ldr	r1, [pc, #36]	; (800421c <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80041f6:	693b      	ldr	r3, [r7, #16]
 80041f8:	4313      	orrs	r3, r2
 80041fa:	600b      	str	r3, [r1, #0]
 80041fc:	4b07      	ldr	r3, [pc, #28]	; (800421c <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	f003 0307 	and.w	r3, r3, #7
 8004204:	693a      	ldr	r2, [r7, #16]
 8004206:	429a      	cmp	r2, r3
 8004208:	d001      	beq.n	800420e <RCC_SetFlashLatencyFromMSIRange+0xae>
 800420a:	2301      	movs	r3, #1
 800420c:	e000      	b.n	8004210 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 800420e:	2300      	movs	r3, #0
 8004210:	4618      	mov	r0, r3
 8004212:	3718      	adds	r7, #24
 8004214:	46bd      	mov	sp, r7
 8004216:	bd80      	pop	{r7, pc}
 8004218:	40021000 	.word	0x40021000
 800421c:	40022000 	.word	0x40022000

08004220 <HAL_RCCEx_PeriphCLKConfig>:
 8004220:	b580      	push	{r7, lr}
 8004222:	b086      	sub	sp, #24
 8004224:	af00      	add	r7, sp, #0
 8004226:	6078      	str	r0, [r7, #4]
 8004228:	2300      	movs	r3, #0
 800422a:	74fb      	strb	r3, [r7, #19]
 800422c:	2300      	movs	r3, #0
 800422e:	74bb      	strb	r3, [r7, #18]
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004238:	2b00      	cmp	r3, #0
 800423a:	d041      	beq.n	80042c0 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004240:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8004244:	d02a      	beq.n	800429c <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8004246:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 800424a:	d824      	bhi.n	8004296 <HAL_RCCEx_PeriphCLKConfig+0x76>
 800424c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8004250:	d008      	beq.n	8004264 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8004252:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8004256:	d81e      	bhi.n	8004296 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8004258:	2b00      	cmp	r3, #0
 800425a:	d00a      	beq.n	8004272 <HAL_RCCEx_PeriphCLKConfig+0x52>
 800425c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004260:	d010      	beq.n	8004284 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8004262:	e018      	b.n	8004296 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8004264:	4b86      	ldr	r3, [pc, #536]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004266:	68db      	ldr	r3, [r3, #12]
 8004268:	4a85      	ldr	r2, [pc, #532]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800426a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800426e:	60d3      	str	r3, [r2, #12]
 8004270:	e015      	b.n	800429e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	3304      	adds	r3, #4
 8004276:	2100      	movs	r1, #0
 8004278:	4618      	mov	r0, r3
 800427a:	f000 fabb 	bl	80047f4 <RCCEx_PLLSAI1_Config>
 800427e:	4603      	mov	r3, r0
 8004280:	74fb      	strb	r3, [r7, #19]
 8004282:	e00c      	b.n	800429e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	3320      	adds	r3, #32
 8004288:	2100      	movs	r1, #0
 800428a:	4618      	mov	r0, r3
 800428c:	f000 fba6 	bl	80049dc <RCCEx_PLLSAI2_Config>
 8004290:	4603      	mov	r3, r0
 8004292:	74fb      	strb	r3, [r7, #19]
 8004294:	e003      	b.n	800429e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004296:	2301      	movs	r3, #1
 8004298:	74fb      	strb	r3, [r7, #19]
 800429a:	e000      	b.n	800429e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800429c:	bf00      	nop
 800429e:	7cfb      	ldrb	r3, [r7, #19]
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	d10b      	bne.n	80042bc <HAL_RCCEx_PeriphCLKConfig+0x9c>
 80042a4:	4b76      	ldr	r3, [pc, #472]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80042a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80042aa:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80042b2:	4973      	ldr	r1, [pc, #460]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80042b4:	4313      	orrs	r3, r2
 80042b6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80042ba:	e001      	b.n	80042c0 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 80042bc:	7cfb      	ldrb	r3, [r7, #19]
 80042be:	74bb      	strb	r3, [r7, #18]
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80042c8:	2b00      	cmp	r3, #0
 80042ca:	d041      	beq.n	8004350 <HAL_RCCEx_PeriphCLKConfig+0x130>
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80042d0:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80042d4:	d02a      	beq.n	800432c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80042d6:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80042da:	d824      	bhi.n	8004326 <HAL_RCCEx_PeriphCLKConfig+0x106>
 80042dc:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80042e0:	d008      	beq.n	80042f4 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80042e2:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80042e6:	d81e      	bhi.n	8004326 <HAL_RCCEx_PeriphCLKConfig+0x106>
 80042e8:	2b00      	cmp	r3, #0
 80042ea:	d00a      	beq.n	8004302 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 80042ec:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80042f0:	d010      	beq.n	8004314 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80042f2:	e018      	b.n	8004326 <HAL_RCCEx_PeriphCLKConfig+0x106>
 80042f4:	4b62      	ldr	r3, [pc, #392]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80042f6:	68db      	ldr	r3, [r3, #12]
 80042f8:	4a61      	ldr	r2, [pc, #388]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80042fa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80042fe:	60d3      	str	r3, [r2, #12]
 8004300:	e015      	b.n	800432e <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	3304      	adds	r3, #4
 8004306:	2100      	movs	r1, #0
 8004308:	4618      	mov	r0, r3
 800430a:	f000 fa73 	bl	80047f4 <RCCEx_PLLSAI1_Config>
 800430e:	4603      	mov	r3, r0
 8004310:	74fb      	strb	r3, [r7, #19]
 8004312:	e00c      	b.n	800432e <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	3320      	adds	r3, #32
 8004318:	2100      	movs	r1, #0
 800431a:	4618      	mov	r0, r3
 800431c:	f000 fb5e 	bl	80049dc <RCCEx_PLLSAI2_Config>
 8004320:	4603      	mov	r3, r0
 8004322:	74fb      	strb	r3, [r7, #19]
 8004324:	e003      	b.n	800432e <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004326:	2301      	movs	r3, #1
 8004328:	74fb      	strb	r3, [r7, #19]
 800432a:	e000      	b.n	800432e <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800432c:	bf00      	nop
 800432e:	7cfb      	ldrb	r3, [r7, #19]
 8004330:	2b00      	cmp	r3, #0
 8004332:	d10b      	bne.n	800434c <HAL_RCCEx_PeriphCLKConfig+0x12c>
 8004334:	4b52      	ldr	r3, [pc, #328]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004336:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800433a:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8004342:	494f      	ldr	r1, [pc, #316]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004344:	4313      	orrs	r3, r2
 8004346:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800434a:	e001      	b.n	8004350 <HAL_RCCEx_PeriphCLKConfig+0x130>
 800434c:	7cfb      	ldrb	r3, [r7, #19]
 800434e:	74bb      	strb	r3, [r7, #18]
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004358:	2b00      	cmp	r3, #0
 800435a:	f000 80a0 	beq.w	800449e <HAL_RCCEx_PeriphCLKConfig+0x27e>
 800435e:	2300      	movs	r3, #0
 8004360:	747b      	strb	r3, [r7, #17]
 8004362:	4b47      	ldr	r3, [pc, #284]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004364:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004366:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800436a:	2b00      	cmp	r3, #0
 800436c:	d101      	bne.n	8004372 <HAL_RCCEx_PeriphCLKConfig+0x152>
 800436e:	2301      	movs	r3, #1
 8004370:	e000      	b.n	8004374 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8004372:	2300      	movs	r3, #0
 8004374:	2b00      	cmp	r3, #0
 8004376:	d00d      	beq.n	8004394 <HAL_RCCEx_PeriphCLKConfig+0x174>
 8004378:	4b41      	ldr	r3, [pc, #260]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800437a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800437c:	4a40      	ldr	r2, [pc, #256]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800437e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004382:	6593      	str	r3, [r2, #88]	; 0x58
 8004384:	4b3e      	ldr	r3, [pc, #248]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004386:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004388:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800438c:	60bb      	str	r3, [r7, #8]
 800438e:	68bb      	ldr	r3, [r7, #8]
 8004390:	2301      	movs	r3, #1
 8004392:	747b      	strb	r3, [r7, #17]
 8004394:	4b3b      	ldr	r3, [pc, #236]	; (8004484 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	4a3a      	ldr	r2, [pc, #232]	; (8004484 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 800439a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800439e:	6013      	str	r3, [r2, #0]
 80043a0:	f7fe fd9a 	bl	8002ed8 <HAL_GetTick>
 80043a4:	60f8      	str	r0, [r7, #12]
 80043a6:	e009      	b.n	80043bc <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80043a8:	f7fe fd96 	bl	8002ed8 <HAL_GetTick>
 80043ac:	4602      	mov	r2, r0
 80043ae:	68fb      	ldr	r3, [r7, #12]
 80043b0:	1ad3      	subs	r3, r2, r3
 80043b2:	2b02      	cmp	r3, #2
 80043b4:	d902      	bls.n	80043bc <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80043b6:	2303      	movs	r3, #3
 80043b8:	74fb      	strb	r3, [r7, #19]
 80043ba:	e005      	b.n	80043c8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 80043bc:	4b31      	ldr	r3, [pc, #196]	; (8004484 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80043c4:	2b00      	cmp	r3, #0
 80043c6:	d0ef      	beq.n	80043a8 <HAL_RCCEx_PeriphCLKConfig+0x188>
 80043c8:	7cfb      	ldrb	r3, [r7, #19]
 80043ca:	2b00      	cmp	r3, #0
 80043cc:	d15c      	bne.n	8004488 <HAL_RCCEx_PeriphCLKConfig+0x268>
 80043ce:	4b2c      	ldr	r3, [pc, #176]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80043d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80043d4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80043d8:	617b      	str	r3, [r7, #20]
 80043da:	697b      	ldr	r3, [r7, #20]
 80043dc:	2b00      	cmp	r3, #0
 80043de:	d01f      	beq.n	8004420 <HAL_RCCEx_PeriphCLKConfig+0x200>
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80043e6:	697a      	ldr	r2, [r7, #20]
 80043e8:	429a      	cmp	r2, r3
 80043ea:	d019      	beq.n	8004420 <HAL_RCCEx_PeriphCLKConfig+0x200>
 80043ec:	4b24      	ldr	r3, [pc, #144]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80043ee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80043f2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80043f6:	617b      	str	r3, [r7, #20]
 80043f8:	4b21      	ldr	r3, [pc, #132]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80043fa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80043fe:	4a20      	ldr	r2, [pc, #128]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004400:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004404:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004408:	4b1d      	ldr	r3, [pc, #116]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800440a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800440e:	4a1c      	ldr	r2, [pc, #112]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004410:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004414:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004418:	4a19      	ldr	r2, [pc, #100]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800441a:	697b      	ldr	r3, [r7, #20]
 800441c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004420:	697b      	ldr	r3, [r7, #20]
 8004422:	f003 0301 	and.w	r3, r3, #1
 8004426:	2b00      	cmp	r3, #0
 8004428:	d016      	beq.n	8004458 <HAL_RCCEx_PeriphCLKConfig+0x238>
 800442a:	f7fe fd55 	bl	8002ed8 <HAL_GetTick>
 800442e:	60f8      	str	r0, [r7, #12]
 8004430:	e00b      	b.n	800444a <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8004432:	f7fe fd51 	bl	8002ed8 <HAL_GetTick>
 8004436:	4602      	mov	r2, r0
 8004438:	68fb      	ldr	r3, [r7, #12]
 800443a:	1ad3      	subs	r3, r2, r3
 800443c:	f241 3288 	movw	r2, #5000	; 0x1388
 8004440:	4293      	cmp	r3, r2
 8004442:	d902      	bls.n	800444a <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8004444:	2303      	movs	r3, #3
 8004446:	74fb      	strb	r3, [r7, #19]
 8004448:	e006      	b.n	8004458 <HAL_RCCEx_PeriphCLKConfig+0x238>
 800444a:	4b0d      	ldr	r3, [pc, #52]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800444c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004450:	f003 0302 	and.w	r3, r3, #2
 8004454:	2b00      	cmp	r3, #0
 8004456:	d0ec      	beq.n	8004432 <HAL_RCCEx_PeriphCLKConfig+0x212>
 8004458:	7cfb      	ldrb	r3, [r7, #19]
 800445a:	2b00      	cmp	r3, #0
 800445c:	d10c      	bne.n	8004478 <HAL_RCCEx_PeriphCLKConfig+0x258>
 800445e:	4b08      	ldr	r3, [pc, #32]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004460:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004464:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800446e:	4904      	ldr	r1, [pc, #16]	; (8004480 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004470:	4313      	orrs	r3, r2
 8004472:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004476:	e009      	b.n	800448c <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8004478:	7cfb      	ldrb	r3, [r7, #19]
 800447a:	74bb      	strb	r3, [r7, #18]
 800447c:	e006      	b.n	800448c <HAL_RCCEx_PeriphCLKConfig+0x26c>
 800447e:	bf00      	nop
 8004480:	40021000 	.word	0x40021000
 8004484:	40007000 	.word	0x40007000
 8004488:	7cfb      	ldrb	r3, [r7, #19]
 800448a:	74bb      	strb	r3, [r7, #18]
 800448c:	7c7b      	ldrb	r3, [r7, #17]
 800448e:	2b01      	cmp	r3, #1
 8004490:	d105      	bne.n	800449e <HAL_RCCEx_PeriphCLKConfig+0x27e>
 8004492:	4b9e      	ldr	r3, [pc, #632]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004494:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004496:	4a9d      	ldr	r2, [pc, #628]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004498:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800449c:	6593      	str	r3, [r2, #88]	; 0x58
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	681b      	ldr	r3, [r3, #0]
 80044a2:	f003 0301 	and.w	r3, r3, #1
 80044a6:	2b00      	cmp	r3, #0
 80044a8:	d00a      	beq.n	80044c0 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
 80044aa:	4b98      	ldr	r3, [pc, #608]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80044ac:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80044b0:	f023 0203 	bic.w	r2, r3, #3
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80044b8:	4994      	ldr	r1, [pc, #592]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80044ba:	4313      	orrs	r3, r2
 80044bc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80044c0:	687b      	ldr	r3, [r7, #4]
 80044c2:	681b      	ldr	r3, [r3, #0]
 80044c4:	f003 0302 	and.w	r3, r3, #2
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	d00a      	beq.n	80044e2 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 80044cc:	4b8f      	ldr	r3, [pc, #572]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80044ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80044d2:	f023 020c 	bic.w	r2, r3, #12
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80044da:	498c      	ldr	r1, [pc, #560]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80044dc:	4313      	orrs	r3, r2
 80044de:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	f003 0304 	and.w	r3, r3, #4
 80044ea:	2b00      	cmp	r3, #0
 80044ec:	d00a      	beq.n	8004504 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 80044ee:	4b87      	ldr	r3, [pc, #540]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80044f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80044f4:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044fc:	4983      	ldr	r1, [pc, #524]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80044fe:	4313      	orrs	r3, r2
 8004500:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	f003 0308 	and.w	r3, r3, #8
 800450c:	2b00      	cmp	r3, #0
 800450e:	d00a      	beq.n	8004526 <HAL_RCCEx_PeriphCLKConfig+0x306>
 8004510:	4b7e      	ldr	r3, [pc, #504]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004512:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004516:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800451e:	497b      	ldr	r1, [pc, #492]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004520:	4313      	orrs	r3, r2
 8004522:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	f003 0310 	and.w	r3, r3, #16
 800452e:	2b00      	cmp	r3, #0
 8004530:	d00a      	beq.n	8004548 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8004532:	4b76      	ldr	r3, [pc, #472]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004534:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004538:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004540:	4972      	ldr	r1, [pc, #456]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004542:	4313      	orrs	r3, r2
 8004544:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	f003 0320 	and.w	r3, r3, #32
 8004550:	2b00      	cmp	r3, #0
 8004552:	d00a      	beq.n	800456a <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8004554:	4b6d      	ldr	r3, [pc, #436]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004556:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800455a:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004562:	496a      	ldr	r1, [pc, #424]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004564:	4313      	orrs	r3, r2
 8004566:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004572:	2b00      	cmp	r3, #0
 8004574:	d00a      	beq.n	800458c <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8004576:	4b65      	ldr	r3, [pc, #404]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004578:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800457c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004584:	4961      	ldr	r1, [pc, #388]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004586:	4313      	orrs	r3, r2
 8004588:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004594:	2b00      	cmp	r3, #0
 8004596:	d00a      	beq.n	80045ae <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8004598:	4b5c      	ldr	r3, [pc, #368]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800459a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800459e:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80045a6:	4959      	ldr	r1, [pc, #356]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80045a8:	4313      	orrs	r3, r2
 80045aa:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	d00a      	beq.n	80045d0 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
 80045ba:	4b54      	ldr	r3, [pc, #336]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80045bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80045c0:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80045c8:	4950      	ldr	r1, [pc, #320]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80045ca:	4313      	orrs	r3, r2
 80045cc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80045d8:	2b00      	cmp	r3, #0
 80045da:	d00a      	beq.n	80045f2 <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 80045dc:	4b4b      	ldr	r3, [pc, #300]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80045de:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80045e2:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045ea:	4948      	ldr	r1, [pc, #288]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80045ec:	4313      	orrs	r3, r2
 80045ee:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	681b      	ldr	r3, [r3, #0]
 80045f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80045fa:	2b00      	cmp	r3, #0
 80045fc:	d00a      	beq.n	8004614 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 80045fe:	4b43      	ldr	r3, [pc, #268]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004600:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004604:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800460c:	493f      	ldr	r1, [pc, #252]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800460e:	4313      	orrs	r3, r2
 8004610:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800461c:	2b00      	cmp	r3, #0
 800461e:	d028      	beq.n	8004672 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8004620:	4b3a      	ldr	r3, [pc, #232]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004622:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004626:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800462e:	4937      	ldr	r1, [pc, #220]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004630:	4313      	orrs	r3, r2
 8004632:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800463a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800463e:	d106      	bne.n	800464e <HAL_RCCEx_PeriphCLKConfig+0x42e>
 8004640:	4b32      	ldr	r3, [pc, #200]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004642:	68db      	ldr	r3, [r3, #12]
 8004644:	4a31      	ldr	r2, [pc, #196]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004646:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800464a:	60d3      	str	r3, [r2, #12]
 800464c:	e011      	b.n	8004672 <HAL_RCCEx_PeriphCLKConfig+0x452>
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004652:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8004656:	d10c      	bne.n	8004672 <HAL_RCCEx_PeriphCLKConfig+0x452>
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	3304      	adds	r3, #4
 800465c:	2101      	movs	r1, #1
 800465e:	4618      	mov	r0, r3
 8004660:	f000 f8c8 	bl	80047f4 <RCCEx_PLLSAI1_Config>
 8004664:	4603      	mov	r3, r0
 8004666:	74fb      	strb	r3, [r7, #19]
 8004668:	7cfb      	ldrb	r3, [r7, #19]
 800466a:	2b00      	cmp	r3, #0
 800466c:	d001      	beq.n	8004672 <HAL_RCCEx_PeriphCLKConfig+0x452>
 800466e:	7cfb      	ldrb	r3, [r7, #19]
 8004670:	74bb      	strb	r3, [r7, #18]
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800467a:	2b00      	cmp	r3, #0
 800467c:	d028      	beq.n	80046d0 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 800467e:	4b23      	ldr	r3, [pc, #140]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004680:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004684:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800468c:	491f      	ldr	r1, [pc, #124]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800468e:	4313      	orrs	r3, r2
 8004690:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004698:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800469c:	d106      	bne.n	80046ac <HAL_RCCEx_PeriphCLKConfig+0x48c>
 800469e:	4b1b      	ldr	r3, [pc, #108]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80046a0:	68db      	ldr	r3, [r3, #12]
 80046a2:	4a1a      	ldr	r2, [pc, #104]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80046a4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80046a8:	60d3      	str	r3, [r2, #12]
 80046aa:	e011      	b.n	80046d0 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046b0:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80046b4:	d10c      	bne.n	80046d0 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	3304      	adds	r3, #4
 80046ba:	2101      	movs	r1, #1
 80046bc:	4618      	mov	r0, r3
 80046be:	f000 f899 	bl	80047f4 <RCCEx_PLLSAI1_Config>
 80046c2:	4603      	mov	r3, r0
 80046c4:	74fb      	strb	r3, [r7, #19]
 80046c6:	7cfb      	ldrb	r3, [r7, #19]
 80046c8:	2b00      	cmp	r3, #0
 80046ca:	d001      	beq.n	80046d0 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 80046cc:	7cfb      	ldrb	r3, [r7, #19]
 80046ce:	74bb      	strb	r3, [r7, #18]
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80046d8:	2b00      	cmp	r3, #0
 80046da:	d02b      	beq.n	8004734 <HAL_RCCEx_PeriphCLKConfig+0x514>
 80046dc:	4b0b      	ldr	r3, [pc, #44]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80046de:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80046e2:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80046ea:	4908      	ldr	r1, [pc, #32]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80046ec:	4313      	orrs	r3, r2
 80046ee:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80046f6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80046fa:	d109      	bne.n	8004710 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 80046fc:	4b03      	ldr	r3, [pc, #12]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80046fe:	68db      	ldr	r3, [r3, #12]
 8004700:	4a02      	ldr	r2, [pc, #8]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8004702:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004706:	60d3      	str	r3, [r2, #12]
 8004708:	e014      	b.n	8004734 <HAL_RCCEx_PeriphCLKConfig+0x514>
 800470a:	bf00      	nop
 800470c:	40021000 	.word	0x40021000
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004714:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8004718:	d10c      	bne.n	8004734 <HAL_RCCEx_PeriphCLKConfig+0x514>
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	3304      	adds	r3, #4
 800471e:	2101      	movs	r1, #1
 8004720:	4618      	mov	r0, r3
 8004722:	f000 f867 	bl	80047f4 <RCCEx_PLLSAI1_Config>
 8004726:	4603      	mov	r3, r0
 8004728:	74fb      	strb	r3, [r7, #19]
 800472a:	7cfb      	ldrb	r3, [r7, #19]
 800472c:	2b00      	cmp	r3, #0
 800472e:	d001      	beq.n	8004734 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8004730:	7cfb      	ldrb	r3, [r7, #19]
 8004732:	74bb      	strb	r3, [r7, #18]
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	681b      	ldr	r3, [r3, #0]
 8004738:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800473c:	2b00      	cmp	r3, #0
 800473e:	d02f      	beq.n	80047a0 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8004740:	4b2b      	ldr	r3, [pc, #172]	; (80047f0 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8004742:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004746:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800474e:	4928      	ldr	r1, [pc, #160]	; (80047f0 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8004750:	4313      	orrs	r3, r2
 8004752:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800475a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800475e:	d10d      	bne.n	800477c <HAL_RCCEx_PeriphCLKConfig+0x55c>
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	3304      	adds	r3, #4
 8004764:	2102      	movs	r1, #2
 8004766:	4618      	mov	r0, r3
 8004768:	f000 f844 	bl	80047f4 <RCCEx_PLLSAI1_Config>
 800476c:	4603      	mov	r3, r0
 800476e:	74fb      	strb	r3, [r7, #19]
 8004770:	7cfb      	ldrb	r3, [r7, #19]
 8004772:	2b00      	cmp	r3, #0
 8004774:	d014      	beq.n	80047a0 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8004776:	7cfb      	ldrb	r3, [r7, #19]
 8004778:	74bb      	strb	r3, [r7, #18]
 800477a:	e011      	b.n	80047a0 <HAL_RCCEx_PeriphCLKConfig+0x580>
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8004780:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004784:	d10c      	bne.n	80047a0 <HAL_RCCEx_PeriphCLKConfig+0x580>
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	3320      	adds	r3, #32
 800478a:	2102      	movs	r1, #2
 800478c:	4618      	mov	r0, r3
 800478e:	f000 f925 	bl	80049dc <RCCEx_PLLSAI2_Config>
 8004792:	4603      	mov	r3, r0
 8004794:	74fb      	strb	r3, [r7, #19]
 8004796:	7cfb      	ldrb	r3, [r7, #19]
 8004798:	2b00      	cmp	r3, #0
 800479a:	d001      	beq.n	80047a0 <HAL_RCCEx_PeriphCLKConfig+0x580>
 800479c:	7cfb      	ldrb	r3, [r7, #19]
 800479e:	74bb      	strb	r3, [r7, #18]
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d00a      	beq.n	80047c2 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 80047ac:	4b10      	ldr	r3, [pc, #64]	; (80047f0 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80047ae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80047b2:	f023 4280 	bic.w	r2, r3, #1073741824	; 0x40000000
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80047ba:	490d      	ldr	r1, [pc, #52]	; (80047f0 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80047bc:	4313      	orrs	r3, r2
 80047be:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80047ca:	2b00      	cmp	r3, #0
 80047cc:	d00b      	beq.n	80047e6 <HAL_RCCEx_PeriphCLKConfig+0x5c6>
 80047ce:	4b08      	ldr	r3, [pc, #32]	; (80047f0 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80047d0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80047d4:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80047de:	4904      	ldr	r1, [pc, #16]	; (80047f0 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80047e0:	4313      	orrs	r3, r2
 80047e2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80047e6:	7cbb      	ldrb	r3, [r7, #18]
 80047e8:	4618      	mov	r0, r3
 80047ea:	3718      	adds	r7, #24
 80047ec:	46bd      	mov	sp, r7
 80047ee:	bd80      	pop	{r7, pc}
 80047f0:	40021000 	.word	0x40021000

080047f4 <RCCEx_PLLSAI1_Config>:
 80047f4:	b580      	push	{r7, lr}
 80047f6:	b084      	sub	sp, #16
 80047f8:	af00      	add	r7, sp, #0
 80047fa:	6078      	str	r0, [r7, #4]
 80047fc:	6039      	str	r1, [r7, #0]
 80047fe:	2300      	movs	r3, #0
 8004800:	73fb      	strb	r3, [r7, #15]
 8004802:	4b75      	ldr	r3, [pc, #468]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004804:	68db      	ldr	r3, [r3, #12]
 8004806:	f003 0303 	and.w	r3, r3, #3
 800480a:	2b00      	cmp	r3, #0
 800480c:	d018      	beq.n	8004840 <RCCEx_PLLSAI1_Config+0x4c>
 800480e:	4b72      	ldr	r3, [pc, #456]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004810:	68db      	ldr	r3, [r3, #12]
 8004812:	f003 0203 	and.w	r2, r3, #3
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	429a      	cmp	r2, r3
 800481c:	d10d      	bne.n	800483a <RCCEx_PLLSAI1_Config+0x46>
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	2b00      	cmp	r3, #0
 8004824:	d009      	beq.n	800483a <RCCEx_PLLSAI1_Config+0x46>
 8004826:	4b6c      	ldr	r3, [pc, #432]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004828:	68db      	ldr	r3, [r3, #12]
 800482a:	091b      	lsrs	r3, r3, #4
 800482c:	f003 0307 	and.w	r3, r3, #7
 8004830:	1c5a      	adds	r2, r3, #1
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	685b      	ldr	r3, [r3, #4]
 8004836:	429a      	cmp	r2, r3
 8004838:	d047      	beq.n	80048ca <RCCEx_PLLSAI1_Config+0xd6>
 800483a:	2301      	movs	r3, #1
 800483c:	73fb      	strb	r3, [r7, #15]
 800483e:	e044      	b.n	80048ca <RCCEx_PLLSAI1_Config+0xd6>
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	2b03      	cmp	r3, #3
 8004846:	d018      	beq.n	800487a <RCCEx_PLLSAI1_Config+0x86>
 8004848:	2b03      	cmp	r3, #3
 800484a:	d825      	bhi.n	8004898 <RCCEx_PLLSAI1_Config+0xa4>
 800484c:	2b01      	cmp	r3, #1
 800484e:	d002      	beq.n	8004856 <RCCEx_PLLSAI1_Config+0x62>
 8004850:	2b02      	cmp	r3, #2
 8004852:	d009      	beq.n	8004868 <RCCEx_PLLSAI1_Config+0x74>
 8004854:	e020      	b.n	8004898 <RCCEx_PLLSAI1_Config+0xa4>
 8004856:	4b60      	ldr	r3, [pc, #384]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	f003 0302 	and.w	r3, r3, #2
 800485e:	2b00      	cmp	r3, #0
 8004860:	d11d      	bne.n	800489e <RCCEx_PLLSAI1_Config+0xaa>
 8004862:	2301      	movs	r3, #1
 8004864:	73fb      	strb	r3, [r7, #15]
 8004866:	e01a      	b.n	800489e <RCCEx_PLLSAI1_Config+0xaa>
 8004868:	4b5b      	ldr	r3, [pc, #364]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004870:	2b00      	cmp	r3, #0
 8004872:	d116      	bne.n	80048a2 <RCCEx_PLLSAI1_Config+0xae>
 8004874:	2301      	movs	r3, #1
 8004876:	73fb      	strb	r3, [r7, #15]
 8004878:	e013      	b.n	80048a2 <RCCEx_PLLSAI1_Config+0xae>
 800487a:	4b57      	ldr	r3, [pc, #348]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004882:	2b00      	cmp	r3, #0
 8004884:	d10f      	bne.n	80048a6 <RCCEx_PLLSAI1_Config+0xb2>
 8004886:	4b54      	ldr	r3, [pc, #336]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004888:	681b      	ldr	r3, [r3, #0]
 800488a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800488e:	2b00      	cmp	r3, #0
 8004890:	d109      	bne.n	80048a6 <RCCEx_PLLSAI1_Config+0xb2>
 8004892:	2301      	movs	r3, #1
 8004894:	73fb      	strb	r3, [r7, #15]
 8004896:	e006      	b.n	80048a6 <RCCEx_PLLSAI1_Config+0xb2>
 8004898:	2301      	movs	r3, #1
 800489a:	73fb      	strb	r3, [r7, #15]
 800489c:	e004      	b.n	80048a8 <RCCEx_PLLSAI1_Config+0xb4>
 800489e:	bf00      	nop
 80048a0:	e002      	b.n	80048a8 <RCCEx_PLLSAI1_Config+0xb4>
 80048a2:	bf00      	nop
 80048a4:	e000      	b.n	80048a8 <RCCEx_PLLSAI1_Config+0xb4>
 80048a6:	bf00      	nop
 80048a8:	7bfb      	ldrb	r3, [r7, #15]
 80048aa:	2b00      	cmp	r3, #0
 80048ac:	d10d      	bne.n	80048ca <RCCEx_PLLSAI1_Config+0xd6>
 80048ae:	4b4a      	ldr	r3, [pc, #296]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 80048b0:	68db      	ldr	r3, [r3, #12]
 80048b2:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	6819      	ldr	r1, [r3, #0]
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	685b      	ldr	r3, [r3, #4]
 80048be:	3b01      	subs	r3, #1
 80048c0:	011b      	lsls	r3, r3, #4
 80048c2:	430b      	orrs	r3, r1
 80048c4:	4944      	ldr	r1, [pc, #272]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 80048c6:	4313      	orrs	r3, r2
 80048c8:	60cb      	str	r3, [r1, #12]
 80048ca:	7bfb      	ldrb	r3, [r7, #15]
 80048cc:	2b00      	cmp	r3, #0
 80048ce:	d17d      	bne.n	80049cc <RCCEx_PLLSAI1_Config+0x1d8>
 80048d0:	4b41      	ldr	r3, [pc, #260]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	4a40      	ldr	r2, [pc, #256]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 80048d6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80048da:	6013      	str	r3, [r2, #0]
 80048dc:	f7fe fafc 	bl	8002ed8 <HAL_GetTick>
 80048e0:	60b8      	str	r0, [r7, #8]
 80048e2:	e009      	b.n	80048f8 <RCCEx_PLLSAI1_Config+0x104>
 80048e4:	f7fe faf8 	bl	8002ed8 <HAL_GetTick>
 80048e8:	4602      	mov	r2, r0
 80048ea:	68bb      	ldr	r3, [r7, #8]
 80048ec:	1ad3      	subs	r3, r2, r3
 80048ee:	2b02      	cmp	r3, #2
 80048f0:	d902      	bls.n	80048f8 <RCCEx_PLLSAI1_Config+0x104>
 80048f2:	2303      	movs	r3, #3
 80048f4:	73fb      	strb	r3, [r7, #15]
 80048f6:	e005      	b.n	8004904 <RCCEx_PLLSAI1_Config+0x110>
 80048f8:	4b37      	ldr	r3, [pc, #220]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 80048fa:	681b      	ldr	r3, [r3, #0]
 80048fc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8004900:	2b00      	cmp	r3, #0
 8004902:	d1ef      	bne.n	80048e4 <RCCEx_PLLSAI1_Config+0xf0>
 8004904:	7bfb      	ldrb	r3, [r7, #15]
 8004906:	2b00      	cmp	r3, #0
 8004908:	d160      	bne.n	80049cc <RCCEx_PLLSAI1_Config+0x1d8>
 800490a:	683b      	ldr	r3, [r7, #0]
 800490c:	2b00      	cmp	r3, #0
 800490e:	d111      	bne.n	8004934 <RCCEx_PLLSAI1_Config+0x140>
 8004910:	4b31      	ldr	r3, [pc, #196]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004912:	691b      	ldr	r3, [r3, #16]
 8004914:	f423 331f 	bic.w	r3, r3, #162816	; 0x27c00
 8004918:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800491c:	687a      	ldr	r2, [r7, #4]
 800491e:	6892      	ldr	r2, [r2, #8]
 8004920:	0211      	lsls	r1, r2, #8
 8004922:	687a      	ldr	r2, [r7, #4]
 8004924:	68d2      	ldr	r2, [r2, #12]
 8004926:	0912      	lsrs	r2, r2, #4
 8004928:	0452      	lsls	r2, r2, #17
 800492a:	430a      	orrs	r2, r1
 800492c:	492a      	ldr	r1, [pc, #168]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 800492e:	4313      	orrs	r3, r2
 8004930:	610b      	str	r3, [r1, #16]
 8004932:	e027      	b.n	8004984 <RCCEx_PLLSAI1_Config+0x190>
 8004934:	683b      	ldr	r3, [r7, #0]
 8004936:	2b01      	cmp	r3, #1
 8004938:	d112      	bne.n	8004960 <RCCEx_PLLSAI1_Config+0x16c>
 800493a:	4b27      	ldr	r3, [pc, #156]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 800493c:	691b      	ldr	r3, [r3, #16]
 800493e:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8004942:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8004946:	687a      	ldr	r2, [r7, #4]
 8004948:	6892      	ldr	r2, [r2, #8]
 800494a:	0211      	lsls	r1, r2, #8
 800494c:	687a      	ldr	r2, [r7, #4]
 800494e:	6912      	ldr	r2, [r2, #16]
 8004950:	0852      	lsrs	r2, r2, #1
 8004952:	3a01      	subs	r2, #1
 8004954:	0552      	lsls	r2, r2, #21
 8004956:	430a      	orrs	r2, r1
 8004958:	491f      	ldr	r1, [pc, #124]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 800495a:	4313      	orrs	r3, r2
 800495c:	610b      	str	r3, [r1, #16]
 800495e:	e011      	b.n	8004984 <RCCEx_PLLSAI1_Config+0x190>
 8004960:	4b1d      	ldr	r3, [pc, #116]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004962:	691b      	ldr	r3, [r3, #16]
 8004964:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8004968:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 800496c:	687a      	ldr	r2, [r7, #4]
 800496e:	6892      	ldr	r2, [r2, #8]
 8004970:	0211      	lsls	r1, r2, #8
 8004972:	687a      	ldr	r2, [r7, #4]
 8004974:	6952      	ldr	r2, [r2, #20]
 8004976:	0852      	lsrs	r2, r2, #1
 8004978:	3a01      	subs	r2, #1
 800497a:	0652      	lsls	r2, r2, #25
 800497c:	430a      	orrs	r2, r1
 800497e:	4916      	ldr	r1, [pc, #88]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004980:	4313      	orrs	r3, r2
 8004982:	610b      	str	r3, [r1, #16]
 8004984:	4b14      	ldr	r3, [pc, #80]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	4a13      	ldr	r2, [pc, #76]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 800498a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800498e:	6013      	str	r3, [r2, #0]
 8004990:	f7fe faa2 	bl	8002ed8 <HAL_GetTick>
 8004994:	60b8      	str	r0, [r7, #8]
 8004996:	e009      	b.n	80049ac <RCCEx_PLLSAI1_Config+0x1b8>
 8004998:	f7fe fa9e 	bl	8002ed8 <HAL_GetTick>
 800499c:	4602      	mov	r2, r0
 800499e:	68bb      	ldr	r3, [r7, #8]
 80049a0:	1ad3      	subs	r3, r2, r3
 80049a2:	2b02      	cmp	r3, #2
 80049a4:	d902      	bls.n	80049ac <RCCEx_PLLSAI1_Config+0x1b8>
 80049a6:	2303      	movs	r3, #3
 80049a8:	73fb      	strb	r3, [r7, #15]
 80049aa:	e005      	b.n	80049b8 <RCCEx_PLLSAI1_Config+0x1c4>
 80049ac:	4b0a      	ldr	r3, [pc, #40]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80049b4:	2b00      	cmp	r3, #0
 80049b6:	d0ef      	beq.n	8004998 <RCCEx_PLLSAI1_Config+0x1a4>
 80049b8:	7bfb      	ldrb	r3, [r7, #15]
 80049ba:	2b00      	cmp	r3, #0
 80049bc:	d106      	bne.n	80049cc <RCCEx_PLLSAI1_Config+0x1d8>
 80049be:	4b06      	ldr	r3, [pc, #24]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 80049c0:	691a      	ldr	r2, [r3, #16]
 80049c2:	687b      	ldr	r3, [r7, #4]
 80049c4:	699b      	ldr	r3, [r3, #24]
 80049c6:	4904      	ldr	r1, [pc, #16]	; (80049d8 <RCCEx_PLLSAI1_Config+0x1e4>)
 80049c8:	4313      	orrs	r3, r2
 80049ca:	610b      	str	r3, [r1, #16]
 80049cc:	7bfb      	ldrb	r3, [r7, #15]
 80049ce:	4618      	mov	r0, r3
 80049d0:	3710      	adds	r7, #16
 80049d2:	46bd      	mov	sp, r7
 80049d4:	bd80      	pop	{r7, pc}
 80049d6:	bf00      	nop
 80049d8:	40021000 	.word	0x40021000

080049dc <RCCEx_PLLSAI2_Config>:
 80049dc:	b580      	push	{r7, lr}
 80049de:	b084      	sub	sp, #16
 80049e0:	af00      	add	r7, sp, #0
 80049e2:	6078      	str	r0, [r7, #4]
 80049e4:	6039      	str	r1, [r7, #0]
 80049e6:	2300      	movs	r3, #0
 80049e8:	73fb      	strb	r3, [r7, #15]
 80049ea:	4b6a      	ldr	r3, [pc, #424]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 80049ec:	68db      	ldr	r3, [r3, #12]
 80049ee:	f003 0303 	and.w	r3, r3, #3
 80049f2:	2b00      	cmp	r3, #0
 80049f4:	d018      	beq.n	8004a28 <RCCEx_PLLSAI2_Config+0x4c>
 80049f6:	4b67      	ldr	r3, [pc, #412]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 80049f8:	68db      	ldr	r3, [r3, #12]
 80049fa:	f003 0203 	and.w	r2, r3, #3
 80049fe:	687b      	ldr	r3, [r7, #4]
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	429a      	cmp	r2, r3
 8004a04:	d10d      	bne.n	8004a22 <RCCEx_PLLSAI2_Config+0x46>
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	2b00      	cmp	r3, #0
 8004a0c:	d009      	beq.n	8004a22 <RCCEx_PLLSAI2_Config+0x46>
 8004a0e:	4b61      	ldr	r3, [pc, #388]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004a10:	68db      	ldr	r3, [r3, #12]
 8004a12:	091b      	lsrs	r3, r3, #4
 8004a14:	f003 0307 	and.w	r3, r3, #7
 8004a18:	1c5a      	adds	r2, r3, #1
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	685b      	ldr	r3, [r3, #4]
 8004a1e:	429a      	cmp	r2, r3
 8004a20:	d047      	beq.n	8004ab2 <RCCEx_PLLSAI2_Config+0xd6>
 8004a22:	2301      	movs	r3, #1
 8004a24:	73fb      	strb	r3, [r7, #15]
 8004a26:	e044      	b.n	8004ab2 <RCCEx_PLLSAI2_Config+0xd6>
 8004a28:	687b      	ldr	r3, [r7, #4]
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	2b03      	cmp	r3, #3
 8004a2e:	d018      	beq.n	8004a62 <RCCEx_PLLSAI2_Config+0x86>
 8004a30:	2b03      	cmp	r3, #3
 8004a32:	d825      	bhi.n	8004a80 <RCCEx_PLLSAI2_Config+0xa4>
 8004a34:	2b01      	cmp	r3, #1
 8004a36:	d002      	beq.n	8004a3e <RCCEx_PLLSAI2_Config+0x62>
 8004a38:	2b02      	cmp	r3, #2
 8004a3a:	d009      	beq.n	8004a50 <RCCEx_PLLSAI2_Config+0x74>
 8004a3c:	e020      	b.n	8004a80 <RCCEx_PLLSAI2_Config+0xa4>
 8004a3e:	4b55      	ldr	r3, [pc, #340]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	f003 0302 	and.w	r3, r3, #2
 8004a46:	2b00      	cmp	r3, #0
 8004a48:	d11d      	bne.n	8004a86 <RCCEx_PLLSAI2_Config+0xaa>
 8004a4a:	2301      	movs	r3, #1
 8004a4c:	73fb      	strb	r3, [r7, #15]
 8004a4e:	e01a      	b.n	8004a86 <RCCEx_PLLSAI2_Config+0xaa>
 8004a50:	4b50      	ldr	r3, [pc, #320]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004a52:	681b      	ldr	r3, [r3, #0]
 8004a54:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004a58:	2b00      	cmp	r3, #0
 8004a5a:	d116      	bne.n	8004a8a <RCCEx_PLLSAI2_Config+0xae>
 8004a5c:	2301      	movs	r3, #1
 8004a5e:	73fb      	strb	r3, [r7, #15]
 8004a60:	e013      	b.n	8004a8a <RCCEx_PLLSAI2_Config+0xae>
 8004a62:	4b4c      	ldr	r3, [pc, #304]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004a6a:	2b00      	cmp	r3, #0
 8004a6c:	d10f      	bne.n	8004a8e <RCCEx_PLLSAI2_Config+0xb2>
 8004a6e:	4b49      	ldr	r3, [pc, #292]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004a70:	681b      	ldr	r3, [r3, #0]
 8004a72:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	d109      	bne.n	8004a8e <RCCEx_PLLSAI2_Config+0xb2>
 8004a7a:	2301      	movs	r3, #1
 8004a7c:	73fb      	strb	r3, [r7, #15]
 8004a7e:	e006      	b.n	8004a8e <RCCEx_PLLSAI2_Config+0xb2>
 8004a80:	2301      	movs	r3, #1
 8004a82:	73fb      	strb	r3, [r7, #15]
 8004a84:	e004      	b.n	8004a90 <RCCEx_PLLSAI2_Config+0xb4>
 8004a86:	bf00      	nop
 8004a88:	e002      	b.n	8004a90 <RCCEx_PLLSAI2_Config+0xb4>
 8004a8a:	bf00      	nop
 8004a8c:	e000      	b.n	8004a90 <RCCEx_PLLSAI2_Config+0xb4>
 8004a8e:	bf00      	nop
 8004a90:	7bfb      	ldrb	r3, [r7, #15]
 8004a92:	2b00      	cmp	r3, #0
 8004a94:	d10d      	bne.n	8004ab2 <RCCEx_PLLSAI2_Config+0xd6>
 8004a96:	4b3f      	ldr	r3, [pc, #252]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004a98:	68db      	ldr	r3, [r3, #12]
 8004a9a:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	6819      	ldr	r1, [r3, #0]
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	685b      	ldr	r3, [r3, #4]
 8004aa6:	3b01      	subs	r3, #1
 8004aa8:	011b      	lsls	r3, r3, #4
 8004aaa:	430b      	orrs	r3, r1
 8004aac:	4939      	ldr	r1, [pc, #228]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004aae:	4313      	orrs	r3, r2
 8004ab0:	60cb      	str	r3, [r1, #12]
 8004ab2:	7bfb      	ldrb	r3, [r7, #15]
 8004ab4:	2b00      	cmp	r3, #0
 8004ab6:	d167      	bne.n	8004b88 <RCCEx_PLLSAI2_Config+0x1ac>
 8004ab8:	4b36      	ldr	r3, [pc, #216]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	4a35      	ldr	r2, [pc, #212]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004abe:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004ac2:	6013      	str	r3, [r2, #0]
 8004ac4:	f7fe fa08 	bl	8002ed8 <HAL_GetTick>
 8004ac8:	60b8      	str	r0, [r7, #8]
 8004aca:	e009      	b.n	8004ae0 <RCCEx_PLLSAI2_Config+0x104>
 8004acc:	f7fe fa04 	bl	8002ed8 <HAL_GetTick>
 8004ad0:	4602      	mov	r2, r0
 8004ad2:	68bb      	ldr	r3, [r7, #8]
 8004ad4:	1ad3      	subs	r3, r2, r3
 8004ad6:	2b02      	cmp	r3, #2
 8004ad8:	d902      	bls.n	8004ae0 <RCCEx_PLLSAI2_Config+0x104>
 8004ada:	2303      	movs	r3, #3
 8004adc:	73fb      	strb	r3, [r7, #15]
 8004ade:	e005      	b.n	8004aec <RCCEx_PLLSAI2_Config+0x110>
 8004ae0:	4b2c      	ldr	r3, [pc, #176]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8004ae8:	2b00      	cmp	r3, #0
 8004aea:	d1ef      	bne.n	8004acc <RCCEx_PLLSAI2_Config+0xf0>
 8004aec:	7bfb      	ldrb	r3, [r7, #15]
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	d14a      	bne.n	8004b88 <RCCEx_PLLSAI2_Config+0x1ac>
 8004af2:	683b      	ldr	r3, [r7, #0]
 8004af4:	2b00      	cmp	r3, #0
 8004af6:	d111      	bne.n	8004b1c <RCCEx_PLLSAI2_Config+0x140>
 8004af8:	4b26      	ldr	r3, [pc, #152]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004afa:	695b      	ldr	r3, [r3, #20]
 8004afc:	f423 331f 	bic.w	r3, r3, #162816	; 0x27c00
 8004b00:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004b04:	687a      	ldr	r2, [r7, #4]
 8004b06:	6892      	ldr	r2, [r2, #8]
 8004b08:	0211      	lsls	r1, r2, #8
 8004b0a:	687a      	ldr	r2, [r7, #4]
 8004b0c:	68d2      	ldr	r2, [r2, #12]
 8004b0e:	0912      	lsrs	r2, r2, #4
 8004b10:	0452      	lsls	r2, r2, #17
 8004b12:	430a      	orrs	r2, r1
 8004b14:	491f      	ldr	r1, [pc, #124]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004b16:	4313      	orrs	r3, r2
 8004b18:	614b      	str	r3, [r1, #20]
 8004b1a:	e011      	b.n	8004b40 <RCCEx_PLLSAI2_Config+0x164>
 8004b1c:	4b1d      	ldr	r3, [pc, #116]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004b1e:	695b      	ldr	r3, [r3, #20]
 8004b20:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8004b24:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8004b28:	687a      	ldr	r2, [r7, #4]
 8004b2a:	6892      	ldr	r2, [r2, #8]
 8004b2c:	0211      	lsls	r1, r2, #8
 8004b2e:	687a      	ldr	r2, [r7, #4]
 8004b30:	6912      	ldr	r2, [r2, #16]
 8004b32:	0852      	lsrs	r2, r2, #1
 8004b34:	3a01      	subs	r2, #1
 8004b36:	0652      	lsls	r2, r2, #25
 8004b38:	430a      	orrs	r2, r1
 8004b3a:	4916      	ldr	r1, [pc, #88]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004b3c:	4313      	orrs	r3, r2
 8004b3e:	614b      	str	r3, [r1, #20]
 8004b40:	4b14      	ldr	r3, [pc, #80]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004b42:	681b      	ldr	r3, [r3, #0]
 8004b44:	4a13      	ldr	r2, [pc, #76]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004b46:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004b4a:	6013      	str	r3, [r2, #0]
 8004b4c:	f7fe f9c4 	bl	8002ed8 <HAL_GetTick>
 8004b50:	60b8      	str	r0, [r7, #8]
 8004b52:	e009      	b.n	8004b68 <RCCEx_PLLSAI2_Config+0x18c>
 8004b54:	f7fe f9c0 	bl	8002ed8 <HAL_GetTick>
 8004b58:	4602      	mov	r2, r0
 8004b5a:	68bb      	ldr	r3, [r7, #8]
 8004b5c:	1ad3      	subs	r3, r2, r3
 8004b5e:	2b02      	cmp	r3, #2
 8004b60:	d902      	bls.n	8004b68 <RCCEx_PLLSAI2_Config+0x18c>
 8004b62:	2303      	movs	r3, #3
 8004b64:	73fb      	strb	r3, [r7, #15]
 8004b66:	e005      	b.n	8004b74 <RCCEx_PLLSAI2_Config+0x198>
 8004b68:	4b0a      	ldr	r3, [pc, #40]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004b6a:	681b      	ldr	r3, [r3, #0]
 8004b6c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	d0ef      	beq.n	8004b54 <RCCEx_PLLSAI2_Config+0x178>
 8004b74:	7bfb      	ldrb	r3, [r7, #15]
 8004b76:	2b00      	cmp	r3, #0
 8004b78:	d106      	bne.n	8004b88 <RCCEx_PLLSAI2_Config+0x1ac>
 8004b7a:	4b06      	ldr	r3, [pc, #24]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004b7c:	695a      	ldr	r2, [r3, #20]
 8004b7e:	687b      	ldr	r3, [r7, #4]
 8004b80:	695b      	ldr	r3, [r3, #20]
 8004b82:	4904      	ldr	r1, [pc, #16]	; (8004b94 <RCCEx_PLLSAI2_Config+0x1b8>)
 8004b84:	4313      	orrs	r3, r2
 8004b86:	614b      	str	r3, [r1, #20]
 8004b88:	7bfb      	ldrb	r3, [r7, #15]
 8004b8a:	4618      	mov	r0, r3
 8004b8c:	3710      	adds	r7, #16
 8004b8e:	46bd      	mov	sp, r7
 8004b90:	bd80      	pop	{r7, pc}
 8004b92:	bf00      	nop
 8004b94:	40021000 	.word	0x40021000

08004b98 <HAL_SPI_Init>:
 8004b98:	b580      	push	{r7, lr}
 8004b9a:	b084      	sub	sp, #16
 8004b9c:	af00      	add	r7, sp, #0
 8004b9e:	6078      	str	r0, [r7, #4]
 8004ba0:	687b      	ldr	r3, [r7, #4]
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d101      	bne.n	8004baa <HAL_SPI_Init+0x12>
 8004ba6:	2301      	movs	r3, #1
 8004ba8:	e095      	b.n	8004cd6 <HAL_SPI_Init+0x13e>
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	d108      	bne.n	8004bc4 <HAL_SPI_Init+0x2c>
 8004bb2:	687b      	ldr	r3, [r7, #4]
 8004bb4:	685b      	ldr	r3, [r3, #4]
 8004bb6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004bba:	d009      	beq.n	8004bd0 <HAL_SPI_Init+0x38>
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	2200      	movs	r2, #0
 8004bc0:	61da      	str	r2, [r3, #28]
 8004bc2:	e005      	b.n	8004bd0 <HAL_SPI_Init+0x38>
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	2200      	movs	r2, #0
 8004bc8:	611a      	str	r2, [r3, #16]
 8004bca:	687b      	ldr	r3, [r7, #4]
 8004bcc:	2200      	movs	r2, #0
 8004bce:	615a      	str	r2, [r3, #20]
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	2200      	movs	r2, #0
 8004bd4:	629a      	str	r2, [r3, #40]	; 0x28
 8004bd6:	687b      	ldr	r3, [r7, #4]
 8004bd8:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8004bdc:	b2db      	uxtb	r3, r3
 8004bde:	2b00      	cmp	r3, #0
 8004be0:	d106      	bne.n	8004bf0 <HAL_SPI_Init+0x58>
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	2200      	movs	r2, #0
 8004be6:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8004bea:	6878      	ldr	r0, [r7, #4]
 8004bec:	f7fd feea 	bl	80029c4 <HAL_SPI_MspInit>
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	2202      	movs	r2, #2
 8004bf4:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	681b      	ldr	r3, [r3, #0]
 8004bfc:	681a      	ldr	r2, [r3, #0]
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004c06:	601a      	str	r2, [r3, #0]
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	68db      	ldr	r3, [r3, #12]
 8004c0c:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004c10:	d902      	bls.n	8004c18 <HAL_SPI_Init+0x80>
 8004c12:	2300      	movs	r3, #0
 8004c14:	60fb      	str	r3, [r7, #12]
 8004c16:	e002      	b.n	8004c1e <HAL_SPI_Init+0x86>
 8004c18:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004c1c:	60fb      	str	r3, [r7, #12]
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	68db      	ldr	r3, [r3, #12]
 8004c22:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8004c26:	d007      	beq.n	8004c38 <HAL_SPI_Init+0xa0>
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	68db      	ldr	r3, [r3, #12]
 8004c2c:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004c30:	d002      	beq.n	8004c38 <HAL_SPI_Init+0xa0>
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	2200      	movs	r2, #0
 8004c36:	629a      	str	r2, [r3, #40]	; 0x28
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	685b      	ldr	r3, [r3, #4]
 8004c3c:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	689b      	ldr	r3, [r3, #8]
 8004c44:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8004c48:	431a      	orrs	r2, r3
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	691b      	ldr	r3, [r3, #16]
 8004c4e:	f003 0302 	and.w	r3, r3, #2
 8004c52:	431a      	orrs	r2, r3
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	695b      	ldr	r3, [r3, #20]
 8004c58:	f003 0301 	and.w	r3, r3, #1
 8004c5c:	431a      	orrs	r2, r3
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	699b      	ldr	r3, [r3, #24]
 8004c62:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004c66:	431a      	orrs	r2, r3
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	69db      	ldr	r3, [r3, #28]
 8004c6c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004c70:	431a      	orrs	r2, r3
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	6a1b      	ldr	r3, [r3, #32]
 8004c76:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004c7a:	ea42 0103 	orr.w	r1, r2, r3
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004c82:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	430a      	orrs	r2, r1
 8004c8c:	601a      	str	r2, [r3, #0]
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	699b      	ldr	r3, [r3, #24]
 8004c92:	0c1b      	lsrs	r3, r3, #16
 8004c94:	f003 0204 	and.w	r2, r3, #4
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c9c:	f003 0310 	and.w	r3, r3, #16
 8004ca0:	431a      	orrs	r2, r3
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004ca6:	f003 0308 	and.w	r3, r3, #8
 8004caa:	431a      	orrs	r2, r3
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	68db      	ldr	r3, [r3, #12]
 8004cb0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8004cb4:	ea42 0103 	orr.w	r1, r2, r3
 8004cb8:	68fb      	ldr	r3, [r7, #12]
 8004cba:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	430a      	orrs	r2, r1
 8004cc4:	605a      	str	r2, [r3, #4]
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	2200      	movs	r2, #0
 8004cca:	661a      	str	r2, [r3, #96]	; 0x60
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	2201      	movs	r2, #1
 8004cd0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8004cd4:	2300      	movs	r3, #0
 8004cd6:	4618      	mov	r0, r3
 8004cd8:	3710      	adds	r7, #16
 8004cda:	46bd      	mov	sp, r7
 8004cdc:	bd80      	pop	{r7, pc}

08004cde <HAL_SPI_TransmitReceive>:
 8004cde:	b580      	push	{r7, lr}
 8004ce0:	b08a      	sub	sp, #40	; 0x28
 8004ce2:	af00      	add	r7, sp, #0
 8004ce4:	60f8      	str	r0, [r7, #12]
 8004ce6:	60b9      	str	r1, [r7, #8]
 8004ce8:	607a      	str	r2, [r7, #4]
 8004cea:	807b      	strh	r3, [r7, #2]
 8004cec:	2301      	movs	r3, #1
 8004cee:	627b      	str	r3, [r7, #36]	; 0x24
 8004cf0:	2300      	movs	r3, #0
 8004cf2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004cf6:	68fb      	ldr	r3, [r7, #12]
 8004cf8:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8004cfc:	2b01      	cmp	r3, #1
 8004cfe:	d101      	bne.n	8004d04 <HAL_SPI_TransmitReceive+0x26>
 8004d00:	2302      	movs	r3, #2
 8004d02:	e20a      	b.n	800511a <HAL_SPI_TransmitReceive+0x43c>
 8004d04:	68fb      	ldr	r3, [r7, #12]
 8004d06:	2201      	movs	r2, #1
 8004d08:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8004d0c:	f7fe f8e4 	bl	8002ed8 <HAL_GetTick>
 8004d10:	61f8      	str	r0, [r7, #28]
 8004d12:	68fb      	ldr	r3, [r7, #12]
 8004d14:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8004d18:	76fb      	strb	r3, [r7, #27]
 8004d1a:	68fb      	ldr	r3, [r7, #12]
 8004d1c:	685b      	ldr	r3, [r3, #4]
 8004d1e:	617b      	str	r3, [r7, #20]
 8004d20:	887b      	ldrh	r3, [r7, #2]
 8004d22:	827b      	strh	r3, [r7, #18]
 8004d24:	887b      	ldrh	r3, [r7, #2]
 8004d26:	823b      	strh	r3, [r7, #16]
 8004d28:	7efb      	ldrb	r3, [r7, #27]
 8004d2a:	2b01      	cmp	r3, #1
 8004d2c:	d00e      	beq.n	8004d4c <HAL_SPI_TransmitReceive+0x6e>
 8004d2e:	697b      	ldr	r3, [r7, #20]
 8004d30:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004d34:	d106      	bne.n	8004d44 <HAL_SPI_TransmitReceive+0x66>
 8004d36:	68fb      	ldr	r3, [r7, #12]
 8004d38:	689b      	ldr	r3, [r3, #8]
 8004d3a:	2b00      	cmp	r3, #0
 8004d3c:	d102      	bne.n	8004d44 <HAL_SPI_TransmitReceive+0x66>
 8004d3e:	7efb      	ldrb	r3, [r7, #27]
 8004d40:	2b04      	cmp	r3, #4
 8004d42:	d003      	beq.n	8004d4c <HAL_SPI_TransmitReceive+0x6e>
 8004d44:	2302      	movs	r3, #2
 8004d46:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004d4a:	e1e0      	b.n	800510e <HAL_SPI_TransmitReceive+0x430>
 8004d4c:	68bb      	ldr	r3, [r7, #8]
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	d005      	beq.n	8004d5e <HAL_SPI_TransmitReceive+0x80>
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	2b00      	cmp	r3, #0
 8004d56:	d002      	beq.n	8004d5e <HAL_SPI_TransmitReceive+0x80>
 8004d58:	887b      	ldrh	r3, [r7, #2]
 8004d5a:	2b00      	cmp	r3, #0
 8004d5c:	d103      	bne.n	8004d66 <HAL_SPI_TransmitReceive+0x88>
 8004d5e:	2301      	movs	r3, #1
 8004d60:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004d64:	e1d3      	b.n	800510e <HAL_SPI_TransmitReceive+0x430>
 8004d66:	68fb      	ldr	r3, [r7, #12]
 8004d68:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8004d6c:	b2db      	uxtb	r3, r3
 8004d6e:	2b04      	cmp	r3, #4
 8004d70:	d003      	beq.n	8004d7a <HAL_SPI_TransmitReceive+0x9c>
 8004d72:	68fb      	ldr	r3, [r7, #12]
 8004d74:	2205      	movs	r2, #5
 8004d76:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8004d7a:	68fb      	ldr	r3, [r7, #12]
 8004d7c:	2200      	movs	r2, #0
 8004d7e:	661a      	str	r2, [r3, #96]	; 0x60
 8004d80:	68fb      	ldr	r3, [r7, #12]
 8004d82:	687a      	ldr	r2, [r7, #4]
 8004d84:	641a      	str	r2, [r3, #64]	; 0x40
 8004d86:	68fb      	ldr	r3, [r7, #12]
 8004d88:	887a      	ldrh	r2, [r7, #2]
 8004d8a:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8004d8e:	68fb      	ldr	r3, [r7, #12]
 8004d90:	887a      	ldrh	r2, [r7, #2]
 8004d92:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8004d96:	68fb      	ldr	r3, [r7, #12]
 8004d98:	68ba      	ldr	r2, [r7, #8]
 8004d9a:	639a      	str	r2, [r3, #56]	; 0x38
 8004d9c:	68fb      	ldr	r3, [r7, #12]
 8004d9e:	887a      	ldrh	r2, [r7, #2]
 8004da0:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004da2:	68fb      	ldr	r3, [r7, #12]
 8004da4:	887a      	ldrh	r2, [r7, #2]
 8004da6:	879a      	strh	r2, [r3, #60]	; 0x3c
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	2200      	movs	r2, #0
 8004dac:	64da      	str	r2, [r3, #76]	; 0x4c
 8004dae:	68fb      	ldr	r3, [r7, #12]
 8004db0:	2200      	movs	r2, #0
 8004db2:	651a      	str	r2, [r3, #80]	; 0x50
 8004db4:	68fb      	ldr	r3, [r7, #12]
 8004db6:	68db      	ldr	r3, [r3, #12]
 8004db8:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004dbc:	d802      	bhi.n	8004dc4 <HAL_SPI_TransmitReceive+0xe6>
 8004dbe:	8a3b      	ldrh	r3, [r7, #16]
 8004dc0:	2b01      	cmp	r3, #1
 8004dc2:	d908      	bls.n	8004dd6 <HAL_SPI_TransmitReceive+0xf8>
 8004dc4:	68fb      	ldr	r3, [r7, #12]
 8004dc6:	681b      	ldr	r3, [r3, #0]
 8004dc8:	685a      	ldr	r2, [r3, #4]
 8004dca:	68fb      	ldr	r3, [r7, #12]
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004dd2:	605a      	str	r2, [r3, #4]
 8004dd4:	e007      	b.n	8004de6 <HAL_SPI_TransmitReceive+0x108>
 8004dd6:	68fb      	ldr	r3, [r7, #12]
 8004dd8:	681b      	ldr	r3, [r3, #0]
 8004dda:	685a      	ldr	r2, [r3, #4]
 8004ddc:	68fb      	ldr	r3, [r7, #12]
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8004de4:	605a      	str	r2, [r3, #4]
 8004de6:	68fb      	ldr	r3, [r7, #12]
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004df0:	2b40      	cmp	r3, #64	; 0x40
 8004df2:	d007      	beq.n	8004e04 <HAL_SPI_TransmitReceive+0x126>
 8004df4:	68fb      	ldr	r3, [r7, #12]
 8004df6:	681b      	ldr	r3, [r3, #0]
 8004df8:	681a      	ldr	r2, [r3, #0]
 8004dfa:	68fb      	ldr	r3, [r7, #12]
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004e02:	601a      	str	r2, [r3, #0]
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	68db      	ldr	r3, [r3, #12]
 8004e08:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8004e0c:	f240 8081 	bls.w	8004f12 <HAL_SPI_TransmitReceive+0x234>
 8004e10:	68fb      	ldr	r3, [r7, #12]
 8004e12:	685b      	ldr	r3, [r3, #4]
 8004e14:	2b00      	cmp	r3, #0
 8004e16:	d002      	beq.n	8004e1e <HAL_SPI_TransmitReceive+0x140>
 8004e18:	8a7b      	ldrh	r3, [r7, #18]
 8004e1a:	2b01      	cmp	r3, #1
 8004e1c:	d16d      	bne.n	8004efa <HAL_SPI_TransmitReceive+0x21c>
 8004e1e:	68fb      	ldr	r3, [r7, #12]
 8004e20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e22:	881a      	ldrh	r2, [r3, #0]
 8004e24:	68fb      	ldr	r3, [r7, #12]
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	60da      	str	r2, [r3, #12]
 8004e2a:	68fb      	ldr	r3, [r7, #12]
 8004e2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e2e:	1c9a      	adds	r2, r3, #2
 8004e30:	68fb      	ldr	r3, [r7, #12]
 8004e32:	639a      	str	r2, [r3, #56]	; 0x38
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004e38:	b29b      	uxth	r3, r3
 8004e3a:	3b01      	subs	r3, #1
 8004e3c:	b29a      	uxth	r2, r3
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004e42:	e05a      	b.n	8004efa <HAL_SPI_TransmitReceive+0x21c>
 8004e44:	68fb      	ldr	r3, [r7, #12]
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	689b      	ldr	r3, [r3, #8]
 8004e4a:	f003 0302 	and.w	r3, r3, #2
 8004e4e:	2b02      	cmp	r3, #2
 8004e50:	d11b      	bne.n	8004e8a <HAL_SPI_TransmitReceive+0x1ac>
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004e56:	b29b      	uxth	r3, r3
 8004e58:	2b00      	cmp	r3, #0
 8004e5a:	d016      	beq.n	8004e8a <HAL_SPI_TransmitReceive+0x1ac>
 8004e5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e5e:	2b01      	cmp	r3, #1
 8004e60:	d113      	bne.n	8004e8a <HAL_SPI_TransmitReceive+0x1ac>
 8004e62:	68fb      	ldr	r3, [r7, #12]
 8004e64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e66:	881a      	ldrh	r2, [r3, #0]
 8004e68:	68fb      	ldr	r3, [r7, #12]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	60da      	str	r2, [r3, #12]
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e72:	1c9a      	adds	r2, r3, #2
 8004e74:	68fb      	ldr	r3, [r7, #12]
 8004e76:	639a      	str	r2, [r3, #56]	; 0x38
 8004e78:	68fb      	ldr	r3, [r7, #12]
 8004e7a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004e7c:	b29b      	uxth	r3, r3
 8004e7e:	3b01      	subs	r3, #1
 8004e80:	b29a      	uxth	r2, r3
 8004e82:	68fb      	ldr	r3, [r7, #12]
 8004e84:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004e86:	2300      	movs	r3, #0
 8004e88:	627b      	str	r3, [r7, #36]	; 0x24
 8004e8a:	68fb      	ldr	r3, [r7, #12]
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	689b      	ldr	r3, [r3, #8]
 8004e90:	f003 0301 	and.w	r3, r3, #1
 8004e94:	2b01      	cmp	r3, #1
 8004e96:	d11c      	bne.n	8004ed2 <HAL_SPI_TransmitReceive+0x1f4>
 8004e98:	68fb      	ldr	r3, [r7, #12]
 8004e9a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8004e9e:	b29b      	uxth	r3, r3
 8004ea0:	2b00      	cmp	r3, #0
 8004ea2:	d016      	beq.n	8004ed2 <HAL_SPI_TransmitReceive+0x1f4>
 8004ea4:	68fb      	ldr	r3, [r7, #12]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	68da      	ldr	r2, [r3, #12]
 8004eaa:	68fb      	ldr	r3, [r7, #12]
 8004eac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eae:	b292      	uxth	r2, r2
 8004eb0:	801a      	strh	r2, [r3, #0]
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eb6:	1c9a      	adds	r2, r3, #2
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	641a      	str	r2, [r3, #64]	; 0x40
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8004ec2:	b29b      	uxth	r3, r3
 8004ec4:	3b01      	subs	r3, #1
 8004ec6:	b29a      	uxth	r2, r3
 8004ec8:	68fb      	ldr	r3, [r7, #12]
 8004eca:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8004ece:	2301      	movs	r3, #1
 8004ed0:	627b      	str	r3, [r7, #36]	; 0x24
 8004ed2:	f7fe f801 	bl	8002ed8 <HAL_GetTick>
 8004ed6:	4602      	mov	r2, r0
 8004ed8:	69fb      	ldr	r3, [r7, #28]
 8004eda:	1ad3      	subs	r3, r2, r3
 8004edc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004ede:	429a      	cmp	r2, r3
 8004ee0:	d80b      	bhi.n	8004efa <HAL_SPI_TransmitReceive+0x21c>
 8004ee2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ee4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ee8:	d007      	beq.n	8004efa <HAL_SPI_TransmitReceive+0x21c>
 8004eea:	2303      	movs	r3, #3
 8004eec:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8004ef0:	68fb      	ldr	r3, [r7, #12]
 8004ef2:	2201      	movs	r2, #1
 8004ef4:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8004ef8:	e109      	b.n	800510e <HAL_SPI_TransmitReceive+0x430>
 8004efa:	68fb      	ldr	r3, [r7, #12]
 8004efc:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004efe:	b29b      	uxth	r3, r3
 8004f00:	2b00      	cmp	r3, #0
 8004f02:	d19f      	bne.n	8004e44 <HAL_SPI_TransmitReceive+0x166>
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8004f0a:	b29b      	uxth	r3, r3
 8004f0c:	2b00      	cmp	r3, #0
 8004f0e:	d199      	bne.n	8004e44 <HAL_SPI_TransmitReceive+0x166>
 8004f10:	e0e3      	b.n	80050da <HAL_SPI_TransmitReceive+0x3fc>
 8004f12:	68fb      	ldr	r3, [r7, #12]
 8004f14:	685b      	ldr	r3, [r3, #4]
 8004f16:	2b00      	cmp	r3, #0
 8004f18:	d003      	beq.n	8004f22 <HAL_SPI_TransmitReceive+0x244>
 8004f1a:	8a7b      	ldrh	r3, [r7, #18]
 8004f1c:	2b01      	cmp	r3, #1
 8004f1e:	f040 80cf 	bne.w	80050c0 <HAL_SPI_TransmitReceive+0x3e2>
 8004f22:	68fb      	ldr	r3, [r7, #12]
 8004f24:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004f26:	b29b      	uxth	r3, r3
 8004f28:	2b01      	cmp	r3, #1
 8004f2a:	d912      	bls.n	8004f52 <HAL_SPI_TransmitReceive+0x274>
 8004f2c:	68fb      	ldr	r3, [r7, #12]
 8004f2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f30:	881a      	ldrh	r2, [r3, #0]
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	60da      	str	r2, [r3, #12]
 8004f38:	68fb      	ldr	r3, [r7, #12]
 8004f3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f3c:	1c9a      	adds	r2, r3, #2
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	639a      	str	r2, [r3, #56]	; 0x38
 8004f42:	68fb      	ldr	r3, [r7, #12]
 8004f44:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004f46:	b29b      	uxth	r3, r3
 8004f48:	3b02      	subs	r3, #2
 8004f4a:	b29a      	uxth	r2, r3
 8004f4c:	68fb      	ldr	r3, [r7, #12]
 8004f4e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004f50:	e0b6      	b.n	80050c0 <HAL_SPI_TransmitReceive+0x3e2>
 8004f52:	68fb      	ldr	r3, [r7, #12]
 8004f54:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004f56:	68fb      	ldr	r3, [r7, #12]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	330c      	adds	r3, #12
 8004f5c:	7812      	ldrb	r2, [r2, #0]
 8004f5e:	701a      	strb	r2, [r3, #0]
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f64:	1c5a      	adds	r2, r3, #1
 8004f66:	68fb      	ldr	r3, [r7, #12]
 8004f68:	639a      	str	r2, [r3, #56]	; 0x38
 8004f6a:	68fb      	ldr	r3, [r7, #12]
 8004f6c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004f6e:	b29b      	uxth	r3, r3
 8004f70:	3b01      	subs	r3, #1
 8004f72:	b29a      	uxth	r2, r3
 8004f74:	68fb      	ldr	r3, [r7, #12]
 8004f76:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004f78:	e0a2      	b.n	80050c0 <HAL_SPI_TransmitReceive+0x3e2>
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	689b      	ldr	r3, [r3, #8]
 8004f80:	f003 0302 	and.w	r3, r3, #2
 8004f84:	2b02      	cmp	r3, #2
 8004f86:	d134      	bne.n	8004ff2 <HAL_SPI_TransmitReceive+0x314>
 8004f88:	68fb      	ldr	r3, [r7, #12]
 8004f8a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004f8c:	b29b      	uxth	r3, r3
 8004f8e:	2b00      	cmp	r3, #0
 8004f90:	d02f      	beq.n	8004ff2 <HAL_SPI_TransmitReceive+0x314>
 8004f92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f94:	2b01      	cmp	r3, #1
 8004f96:	d12c      	bne.n	8004ff2 <HAL_SPI_TransmitReceive+0x314>
 8004f98:	68fb      	ldr	r3, [r7, #12]
 8004f9a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004f9c:	b29b      	uxth	r3, r3
 8004f9e:	2b01      	cmp	r3, #1
 8004fa0:	d912      	bls.n	8004fc8 <HAL_SPI_TransmitReceive+0x2ea>
 8004fa2:	68fb      	ldr	r3, [r7, #12]
 8004fa4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004fa6:	881a      	ldrh	r2, [r3, #0]
 8004fa8:	68fb      	ldr	r3, [r7, #12]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	60da      	str	r2, [r3, #12]
 8004fae:	68fb      	ldr	r3, [r7, #12]
 8004fb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004fb2:	1c9a      	adds	r2, r3, #2
 8004fb4:	68fb      	ldr	r3, [r7, #12]
 8004fb6:	639a      	str	r2, [r3, #56]	; 0x38
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004fbc:	b29b      	uxth	r3, r3
 8004fbe:	3b02      	subs	r3, #2
 8004fc0:	b29a      	uxth	r2, r3
 8004fc2:	68fb      	ldr	r3, [r7, #12]
 8004fc4:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004fc6:	e012      	b.n	8004fee <HAL_SPI_TransmitReceive+0x310>
 8004fc8:	68fb      	ldr	r3, [r7, #12]
 8004fca:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	330c      	adds	r3, #12
 8004fd2:	7812      	ldrb	r2, [r2, #0]
 8004fd4:	701a      	strb	r2, [r3, #0]
 8004fd6:	68fb      	ldr	r3, [r7, #12]
 8004fd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004fda:	1c5a      	adds	r2, r3, #1
 8004fdc:	68fb      	ldr	r3, [r7, #12]
 8004fde:	639a      	str	r2, [r3, #56]	; 0x38
 8004fe0:	68fb      	ldr	r3, [r7, #12]
 8004fe2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004fe4:	b29b      	uxth	r3, r3
 8004fe6:	3b01      	subs	r3, #1
 8004fe8:	b29a      	uxth	r2, r3
 8004fea:	68fb      	ldr	r3, [r7, #12]
 8004fec:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004fee:	2300      	movs	r3, #0
 8004ff0:	627b      	str	r3, [r7, #36]	; 0x24
 8004ff2:	68fb      	ldr	r3, [r7, #12]
 8004ff4:	681b      	ldr	r3, [r3, #0]
 8004ff6:	689b      	ldr	r3, [r3, #8]
 8004ff8:	f003 0301 	and.w	r3, r3, #1
 8004ffc:	2b01      	cmp	r3, #1
 8004ffe:	d148      	bne.n	8005092 <HAL_SPI_TransmitReceive+0x3b4>
 8005000:	68fb      	ldr	r3, [r7, #12]
 8005002:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005006:	b29b      	uxth	r3, r3
 8005008:	2b00      	cmp	r3, #0
 800500a:	d042      	beq.n	8005092 <HAL_SPI_TransmitReceive+0x3b4>
 800500c:	68fb      	ldr	r3, [r7, #12]
 800500e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005012:	b29b      	uxth	r3, r3
 8005014:	2b01      	cmp	r3, #1
 8005016:	d923      	bls.n	8005060 <HAL_SPI_TransmitReceive+0x382>
 8005018:	68fb      	ldr	r3, [r7, #12]
 800501a:	681b      	ldr	r3, [r3, #0]
 800501c:	68da      	ldr	r2, [r3, #12]
 800501e:	68fb      	ldr	r3, [r7, #12]
 8005020:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005022:	b292      	uxth	r2, r2
 8005024:	801a      	strh	r2, [r3, #0]
 8005026:	68fb      	ldr	r3, [r7, #12]
 8005028:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800502a:	1c9a      	adds	r2, r3, #2
 800502c:	68fb      	ldr	r3, [r7, #12]
 800502e:	641a      	str	r2, [r3, #64]	; 0x40
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005036:	b29b      	uxth	r3, r3
 8005038:	3b02      	subs	r3, #2
 800503a:	b29a      	uxth	r2, r3
 800503c:	68fb      	ldr	r3, [r7, #12]
 800503e:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8005042:	68fb      	ldr	r3, [r7, #12]
 8005044:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005048:	b29b      	uxth	r3, r3
 800504a:	2b01      	cmp	r3, #1
 800504c:	d81f      	bhi.n	800508e <HAL_SPI_TransmitReceive+0x3b0>
 800504e:	68fb      	ldr	r3, [r7, #12]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	685a      	ldr	r2, [r3, #4]
 8005054:	68fb      	ldr	r3, [r7, #12]
 8005056:	681b      	ldr	r3, [r3, #0]
 8005058:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800505c:	605a      	str	r2, [r3, #4]
 800505e:	e016      	b.n	800508e <HAL_SPI_TransmitReceive+0x3b0>
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	f103 020c 	add.w	r2, r3, #12
 8005068:	68fb      	ldr	r3, [r7, #12]
 800506a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800506c:	7812      	ldrb	r2, [r2, #0]
 800506e:	b2d2      	uxtb	r2, r2
 8005070:	701a      	strb	r2, [r3, #0]
 8005072:	68fb      	ldr	r3, [r7, #12]
 8005074:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005076:	1c5a      	adds	r2, r3, #1
 8005078:	68fb      	ldr	r3, [r7, #12]
 800507a:	641a      	str	r2, [r3, #64]	; 0x40
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005082:	b29b      	uxth	r3, r3
 8005084:	3b01      	subs	r3, #1
 8005086:	b29a      	uxth	r2, r3
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 800508e:	2301      	movs	r3, #1
 8005090:	627b      	str	r3, [r7, #36]	; 0x24
 8005092:	f7fd ff21 	bl	8002ed8 <HAL_GetTick>
 8005096:	4602      	mov	r2, r0
 8005098:	69fb      	ldr	r3, [r7, #28]
 800509a:	1ad3      	subs	r3, r2, r3
 800509c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800509e:	429a      	cmp	r2, r3
 80050a0:	d803      	bhi.n	80050aa <HAL_SPI_TransmitReceive+0x3cc>
 80050a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80050a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80050a8:	d102      	bne.n	80050b0 <HAL_SPI_TransmitReceive+0x3d2>
 80050aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	d107      	bne.n	80050c0 <HAL_SPI_TransmitReceive+0x3e2>
 80050b0:	2303      	movs	r3, #3
 80050b2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80050b6:	68fb      	ldr	r3, [r7, #12]
 80050b8:	2201      	movs	r2, #1
 80050ba:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80050be:	e026      	b.n	800510e <HAL_SPI_TransmitReceive+0x430>
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80050c4:	b29b      	uxth	r3, r3
 80050c6:	2b00      	cmp	r3, #0
 80050c8:	f47f af57 	bne.w	8004f7a <HAL_SPI_TransmitReceive+0x29c>
 80050cc:	68fb      	ldr	r3, [r7, #12]
 80050ce:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80050d2:	b29b      	uxth	r3, r3
 80050d4:	2b00      	cmp	r3, #0
 80050d6:	f47f af50 	bne.w	8004f7a <HAL_SPI_TransmitReceive+0x29c>
 80050da:	69fa      	ldr	r2, [r7, #28]
 80050dc:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80050de:	68f8      	ldr	r0, [r7, #12]
 80050e0:	f000 f93e 	bl	8005360 <SPI_EndRxTxTransaction>
 80050e4:	4603      	mov	r3, r0
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d005      	beq.n	80050f6 <HAL_SPI_TransmitReceive+0x418>
 80050ea:	2301      	movs	r3, #1
 80050ec:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80050f0:	68fb      	ldr	r3, [r7, #12]
 80050f2:	2220      	movs	r2, #32
 80050f4:	661a      	str	r2, [r3, #96]	; 0x60
 80050f6:	68fb      	ldr	r3, [r7, #12]
 80050f8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80050fa:	2b00      	cmp	r3, #0
 80050fc:	d003      	beq.n	8005106 <HAL_SPI_TransmitReceive+0x428>
 80050fe:	2301      	movs	r3, #1
 8005100:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005104:	e003      	b.n	800510e <HAL_SPI_TransmitReceive+0x430>
 8005106:	68fb      	ldr	r3, [r7, #12]
 8005108:	2201      	movs	r2, #1
 800510a:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	2200      	movs	r2, #0
 8005112:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8005116:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800511a:	4618      	mov	r0, r3
 800511c:	3728      	adds	r7, #40	; 0x28
 800511e:	46bd      	mov	sp, r7
 8005120:	bd80      	pop	{r7, pc}
	...

08005124 <SPI_WaitFlagStateUntilTimeout>:
 8005124:	b580      	push	{r7, lr}
 8005126:	b088      	sub	sp, #32
 8005128:	af00      	add	r7, sp, #0
 800512a:	60f8      	str	r0, [r7, #12]
 800512c:	60b9      	str	r1, [r7, #8]
 800512e:	603b      	str	r3, [r7, #0]
 8005130:	4613      	mov	r3, r2
 8005132:	71fb      	strb	r3, [r7, #7]
 8005134:	f7fd fed0 	bl	8002ed8 <HAL_GetTick>
 8005138:	4602      	mov	r2, r0
 800513a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800513c:	1a9b      	subs	r3, r3, r2
 800513e:	683a      	ldr	r2, [r7, #0]
 8005140:	4413      	add	r3, r2
 8005142:	61fb      	str	r3, [r7, #28]
 8005144:	f7fd fec8 	bl	8002ed8 <HAL_GetTick>
 8005148:	61b8      	str	r0, [r7, #24]
 800514a:	4b39      	ldr	r3, [pc, #228]	; (8005230 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800514c:	681b      	ldr	r3, [r3, #0]
 800514e:	015b      	lsls	r3, r3, #5
 8005150:	0d1b      	lsrs	r3, r3, #20
 8005152:	69fa      	ldr	r2, [r7, #28]
 8005154:	fb02 f303 	mul.w	r3, r2, r3
 8005158:	617b      	str	r3, [r7, #20]
 800515a:	e054      	b.n	8005206 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800515c:	683b      	ldr	r3, [r7, #0]
 800515e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005162:	d050      	beq.n	8005206 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005164:	f7fd feb8 	bl	8002ed8 <HAL_GetTick>
 8005168:	4602      	mov	r2, r0
 800516a:	69bb      	ldr	r3, [r7, #24]
 800516c:	1ad3      	subs	r3, r2, r3
 800516e:	69fa      	ldr	r2, [r7, #28]
 8005170:	429a      	cmp	r2, r3
 8005172:	d902      	bls.n	800517a <SPI_WaitFlagStateUntilTimeout+0x56>
 8005174:	69fb      	ldr	r3, [r7, #28]
 8005176:	2b00      	cmp	r3, #0
 8005178:	d13d      	bne.n	80051f6 <SPI_WaitFlagStateUntilTimeout+0xd2>
 800517a:	68fb      	ldr	r3, [r7, #12]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	685a      	ldr	r2, [r3, #4]
 8005180:	68fb      	ldr	r3, [r7, #12]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005188:	605a      	str	r2, [r3, #4]
 800518a:	68fb      	ldr	r3, [r7, #12]
 800518c:	685b      	ldr	r3, [r3, #4]
 800518e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005192:	d111      	bne.n	80051b8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	689b      	ldr	r3, [r3, #8]
 8005198:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800519c:	d004      	beq.n	80051a8 <SPI_WaitFlagStateUntilTimeout+0x84>
 800519e:	68fb      	ldr	r3, [r7, #12]
 80051a0:	689b      	ldr	r3, [r3, #8]
 80051a2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80051a6:	d107      	bne.n	80051b8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80051a8:	68fb      	ldr	r3, [r7, #12]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	681a      	ldr	r2, [r3, #0]
 80051ae:	68fb      	ldr	r3, [r7, #12]
 80051b0:	681b      	ldr	r3, [r3, #0]
 80051b2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80051b6:	601a      	str	r2, [r3, #0]
 80051b8:	68fb      	ldr	r3, [r7, #12]
 80051ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80051bc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80051c0:	d10f      	bne.n	80051e2 <SPI_WaitFlagStateUntilTimeout+0xbe>
 80051c2:	68fb      	ldr	r3, [r7, #12]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	681a      	ldr	r2, [r3, #0]
 80051c8:	68fb      	ldr	r3, [r7, #12]
 80051ca:	681b      	ldr	r3, [r3, #0]
 80051cc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80051d0:	601a      	str	r2, [r3, #0]
 80051d2:	68fb      	ldr	r3, [r7, #12]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	681a      	ldr	r2, [r3, #0]
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80051e0:	601a      	str	r2, [r3, #0]
 80051e2:	68fb      	ldr	r3, [r7, #12]
 80051e4:	2201      	movs	r2, #1
 80051e6:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80051ea:	68fb      	ldr	r3, [r7, #12]
 80051ec:	2200      	movs	r2, #0
 80051ee:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80051f2:	2303      	movs	r3, #3
 80051f4:	e017      	b.n	8005226 <SPI_WaitFlagStateUntilTimeout+0x102>
 80051f6:	697b      	ldr	r3, [r7, #20]
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d101      	bne.n	8005200 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80051fc:	2300      	movs	r3, #0
 80051fe:	61fb      	str	r3, [r7, #28]
 8005200:	697b      	ldr	r3, [r7, #20]
 8005202:	3b01      	subs	r3, #1
 8005204:	617b      	str	r3, [r7, #20]
 8005206:	68fb      	ldr	r3, [r7, #12]
 8005208:	681b      	ldr	r3, [r3, #0]
 800520a:	689a      	ldr	r2, [r3, #8]
 800520c:	68bb      	ldr	r3, [r7, #8]
 800520e:	4013      	ands	r3, r2
 8005210:	68ba      	ldr	r2, [r7, #8]
 8005212:	429a      	cmp	r2, r3
 8005214:	bf0c      	ite	eq
 8005216:	2301      	moveq	r3, #1
 8005218:	2300      	movne	r3, #0
 800521a:	b2db      	uxtb	r3, r3
 800521c:	461a      	mov	r2, r3
 800521e:	79fb      	ldrb	r3, [r7, #7]
 8005220:	429a      	cmp	r2, r3
 8005222:	d19b      	bne.n	800515c <SPI_WaitFlagStateUntilTimeout+0x38>
 8005224:	2300      	movs	r3, #0
 8005226:	4618      	mov	r0, r3
 8005228:	3720      	adds	r7, #32
 800522a:	46bd      	mov	sp, r7
 800522c:	bd80      	pop	{r7, pc}
 800522e:	bf00      	nop
 8005230:	20000000 	.word	0x20000000

08005234 <SPI_WaitFifoStateUntilTimeout>:
 8005234:	b580      	push	{r7, lr}
 8005236:	b08a      	sub	sp, #40	; 0x28
 8005238:	af00      	add	r7, sp, #0
 800523a:	60f8      	str	r0, [r7, #12]
 800523c:	60b9      	str	r1, [r7, #8]
 800523e:	607a      	str	r2, [r7, #4]
 8005240:	603b      	str	r3, [r7, #0]
 8005242:	2300      	movs	r3, #0
 8005244:	75fb      	strb	r3, [r7, #23]
 8005246:	f7fd fe47 	bl	8002ed8 <HAL_GetTick>
 800524a:	4602      	mov	r2, r0
 800524c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800524e:	1a9b      	subs	r3, r3, r2
 8005250:	683a      	ldr	r2, [r7, #0]
 8005252:	4413      	add	r3, r2
 8005254:	627b      	str	r3, [r7, #36]	; 0x24
 8005256:	f7fd fe3f 	bl	8002ed8 <HAL_GetTick>
 800525a:	6238      	str	r0, [r7, #32]
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	330c      	adds	r3, #12
 8005262:	61fb      	str	r3, [r7, #28]
 8005264:	4b3d      	ldr	r3, [pc, #244]	; (800535c <SPI_WaitFifoStateUntilTimeout+0x128>)
 8005266:	681a      	ldr	r2, [r3, #0]
 8005268:	4613      	mov	r3, r2
 800526a:	009b      	lsls	r3, r3, #2
 800526c:	4413      	add	r3, r2
 800526e:	00da      	lsls	r2, r3, #3
 8005270:	1ad3      	subs	r3, r2, r3
 8005272:	0d1b      	lsrs	r3, r3, #20
 8005274:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005276:	fb02 f303 	mul.w	r3, r2, r3
 800527a:	61bb      	str	r3, [r7, #24]
 800527c:	e060      	b.n	8005340 <SPI_WaitFifoStateUntilTimeout+0x10c>
 800527e:	68bb      	ldr	r3, [r7, #8]
 8005280:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8005284:	d107      	bne.n	8005296 <SPI_WaitFifoStateUntilTimeout+0x62>
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	2b00      	cmp	r3, #0
 800528a:	d104      	bne.n	8005296 <SPI_WaitFifoStateUntilTimeout+0x62>
 800528c:	69fb      	ldr	r3, [r7, #28]
 800528e:	781b      	ldrb	r3, [r3, #0]
 8005290:	b2db      	uxtb	r3, r3
 8005292:	75fb      	strb	r3, [r7, #23]
 8005294:	7dfb      	ldrb	r3, [r7, #23]
 8005296:	683b      	ldr	r3, [r7, #0]
 8005298:	f1b3 3fff 	cmp.w	r3, #4294967295
 800529c:	d050      	beq.n	8005340 <SPI_WaitFifoStateUntilTimeout+0x10c>
 800529e:	f7fd fe1b 	bl	8002ed8 <HAL_GetTick>
 80052a2:	4602      	mov	r2, r0
 80052a4:	6a3b      	ldr	r3, [r7, #32]
 80052a6:	1ad3      	subs	r3, r2, r3
 80052a8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80052aa:	429a      	cmp	r2, r3
 80052ac:	d902      	bls.n	80052b4 <SPI_WaitFifoStateUntilTimeout+0x80>
 80052ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052b0:	2b00      	cmp	r3, #0
 80052b2:	d13d      	bne.n	8005330 <SPI_WaitFifoStateUntilTimeout+0xfc>
 80052b4:	68fb      	ldr	r3, [r7, #12]
 80052b6:	681b      	ldr	r3, [r3, #0]
 80052b8:	685a      	ldr	r2, [r3, #4]
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80052c2:	605a      	str	r2, [r3, #4]
 80052c4:	68fb      	ldr	r3, [r7, #12]
 80052c6:	685b      	ldr	r3, [r3, #4]
 80052c8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80052cc:	d111      	bne.n	80052f2 <SPI_WaitFifoStateUntilTimeout+0xbe>
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	689b      	ldr	r3, [r3, #8]
 80052d2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80052d6:	d004      	beq.n	80052e2 <SPI_WaitFifoStateUntilTimeout+0xae>
 80052d8:	68fb      	ldr	r3, [r7, #12]
 80052da:	689b      	ldr	r3, [r3, #8]
 80052dc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80052e0:	d107      	bne.n	80052f2 <SPI_WaitFifoStateUntilTimeout+0xbe>
 80052e2:	68fb      	ldr	r3, [r7, #12]
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	681a      	ldr	r2, [r3, #0]
 80052e8:	68fb      	ldr	r3, [r7, #12]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80052f0:	601a      	str	r2, [r3, #0]
 80052f2:	68fb      	ldr	r3, [r7, #12]
 80052f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80052f6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80052fa:	d10f      	bne.n	800531c <SPI_WaitFifoStateUntilTimeout+0xe8>
 80052fc:	68fb      	ldr	r3, [r7, #12]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	681a      	ldr	r2, [r3, #0]
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	681b      	ldr	r3, [r3, #0]
 8005306:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800530a:	601a      	str	r2, [r3, #0]
 800530c:	68fb      	ldr	r3, [r7, #12]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	681a      	ldr	r2, [r3, #0]
 8005312:	68fb      	ldr	r3, [r7, #12]
 8005314:	681b      	ldr	r3, [r3, #0]
 8005316:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800531a:	601a      	str	r2, [r3, #0]
 800531c:	68fb      	ldr	r3, [r7, #12]
 800531e:	2201      	movs	r2, #1
 8005320:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8005324:	68fb      	ldr	r3, [r7, #12]
 8005326:	2200      	movs	r2, #0
 8005328:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 800532c:	2303      	movs	r3, #3
 800532e:	e010      	b.n	8005352 <SPI_WaitFifoStateUntilTimeout+0x11e>
 8005330:	69bb      	ldr	r3, [r7, #24]
 8005332:	2b00      	cmp	r3, #0
 8005334:	d101      	bne.n	800533a <SPI_WaitFifoStateUntilTimeout+0x106>
 8005336:	2300      	movs	r3, #0
 8005338:	627b      	str	r3, [r7, #36]	; 0x24
 800533a:	69bb      	ldr	r3, [r7, #24]
 800533c:	3b01      	subs	r3, #1
 800533e:	61bb      	str	r3, [r7, #24]
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	689a      	ldr	r2, [r3, #8]
 8005346:	68bb      	ldr	r3, [r7, #8]
 8005348:	4013      	ands	r3, r2
 800534a:	687a      	ldr	r2, [r7, #4]
 800534c:	429a      	cmp	r2, r3
 800534e:	d196      	bne.n	800527e <SPI_WaitFifoStateUntilTimeout+0x4a>
 8005350:	2300      	movs	r3, #0
 8005352:	4618      	mov	r0, r3
 8005354:	3728      	adds	r7, #40	; 0x28
 8005356:	46bd      	mov	sp, r7
 8005358:	bd80      	pop	{r7, pc}
 800535a:	bf00      	nop
 800535c:	20000000 	.word	0x20000000

08005360 <SPI_EndRxTxTransaction>:
 8005360:	b580      	push	{r7, lr}
 8005362:	b086      	sub	sp, #24
 8005364:	af02      	add	r7, sp, #8
 8005366:	60f8      	str	r0, [r7, #12]
 8005368:	60b9      	str	r1, [r7, #8]
 800536a:	607a      	str	r2, [r7, #4]
 800536c:	687b      	ldr	r3, [r7, #4]
 800536e:	9300      	str	r3, [sp, #0]
 8005370:	68bb      	ldr	r3, [r7, #8]
 8005372:	2200      	movs	r2, #0
 8005374:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8005378:	68f8      	ldr	r0, [r7, #12]
 800537a:	f7ff ff5b 	bl	8005234 <SPI_WaitFifoStateUntilTimeout>
 800537e:	4603      	mov	r3, r0
 8005380:	2b00      	cmp	r3, #0
 8005382:	d007      	beq.n	8005394 <SPI_EndRxTxTransaction+0x34>
 8005384:	68fb      	ldr	r3, [r7, #12]
 8005386:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005388:	f043 0220 	orr.w	r2, r3, #32
 800538c:	68fb      	ldr	r3, [r7, #12]
 800538e:	661a      	str	r2, [r3, #96]	; 0x60
 8005390:	2303      	movs	r3, #3
 8005392:	e027      	b.n	80053e4 <SPI_EndRxTxTransaction+0x84>
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	9300      	str	r3, [sp, #0]
 8005398:	68bb      	ldr	r3, [r7, #8]
 800539a:	2200      	movs	r2, #0
 800539c:	2180      	movs	r1, #128	; 0x80
 800539e:	68f8      	ldr	r0, [r7, #12]
 80053a0:	f7ff fec0 	bl	8005124 <SPI_WaitFlagStateUntilTimeout>
 80053a4:	4603      	mov	r3, r0
 80053a6:	2b00      	cmp	r3, #0
 80053a8:	d007      	beq.n	80053ba <SPI_EndRxTxTransaction+0x5a>
 80053aa:	68fb      	ldr	r3, [r7, #12]
 80053ac:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80053ae:	f043 0220 	orr.w	r2, r3, #32
 80053b2:	68fb      	ldr	r3, [r7, #12]
 80053b4:	661a      	str	r2, [r3, #96]	; 0x60
 80053b6:	2303      	movs	r3, #3
 80053b8:	e014      	b.n	80053e4 <SPI_EndRxTxTransaction+0x84>
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	9300      	str	r3, [sp, #0]
 80053be:	68bb      	ldr	r3, [r7, #8]
 80053c0:	2200      	movs	r2, #0
 80053c2:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80053c6:	68f8      	ldr	r0, [r7, #12]
 80053c8:	f7ff ff34 	bl	8005234 <SPI_WaitFifoStateUntilTimeout>
 80053cc:	4603      	mov	r3, r0
 80053ce:	2b00      	cmp	r3, #0
 80053d0:	d007      	beq.n	80053e2 <SPI_EndRxTxTransaction+0x82>
 80053d2:	68fb      	ldr	r3, [r7, #12]
 80053d4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80053d6:	f043 0220 	orr.w	r2, r3, #32
 80053da:	68fb      	ldr	r3, [r7, #12]
 80053dc:	661a      	str	r2, [r3, #96]	; 0x60
 80053de:	2303      	movs	r3, #3
 80053e0:	e000      	b.n	80053e4 <SPI_EndRxTxTransaction+0x84>
 80053e2:	2300      	movs	r3, #0
 80053e4:	4618      	mov	r0, r3
 80053e6:	3710      	adds	r7, #16
 80053e8:	46bd      	mov	sp, r7
 80053ea:	bd80      	pop	{r7, pc}

080053ec <HAL_TIM_Base_Init>:
 80053ec:	b580      	push	{r7, lr}
 80053ee:	b082      	sub	sp, #8
 80053f0:	af00      	add	r7, sp, #0
 80053f2:	6078      	str	r0, [r7, #4]
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	d101      	bne.n	80053fe <HAL_TIM_Base_Init+0x12>
 80053fa:	2301      	movs	r3, #1
 80053fc:	e049      	b.n	8005492 <HAL_TIM_Base_Init+0xa6>
 80053fe:	687b      	ldr	r3, [r7, #4]
 8005400:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005404:	b2db      	uxtb	r3, r3
 8005406:	2b00      	cmp	r3, #0
 8005408:	d106      	bne.n	8005418 <HAL_TIM_Base_Init+0x2c>
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	2200      	movs	r2, #0
 800540e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005412:	6878      	ldr	r0, [r7, #4]
 8005414:	f7fd fb18 	bl	8002a48 <HAL_TIM_Base_MspInit>
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	2202      	movs	r2, #2
 800541c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	681a      	ldr	r2, [r3, #0]
 8005424:	687b      	ldr	r3, [r7, #4]
 8005426:	3304      	adds	r3, #4
 8005428:	4619      	mov	r1, r3
 800542a:	4610      	mov	r0, r2
 800542c:	f000 faa4 	bl	8005978 <TIM_Base_SetConfig>
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	2201      	movs	r2, #1
 8005434:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8005438:	687b      	ldr	r3, [r7, #4]
 800543a:	2201      	movs	r2, #1
 800543c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005440:	687b      	ldr	r3, [r7, #4]
 8005442:	2201      	movs	r2, #1
 8005444:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	2201      	movs	r2, #1
 800544c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	2201      	movs	r2, #1
 8005454:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	2201      	movs	r2, #1
 800545c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	2201      	movs	r2, #1
 8005464:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	2201      	movs	r2, #1
 800546c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	2201      	movs	r2, #1
 8005474:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005478:	687b      	ldr	r3, [r7, #4]
 800547a:	2201      	movs	r2, #1
 800547c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	2201      	movs	r2, #1
 8005484:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	2201      	movs	r2, #1
 800548c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005490:	2300      	movs	r3, #0
 8005492:	4618      	mov	r0, r3
 8005494:	3708      	adds	r7, #8
 8005496:	46bd      	mov	sp, r7
 8005498:	bd80      	pop	{r7, pc}
	...

0800549c <HAL_TIM_Base_Start_IT>:
 800549c:	b480      	push	{r7}
 800549e:	b085      	sub	sp, #20
 80054a0:	af00      	add	r7, sp, #0
 80054a2:	6078      	str	r0, [r7, #4]
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80054aa:	b2db      	uxtb	r3, r3
 80054ac:	2b01      	cmp	r3, #1
 80054ae:	d001      	beq.n	80054b4 <HAL_TIM_Base_Start_IT+0x18>
 80054b0:	2301      	movs	r3, #1
 80054b2:	e04f      	b.n	8005554 <HAL_TIM_Base_Start_IT+0xb8>
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	2202      	movs	r2, #2
 80054b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	68da      	ldr	r2, [r3, #12]
 80054c2:	687b      	ldr	r3, [r7, #4]
 80054c4:	681b      	ldr	r3, [r3, #0]
 80054c6:	f042 0201 	orr.w	r2, r2, #1
 80054ca:	60da      	str	r2, [r3, #12]
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	4a23      	ldr	r2, [pc, #140]	; (8005560 <HAL_TIM_Base_Start_IT+0xc4>)
 80054d2:	4293      	cmp	r3, r2
 80054d4:	d01d      	beq.n	8005512 <HAL_TIM_Base_Start_IT+0x76>
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80054de:	d018      	beq.n	8005512 <HAL_TIM_Base_Start_IT+0x76>
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	4a1f      	ldr	r2, [pc, #124]	; (8005564 <HAL_TIM_Base_Start_IT+0xc8>)
 80054e6:	4293      	cmp	r3, r2
 80054e8:	d013      	beq.n	8005512 <HAL_TIM_Base_Start_IT+0x76>
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	4a1e      	ldr	r2, [pc, #120]	; (8005568 <HAL_TIM_Base_Start_IT+0xcc>)
 80054f0:	4293      	cmp	r3, r2
 80054f2:	d00e      	beq.n	8005512 <HAL_TIM_Base_Start_IT+0x76>
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	681b      	ldr	r3, [r3, #0]
 80054f8:	4a1c      	ldr	r2, [pc, #112]	; (800556c <HAL_TIM_Base_Start_IT+0xd0>)
 80054fa:	4293      	cmp	r3, r2
 80054fc:	d009      	beq.n	8005512 <HAL_TIM_Base_Start_IT+0x76>
 80054fe:	687b      	ldr	r3, [r7, #4]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	4a1b      	ldr	r2, [pc, #108]	; (8005570 <HAL_TIM_Base_Start_IT+0xd4>)
 8005504:	4293      	cmp	r3, r2
 8005506:	d004      	beq.n	8005512 <HAL_TIM_Base_Start_IT+0x76>
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	4a19      	ldr	r2, [pc, #100]	; (8005574 <HAL_TIM_Base_Start_IT+0xd8>)
 800550e:	4293      	cmp	r3, r2
 8005510:	d115      	bne.n	800553e <HAL_TIM_Base_Start_IT+0xa2>
 8005512:	687b      	ldr	r3, [r7, #4]
 8005514:	681b      	ldr	r3, [r3, #0]
 8005516:	689a      	ldr	r2, [r3, #8]
 8005518:	4b17      	ldr	r3, [pc, #92]	; (8005578 <HAL_TIM_Base_Start_IT+0xdc>)
 800551a:	4013      	ands	r3, r2
 800551c:	60fb      	str	r3, [r7, #12]
 800551e:	68fb      	ldr	r3, [r7, #12]
 8005520:	2b06      	cmp	r3, #6
 8005522:	d015      	beq.n	8005550 <HAL_TIM_Base_Start_IT+0xb4>
 8005524:	68fb      	ldr	r3, [r7, #12]
 8005526:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800552a:	d011      	beq.n	8005550 <HAL_TIM_Base_Start_IT+0xb4>
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	681b      	ldr	r3, [r3, #0]
 8005530:	681a      	ldr	r2, [r3, #0]
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	f042 0201 	orr.w	r2, r2, #1
 800553a:	601a      	str	r2, [r3, #0]
 800553c:	e008      	b.n	8005550 <HAL_TIM_Base_Start_IT+0xb4>
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	681b      	ldr	r3, [r3, #0]
 8005542:	681a      	ldr	r2, [r3, #0]
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	f042 0201 	orr.w	r2, r2, #1
 800554c:	601a      	str	r2, [r3, #0]
 800554e:	e000      	b.n	8005552 <HAL_TIM_Base_Start_IT+0xb6>
 8005550:	bf00      	nop
 8005552:	2300      	movs	r3, #0
 8005554:	4618      	mov	r0, r3
 8005556:	3714      	adds	r7, #20
 8005558:	46bd      	mov	sp, r7
 800555a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800555e:	4770      	bx	lr
 8005560:	40012c00 	.word	0x40012c00
 8005564:	40000400 	.word	0x40000400
 8005568:	40000800 	.word	0x40000800
 800556c:	40000c00 	.word	0x40000c00
 8005570:	40013400 	.word	0x40013400
 8005574:	40014000 	.word	0x40014000
 8005578:	00010007 	.word	0x00010007

0800557c <HAL_TIM_IRQHandler>:
 800557c:	b580      	push	{r7, lr}
 800557e:	b084      	sub	sp, #16
 8005580:	af00      	add	r7, sp, #0
 8005582:	6078      	str	r0, [r7, #4]
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	681b      	ldr	r3, [r3, #0]
 8005588:	68db      	ldr	r3, [r3, #12]
 800558a:	60fb      	str	r3, [r7, #12]
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	681b      	ldr	r3, [r3, #0]
 8005590:	691b      	ldr	r3, [r3, #16]
 8005592:	60bb      	str	r3, [r7, #8]
 8005594:	68bb      	ldr	r3, [r7, #8]
 8005596:	f003 0302 	and.w	r3, r3, #2
 800559a:	2b00      	cmp	r3, #0
 800559c:	d020      	beq.n	80055e0 <HAL_TIM_IRQHandler+0x64>
 800559e:	68fb      	ldr	r3, [r7, #12]
 80055a0:	f003 0302 	and.w	r3, r3, #2
 80055a4:	2b00      	cmp	r3, #0
 80055a6:	d01b      	beq.n	80055e0 <HAL_TIM_IRQHandler+0x64>
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	f06f 0202 	mvn.w	r2, #2
 80055b0:	611a      	str	r2, [r3, #16]
 80055b2:	687b      	ldr	r3, [r7, #4]
 80055b4:	2201      	movs	r2, #1
 80055b6:	771a      	strb	r2, [r3, #28]
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	681b      	ldr	r3, [r3, #0]
 80055bc:	699b      	ldr	r3, [r3, #24]
 80055be:	f003 0303 	and.w	r3, r3, #3
 80055c2:	2b00      	cmp	r3, #0
 80055c4:	d003      	beq.n	80055ce <HAL_TIM_IRQHandler+0x52>
 80055c6:	6878      	ldr	r0, [r7, #4]
 80055c8:	f000 f9b7 	bl	800593a <HAL_TIM_IC_CaptureCallback>
 80055cc:	e005      	b.n	80055da <HAL_TIM_IRQHandler+0x5e>
 80055ce:	6878      	ldr	r0, [r7, #4]
 80055d0:	f000 f9a9 	bl	8005926 <HAL_TIM_OC_DelayElapsedCallback>
 80055d4:	6878      	ldr	r0, [r7, #4]
 80055d6:	f000 f9ba 	bl	800594e <HAL_TIM_PWM_PulseFinishedCallback>
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	2200      	movs	r2, #0
 80055de:	771a      	strb	r2, [r3, #28]
 80055e0:	68bb      	ldr	r3, [r7, #8]
 80055e2:	f003 0304 	and.w	r3, r3, #4
 80055e6:	2b00      	cmp	r3, #0
 80055e8:	d020      	beq.n	800562c <HAL_TIM_IRQHandler+0xb0>
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	f003 0304 	and.w	r3, r3, #4
 80055f0:	2b00      	cmp	r3, #0
 80055f2:	d01b      	beq.n	800562c <HAL_TIM_IRQHandler+0xb0>
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	681b      	ldr	r3, [r3, #0]
 80055f8:	f06f 0204 	mvn.w	r2, #4
 80055fc:	611a      	str	r2, [r3, #16]
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	2202      	movs	r2, #2
 8005602:	771a      	strb	r2, [r3, #28]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	699b      	ldr	r3, [r3, #24]
 800560a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800560e:	2b00      	cmp	r3, #0
 8005610:	d003      	beq.n	800561a <HAL_TIM_IRQHandler+0x9e>
 8005612:	6878      	ldr	r0, [r7, #4]
 8005614:	f000 f991 	bl	800593a <HAL_TIM_IC_CaptureCallback>
 8005618:	e005      	b.n	8005626 <HAL_TIM_IRQHandler+0xaa>
 800561a:	6878      	ldr	r0, [r7, #4]
 800561c:	f000 f983 	bl	8005926 <HAL_TIM_OC_DelayElapsedCallback>
 8005620:	6878      	ldr	r0, [r7, #4]
 8005622:	f000 f994 	bl	800594e <HAL_TIM_PWM_PulseFinishedCallback>
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	2200      	movs	r2, #0
 800562a:	771a      	strb	r2, [r3, #28]
 800562c:	68bb      	ldr	r3, [r7, #8]
 800562e:	f003 0308 	and.w	r3, r3, #8
 8005632:	2b00      	cmp	r3, #0
 8005634:	d020      	beq.n	8005678 <HAL_TIM_IRQHandler+0xfc>
 8005636:	68fb      	ldr	r3, [r7, #12]
 8005638:	f003 0308 	and.w	r3, r3, #8
 800563c:	2b00      	cmp	r3, #0
 800563e:	d01b      	beq.n	8005678 <HAL_TIM_IRQHandler+0xfc>
 8005640:	687b      	ldr	r3, [r7, #4]
 8005642:	681b      	ldr	r3, [r3, #0]
 8005644:	f06f 0208 	mvn.w	r2, #8
 8005648:	611a      	str	r2, [r3, #16]
 800564a:	687b      	ldr	r3, [r7, #4]
 800564c:	2204      	movs	r2, #4
 800564e:	771a      	strb	r2, [r3, #28]
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	69db      	ldr	r3, [r3, #28]
 8005656:	f003 0303 	and.w	r3, r3, #3
 800565a:	2b00      	cmp	r3, #0
 800565c:	d003      	beq.n	8005666 <HAL_TIM_IRQHandler+0xea>
 800565e:	6878      	ldr	r0, [r7, #4]
 8005660:	f000 f96b 	bl	800593a <HAL_TIM_IC_CaptureCallback>
 8005664:	e005      	b.n	8005672 <HAL_TIM_IRQHandler+0xf6>
 8005666:	6878      	ldr	r0, [r7, #4]
 8005668:	f000 f95d 	bl	8005926 <HAL_TIM_OC_DelayElapsedCallback>
 800566c:	6878      	ldr	r0, [r7, #4]
 800566e:	f000 f96e 	bl	800594e <HAL_TIM_PWM_PulseFinishedCallback>
 8005672:	687b      	ldr	r3, [r7, #4]
 8005674:	2200      	movs	r2, #0
 8005676:	771a      	strb	r2, [r3, #28]
 8005678:	68bb      	ldr	r3, [r7, #8]
 800567a:	f003 0310 	and.w	r3, r3, #16
 800567e:	2b00      	cmp	r3, #0
 8005680:	d020      	beq.n	80056c4 <HAL_TIM_IRQHandler+0x148>
 8005682:	68fb      	ldr	r3, [r7, #12]
 8005684:	f003 0310 	and.w	r3, r3, #16
 8005688:	2b00      	cmp	r3, #0
 800568a:	d01b      	beq.n	80056c4 <HAL_TIM_IRQHandler+0x148>
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	681b      	ldr	r3, [r3, #0]
 8005690:	f06f 0210 	mvn.w	r2, #16
 8005694:	611a      	str	r2, [r3, #16]
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	2208      	movs	r2, #8
 800569a:	771a      	strb	r2, [r3, #28]
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	69db      	ldr	r3, [r3, #28]
 80056a2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80056a6:	2b00      	cmp	r3, #0
 80056a8:	d003      	beq.n	80056b2 <HAL_TIM_IRQHandler+0x136>
 80056aa:	6878      	ldr	r0, [r7, #4]
 80056ac:	f000 f945 	bl	800593a <HAL_TIM_IC_CaptureCallback>
 80056b0:	e005      	b.n	80056be <HAL_TIM_IRQHandler+0x142>
 80056b2:	6878      	ldr	r0, [r7, #4]
 80056b4:	f000 f937 	bl	8005926 <HAL_TIM_OC_DelayElapsedCallback>
 80056b8:	6878      	ldr	r0, [r7, #4]
 80056ba:	f000 f948 	bl	800594e <HAL_TIM_PWM_PulseFinishedCallback>
 80056be:	687b      	ldr	r3, [r7, #4]
 80056c0:	2200      	movs	r2, #0
 80056c2:	771a      	strb	r2, [r3, #28]
 80056c4:	68bb      	ldr	r3, [r7, #8]
 80056c6:	f003 0301 	and.w	r3, r3, #1
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d00c      	beq.n	80056e8 <HAL_TIM_IRQHandler+0x16c>
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	f003 0301 	and.w	r3, r3, #1
 80056d4:	2b00      	cmp	r3, #0
 80056d6:	d007      	beq.n	80056e8 <HAL_TIM_IRQHandler+0x16c>
 80056d8:	687b      	ldr	r3, [r7, #4]
 80056da:	681b      	ldr	r3, [r3, #0]
 80056dc:	f06f 0201 	mvn.w	r2, #1
 80056e0:	611a      	str	r2, [r3, #16]
 80056e2:	6878      	ldr	r0, [r7, #4]
 80056e4:	f000 f915 	bl	8005912 <HAL_TIM_PeriodElapsedCallback>
 80056e8:	68bb      	ldr	r3, [r7, #8]
 80056ea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80056ee:	2b00      	cmp	r3, #0
 80056f0:	d00c      	beq.n	800570c <HAL_TIM_IRQHandler+0x190>
 80056f2:	68fb      	ldr	r3, [r7, #12]
 80056f4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80056f8:	2b00      	cmp	r3, #0
 80056fa:	d007      	beq.n	800570c <HAL_TIM_IRQHandler+0x190>
 80056fc:	687b      	ldr	r3, [r7, #4]
 80056fe:	681b      	ldr	r3, [r3, #0]
 8005700:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8005704:	611a      	str	r2, [r3, #16]
 8005706:	6878      	ldr	r0, [r7, #4]
 8005708:	f000 fafc 	bl	8005d04 <HAL_TIMEx_BreakCallback>
 800570c:	68bb      	ldr	r3, [r7, #8]
 800570e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005712:	2b00      	cmp	r3, #0
 8005714:	d00c      	beq.n	8005730 <HAL_TIM_IRQHandler+0x1b4>
 8005716:	68fb      	ldr	r3, [r7, #12]
 8005718:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800571c:	2b00      	cmp	r3, #0
 800571e:	d007      	beq.n	8005730 <HAL_TIM_IRQHandler+0x1b4>
 8005720:	687b      	ldr	r3, [r7, #4]
 8005722:	681b      	ldr	r3, [r3, #0]
 8005724:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8005728:	611a      	str	r2, [r3, #16]
 800572a:	6878      	ldr	r0, [r7, #4]
 800572c:	f000 faf4 	bl	8005d18 <HAL_TIMEx_Break2Callback>
 8005730:	68bb      	ldr	r3, [r7, #8]
 8005732:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005736:	2b00      	cmp	r3, #0
 8005738:	d00c      	beq.n	8005754 <HAL_TIM_IRQHandler+0x1d8>
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005740:	2b00      	cmp	r3, #0
 8005742:	d007      	beq.n	8005754 <HAL_TIM_IRQHandler+0x1d8>
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	681b      	ldr	r3, [r3, #0]
 8005748:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800574c:	611a      	str	r2, [r3, #16]
 800574e:	6878      	ldr	r0, [r7, #4]
 8005750:	f000 f907 	bl	8005962 <HAL_TIM_TriggerCallback>
 8005754:	68bb      	ldr	r3, [r7, #8]
 8005756:	f003 0320 	and.w	r3, r3, #32
 800575a:	2b00      	cmp	r3, #0
 800575c:	d00c      	beq.n	8005778 <HAL_TIM_IRQHandler+0x1fc>
 800575e:	68fb      	ldr	r3, [r7, #12]
 8005760:	f003 0320 	and.w	r3, r3, #32
 8005764:	2b00      	cmp	r3, #0
 8005766:	d007      	beq.n	8005778 <HAL_TIM_IRQHandler+0x1fc>
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	681b      	ldr	r3, [r3, #0]
 800576c:	f06f 0220 	mvn.w	r2, #32
 8005770:	611a      	str	r2, [r3, #16]
 8005772:	6878      	ldr	r0, [r7, #4]
 8005774:	f000 fabc 	bl	8005cf0 <HAL_TIMEx_CommutCallback>
 8005778:	bf00      	nop
 800577a:	3710      	adds	r7, #16
 800577c:	46bd      	mov	sp, r7
 800577e:	bd80      	pop	{r7, pc}

08005780 <HAL_TIM_ConfigClockSource>:
 8005780:	b580      	push	{r7, lr}
 8005782:	b084      	sub	sp, #16
 8005784:	af00      	add	r7, sp, #0
 8005786:	6078      	str	r0, [r7, #4]
 8005788:	6039      	str	r1, [r7, #0]
 800578a:	2300      	movs	r3, #0
 800578c:	73fb      	strb	r3, [r7, #15]
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005794:	2b01      	cmp	r3, #1
 8005796:	d101      	bne.n	800579c <HAL_TIM_ConfigClockSource+0x1c>
 8005798:	2302      	movs	r3, #2
 800579a:	e0b6      	b.n	800590a <HAL_TIM_ConfigClockSource+0x18a>
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	2201      	movs	r2, #1
 80057a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	2202      	movs	r2, #2
 80057a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	681b      	ldr	r3, [r3, #0]
 80057b0:	689b      	ldr	r3, [r3, #8]
 80057b2:	60bb      	str	r3, [r7, #8]
 80057b4:	68bb      	ldr	r3, [r7, #8]
 80057b6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80057ba:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80057be:	60bb      	str	r3, [r7, #8]
 80057c0:	68bb      	ldr	r3, [r7, #8]
 80057c2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80057c6:	60bb      	str	r3, [r7, #8]
 80057c8:	687b      	ldr	r3, [r7, #4]
 80057ca:	681b      	ldr	r3, [r3, #0]
 80057cc:	68ba      	ldr	r2, [r7, #8]
 80057ce:	609a      	str	r2, [r3, #8]
 80057d0:	683b      	ldr	r3, [r7, #0]
 80057d2:	681b      	ldr	r3, [r3, #0]
 80057d4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80057d8:	d03e      	beq.n	8005858 <HAL_TIM_ConfigClockSource+0xd8>
 80057da:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80057de:	f200 8087 	bhi.w	80058f0 <HAL_TIM_ConfigClockSource+0x170>
 80057e2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80057e6:	f000 8086 	beq.w	80058f6 <HAL_TIM_ConfigClockSource+0x176>
 80057ea:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80057ee:	d87f      	bhi.n	80058f0 <HAL_TIM_ConfigClockSource+0x170>
 80057f0:	2b70      	cmp	r3, #112	; 0x70
 80057f2:	d01a      	beq.n	800582a <HAL_TIM_ConfigClockSource+0xaa>
 80057f4:	2b70      	cmp	r3, #112	; 0x70
 80057f6:	d87b      	bhi.n	80058f0 <HAL_TIM_ConfigClockSource+0x170>
 80057f8:	2b60      	cmp	r3, #96	; 0x60
 80057fa:	d050      	beq.n	800589e <HAL_TIM_ConfigClockSource+0x11e>
 80057fc:	2b60      	cmp	r3, #96	; 0x60
 80057fe:	d877      	bhi.n	80058f0 <HAL_TIM_ConfigClockSource+0x170>
 8005800:	2b50      	cmp	r3, #80	; 0x50
 8005802:	d03c      	beq.n	800587e <HAL_TIM_ConfigClockSource+0xfe>
 8005804:	2b50      	cmp	r3, #80	; 0x50
 8005806:	d873      	bhi.n	80058f0 <HAL_TIM_ConfigClockSource+0x170>
 8005808:	2b40      	cmp	r3, #64	; 0x40
 800580a:	d058      	beq.n	80058be <HAL_TIM_ConfigClockSource+0x13e>
 800580c:	2b40      	cmp	r3, #64	; 0x40
 800580e:	d86f      	bhi.n	80058f0 <HAL_TIM_ConfigClockSource+0x170>
 8005810:	2b30      	cmp	r3, #48	; 0x30
 8005812:	d064      	beq.n	80058de <HAL_TIM_ConfigClockSource+0x15e>
 8005814:	2b30      	cmp	r3, #48	; 0x30
 8005816:	d86b      	bhi.n	80058f0 <HAL_TIM_ConfigClockSource+0x170>
 8005818:	2b20      	cmp	r3, #32
 800581a:	d060      	beq.n	80058de <HAL_TIM_ConfigClockSource+0x15e>
 800581c:	2b20      	cmp	r3, #32
 800581e:	d867      	bhi.n	80058f0 <HAL_TIM_ConfigClockSource+0x170>
 8005820:	2b00      	cmp	r3, #0
 8005822:	d05c      	beq.n	80058de <HAL_TIM_ConfigClockSource+0x15e>
 8005824:	2b10      	cmp	r3, #16
 8005826:	d05a      	beq.n	80058de <HAL_TIM_ConfigClockSource+0x15e>
 8005828:	e062      	b.n	80058f0 <HAL_TIM_ConfigClockSource+0x170>
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	6818      	ldr	r0, [r3, #0]
 800582e:	683b      	ldr	r3, [r7, #0]
 8005830:	6899      	ldr	r1, [r3, #8]
 8005832:	683b      	ldr	r3, [r7, #0]
 8005834:	685a      	ldr	r2, [r3, #4]
 8005836:	683b      	ldr	r3, [r7, #0]
 8005838:	68db      	ldr	r3, [r3, #12]
 800583a:	f000 f9b1 	bl	8005ba0 <TIM_ETR_SetConfig>
 800583e:	687b      	ldr	r3, [r7, #4]
 8005840:	681b      	ldr	r3, [r3, #0]
 8005842:	689b      	ldr	r3, [r3, #8]
 8005844:	60bb      	str	r3, [r7, #8]
 8005846:	68bb      	ldr	r3, [r7, #8]
 8005848:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800584c:	60bb      	str	r3, [r7, #8]
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	68ba      	ldr	r2, [r7, #8]
 8005854:	609a      	str	r2, [r3, #8]
 8005856:	e04f      	b.n	80058f8 <HAL_TIM_ConfigClockSource+0x178>
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	6818      	ldr	r0, [r3, #0]
 800585c:	683b      	ldr	r3, [r7, #0]
 800585e:	6899      	ldr	r1, [r3, #8]
 8005860:	683b      	ldr	r3, [r7, #0]
 8005862:	685a      	ldr	r2, [r3, #4]
 8005864:	683b      	ldr	r3, [r7, #0]
 8005866:	68db      	ldr	r3, [r3, #12]
 8005868:	f000 f99a 	bl	8005ba0 <TIM_ETR_SetConfig>
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	689a      	ldr	r2, [r3, #8]
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800587a:	609a      	str	r2, [r3, #8]
 800587c:	e03c      	b.n	80058f8 <HAL_TIM_ConfigClockSource+0x178>
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	6818      	ldr	r0, [r3, #0]
 8005882:	683b      	ldr	r3, [r7, #0]
 8005884:	6859      	ldr	r1, [r3, #4]
 8005886:	683b      	ldr	r3, [r7, #0]
 8005888:	68db      	ldr	r3, [r3, #12]
 800588a:	461a      	mov	r2, r3
 800588c:	f000 f90e 	bl	8005aac <TIM_TI1_ConfigInputStage>
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	681b      	ldr	r3, [r3, #0]
 8005894:	2150      	movs	r1, #80	; 0x50
 8005896:	4618      	mov	r0, r3
 8005898:	f000 f967 	bl	8005b6a <TIM_ITRx_SetConfig>
 800589c:	e02c      	b.n	80058f8 <HAL_TIM_ConfigClockSource+0x178>
 800589e:	687b      	ldr	r3, [r7, #4]
 80058a0:	6818      	ldr	r0, [r3, #0]
 80058a2:	683b      	ldr	r3, [r7, #0]
 80058a4:	6859      	ldr	r1, [r3, #4]
 80058a6:	683b      	ldr	r3, [r7, #0]
 80058a8:	68db      	ldr	r3, [r3, #12]
 80058aa:	461a      	mov	r2, r3
 80058ac:	f000 f92d 	bl	8005b0a <TIM_TI2_ConfigInputStage>
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	681b      	ldr	r3, [r3, #0]
 80058b4:	2160      	movs	r1, #96	; 0x60
 80058b6:	4618      	mov	r0, r3
 80058b8:	f000 f957 	bl	8005b6a <TIM_ITRx_SetConfig>
 80058bc:	e01c      	b.n	80058f8 <HAL_TIM_ConfigClockSource+0x178>
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	6818      	ldr	r0, [r3, #0]
 80058c2:	683b      	ldr	r3, [r7, #0]
 80058c4:	6859      	ldr	r1, [r3, #4]
 80058c6:	683b      	ldr	r3, [r7, #0]
 80058c8:	68db      	ldr	r3, [r3, #12]
 80058ca:	461a      	mov	r2, r3
 80058cc:	f000 f8ee 	bl	8005aac <TIM_TI1_ConfigInputStage>
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	681b      	ldr	r3, [r3, #0]
 80058d4:	2140      	movs	r1, #64	; 0x40
 80058d6:	4618      	mov	r0, r3
 80058d8:	f000 f947 	bl	8005b6a <TIM_ITRx_SetConfig>
 80058dc:	e00c      	b.n	80058f8 <HAL_TIM_ConfigClockSource+0x178>
 80058de:	687b      	ldr	r3, [r7, #4]
 80058e0:	681a      	ldr	r2, [r3, #0]
 80058e2:	683b      	ldr	r3, [r7, #0]
 80058e4:	681b      	ldr	r3, [r3, #0]
 80058e6:	4619      	mov	r1, r3
 80058e8:	4610      	mov	r0, r2
 80058ea:	f000 f93e 	bl	8005b6a <TIM_ITRx_SetConfig>
 80058ee:	e003      	b.n	80058f8 <HAL_TIM_ConfigClockSource+0x178>
 80058f0:	2301      	movs	r3, #1
 80058f2:	73fb      	strb	r3, [r7, #15]
 80058f4:	e000      	b.n	80058f8 <HAL_TIM_ConfigClockSource+0x178>
 80058f6:	bf00      	nop
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	2201      	movs	r2, #1
 80058fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005900:	687b      	ldr	r3, [r7, #4]
 8005902:	2200      	movs	r2, #0
 8005904:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005908:	7bfb      	ldrb	r3, [r7, #15]
 800590a:	4618      	mov	r0, r3
 800590c:	3710      	adds	r7, #16
 800590e:	46bd      	mov	sp, r7
 8005910:	bd80      	pop	{r7, pc}

08005912 <HAL_TIM_PeriodElapsedCallback>:
 8005912:	b480      	push	{r7}
 8005914:	b083      	sub	sp, #12
 8005916:	af00      	add	r7, sp, #0
 8005918:	6078      	str	r0, [r7, #4]
 800591a:	bf00      	nop
 800591c:	370c      	adds	r7, #12
 800591e:	46bd      	mov	sp, r7
 8005920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005924:	4770      	bx	lr

08005926 <HAL_TIM_OC_DelayElapsedCallback>:
 8005926:	b480      	push	{r7}
 8005928:	b083      	sub	sp, #12
 800592a:	af00      	add	r7, sp, #0
 800592c:	6078      	str	r0, [r7, #4]
 800592e:	bf00      	nop
 8005930:	370c      	adds	r7, #12
 8005932:	46bd      	mov	sp, r7
 8005934:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005938:	4770      	bx	lr

0800593a <HAL_TIM_IC_CaptureCallback>:
 800593a:	b480      	push	{r7}
 800593c:	b083      	sub	sp, #12
 800593e:	af00      	add	r7, sp, #0
 8005940:	6078      	str	r0, [r7, #4]
 8005942:	bf00      	nop
 8005944:	370c      	adds	r7, #12
 8005946:	46bd      	mov	sp, r7
 8005948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800594c:	4770      	bx	lr

0800594e <HAL_TIM_PWM_PulseFinishedCallback>:
 800594e:	b480      	push	{r7}
 8005950:	b083      	sub	sp, #12
 8005952:	af00      	add	r7, sp, #0
 8005954:	6078      	str	r0, [r7, #4]
 8005956:	bf00      	nop
 8005958:	370c      	adds	r7, #12
 800595a:	46bd      	mov	sp, r7
 800595c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005960:	4770      	bx	lr

08005962 <HAL_TIM_TriggerCallback>:
 8005962:	b480      	push	{r7}
 8005964:	b083      	sub	sp, #12
 8005966:	af00      	add	r7, sp, #0
 8005968:	6078      	str	r0, [r7, #4]
 800596a:	bf00      	nop
 800596c:	370c      	adds	r7, #12
 800596e:	46bd      	mov	sp, r7
 8005970:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005974:	4770      	bx	lr
	...

08005978 <TIM_Base_SetConfig>:
 8005978:	b480      	push	{r7}
 800597a:	b085      	sub	sp, #20
 800597c:	af00      	add	r7, sp, #0
 800597e:	6078      	str	r0, [r7, #4]
 8005980:	6039      	str	r1, [r7, #0]
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	60fb      	str	r3, [r7, #12]
 8005988:	687b      	ldr	r3, [r7, #4]
 800598a:	4a40      	ldr	r2, [pc, #256]	; (8005a8c <TIM_Base_SetConfig+0x114>)
 800598c:	4293      	cmp	r3, r2
 800598e:	d013      	beq.n	80059b8 <TIM_Base_SetConfig+0x40>
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005996:	d00f      	beq.n	80059b8 <TIM_Base_SetConfig+0x40>
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	4a3d      	ldr	r2, [pc, #244]	; (8005a90 <TIM_Base_SetConfig+0x118>)
 800599c:	4293      	cmp	r3, r2
 800599e:	d00b      	beq.n	80059b8 <TIM_Base_SetConfig+0x40>
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	4a3c      	ldr	r2, [pc, #240]	; (8005a94 <TIM_Base_SetConfig+0x11c>)
 80059a4:	4293      	cmp	r3, r2
 80059a6:	d007      	beq.n	80059b8 <TIM_Base_SetConfig+0x40>
 80059a8:	687b      	ldr	r3, [r7, #4]
 80059aa:	4a3b      	ldr	r2, [pc, #236]	; (8005a98 <TIM_Base_SetConfig+0x120>)
 80059ac:	4293      	cmp	r3, r2
 80059ae:	d003      	beq.n	80059b8 <TIM_Base_SetConfig+0x40>
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	4a3a      	ldr	r2, [pc, #232]	; (8005a9c <TIM_Base_SetConfig+0x124>)
 80059b4:	4293      	cmp	r3, r2
 80059b6:	d108      	bne.n	80059ca <TIM_Base_SetConfig+0x52>
 80059b8:	68fb      	ldr	r3, [r7, #12]
 80059ba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80059be:	60fb      	str	r3, [r7, #12]
 80059c0:	683b      	ldr	r3, [r7, #0]
 80059c2:	685b      	ldr	r3, [r3, #4]
 80059c4:	68fa      	ldr	r2, [r7, #12]
 80059c6:	4313      	orrs	r3, r2
 80059c8:	60fb      	str	r3, [r7, #12]
 80059ca:	687b      	ldr	r3, [r7, #4]
 80059cc:	4a2f      	ldr	r2, [pc, #188]	; (8005a8c <TIM_Base_SetConfig+0x114>)
 80059ce:	4293      	cmp	r3, r2
 80059d0:	d01f      	beq.n	8005a12 <TIM_Base_SetConfig+0x9a>
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80059d8:	d01b      	beq.n	8005a12 <TIM_Base_SetConfig+0x9a>
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	4a2c      	ldr	r2, [pc, #176]	; (8005a90 <TIM_Base_SetConfig+0x118>)
 80059de:	4293      	cmp	r3, r2
 80059e0:	d017      	beq.n	8005a12 <TIM_Base_SetConfig+0x9a>
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	4a2b      	ldr	r2, [pc, #172]	; (8005a94 <TIM_Base_SetConfig+0x11c>)
 80059e6:	4293      	cmp	r3, r2
 80059e8:	d013      	beq.n	8005a12 <TIM_Base_SetConfig+0x9a>
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	4a2a      	ldr	r2, [pc, #168]	; (8005a98 <TIM_Base_SetConfig+0x120>)
 80059ee:	4293      	cmp	r3, r2
 80059f0:	d00f      	beq.n	8005a12 <TIM_Base_SetConfig+0x9a>
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	4a29      	ldr	r2, [pc, #164]	; (8005a9c <TIM_Base_SetConfig+0x124>)
 80059f6:	4293      	cmp	r3, r2
 80059f8:	d00b      	beq.n	8005a12 <TIM_Base_SetConfig+0x9a>
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	4a28      	ldr	r2, [pc, #160]	; (8005aa0 <TIM_Base_SetConfig+0x128>)
 80059fe:	4293      	cmp	r3, r2
 8005a00:	d007      	beq.n	8005a12 <TIM_Base_SetConfig+0x9a>
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	4a27      	ldr	r2, [pc, #156]	; (8005aa4 <TIM_Base_SetConfig+0x12c>)
 8005a06:	4293      	cmp	r3, r2
 8005a08:	d003      	beq.n	8005a12 <TIM_Base_SetConfig+0x9a>
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	4a26      	ldr	r2, [pc, #152]	; (8005aa8 <TIM_Base_SetConfig+0x130>)
 8005a0e:	4293      	cmp	r3, r2
 8005a10:	d108      	bne.n	8005a24 <TIM_Base_SetConfig+0xac>
 8005a12:	68fb      	ldr	r3, [r7, #12]
 8005a14:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005a18:	60fb      	str	r3, [r7, #12]
 8005a1a:	683b      	ldr	r3, [r7, #0]
 8005a1c:	68db      	ldr	r3, [r3, #12]
 8005a1e:	68fa      	ldr	r2, [r7, #12]
 8005a20:	4313      	orrs	r3, r2
 8005a22:	60fb      	str	r3, [r7, #12]
 8005a24:	68fb      	ldr	r3, [r7, #12]
 8005a26:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8005a2a:	683b      	ldr	r3, [r7, #0]
 8005a2c:	695b      	ldr	r3, [r3, #20]
 8005a2e:	4313      	orrs	r3, r2
 8005a30:	60fb      	str	r3, [r7, #12]
 8005a32:	687b      	ldr	r3, [r7, #4]
 8005a34:	68fa      	ldr	r2, [r7, #12]
 8005a36:	601a      	str	r2, [r3, #0]
 8005a38:	683b      	ldr	r3, [r7, #0]
 8005a3a:	689a      	ldr	r2, [r3, #8]
 8005a3c:	687b      	ldr	r3, [r7, #4]
 8005a3e:	62da      	str	r2, [r3, #44]	; 0x2c
 8005a40:	683b      	ldr	r3, [r7, #0]
 8005a42:	681a      	ldr	r2, [r3, #0]
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	629a      	str	r2, [r3, #40]	; 0x28
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	4a10      	ldr	r2, [pc, #64]	; (8005a8c <TIM_Base_SetConfig+0x114>)
 8005a4c:	4293      	cmp	r3, r2
 8005a4e:	d00f      	beq.n	8005a70 <TIM_Base_SetConfig+0xf8>
 8005a50:	687b      	ldr	r3, [r7, #4]
 8005a52:	4a12      	ldr	r2, [pc, #72]	; (8005a9c <TIM_Base_SetConfig+0x124>)
 8005a54:	4293      	cmp	r3, r2
 8005a56:	d00b      	beq.n	8005a70 <TIM_Base_SetConfig+0xf8>
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	4a11      	ldr	r2, [pc, #68]	; (8005aa0 <TIM_Base_SetConfig+0x128>)
 8005a5c:	4293      	cmp	r3, r2
 8005a5e:	d007      	beq.n	8005a70 <TIM_Base_SetConfig+0xf8>
 8005a60:	687b      	ldr	r3, [r7, #4]
 8005a62:	4a10      	ldr	r2, [pc, #64]	; (8005aa4 <TIM_Base_SetConfig+0x12c>)
 8005a64:	4293      	cmp	r3, r2
 8005a66:	d003      	beq.n	8005a70 <TIM_Base_SetConfig+0xf8>
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	4a0f      	ldr	r2, [pc, #60]	; (8005aa8 <TIM_Base_SetConfig+0x130>)
 8005a6c:	4293      	cmp	r3, r2
 8005a6e:	d103      	bne.n	8005a78 <TIM_Base_SetConfig+0x100>
 8005a70:	683b      	ldr	r3, [r7, #0]
 8005a72:	691a      	ldr	r2, [r3, #16]
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	631a      	str	r2, [r3, #48]	; 0x30
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	2201      	movs	r2, #1
 8005a7c:	615a      	str	r2, [r3, #20]
 8005a7e:	bf00      	nop
 8005a80:	3714      	adds	r7, #20
 8005a82:	46bd      	mov	sp, r7
 8005a84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a88:	4770      	bx	lr
 8005a8a:	bf00      	nop
 8005a8c:	40012c00 	.word	0x40012c00
 8005a90:	40000400 	.word	0x40000400
 8005a94:	40000800 	.word	0x40000800
 8005a98:	40000c00 	.word	0x40000c00
 8005a9c:	40013400 	.word	0x40013400
 8005aa0:	40014000 	.word	0x40014000
 8005aa4:	40014400 	.word	0x40014400
 8005aa8:	40014800 	.word	0x40014800

08005aac <TIM_TI1_ConfigInputStage>:
 8005aac:	b480      	push	{r7}
 8005aae:	b087      	sub	sp, #28
 8005ab0:	af00      	add	r7, sp, #0
 8005ab2:	60f8      	str	r0, [r7, #12]
 8005ab4:	60b9      	str	r1, [r7, #8]
 8005ab6:	607a      	str	r2, [r7, #4]
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	6a1b      	ldr	r3, [r3, #32]
 8005abc:	617b      	str	r3, [r7, #20]
 8005abe:	68fb      	ldr	r3, [r7, #12]
 8005ac0:	6a1b      	ldr	r3, [r3, #32]
 8005ac2:	f023 0201 	bic.w	r2, r3, #1
 8005ac6:	68fb      	ldr	r3, [r7, #12]
 8005ac8:	621a      	str	r2, [r3, #32]
 8005aca:	68fb      	ldr	r3, [r7, #12]
 8005acc:	699b      	ldr	r3, [r3, #24]
 8005ace:	613b      	str	r3, [r7, #16]
 8005ad0:	693b      	ldr	r3, [r7, #16]
 8005ad2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005ad6:	613b      	str	r3, [r7, #16]
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	011b      	lsls	r3, r3, #4
 8005adc:	693a      	ldr	r2, [r7, #16]
 8005ade:	4313      	orrs	r3, r2
 8005ae0:	613b      	str	r3, [r7, #16]
 8005ae2:	697b      	ldr	r3, [r7, #20]
 8005ae4:	f023 030a 	bic.w	r3, r3, #10
 8005ae8:	617b      	str	r3, [r7, #20]
 8005aea:	697a      	ldr	r2, [r7, #20]
 8005aec:	68bb      	ldr	r3, [r7, #8]
 8005aee:	4313      	orrs	r3, r2
 8005af0:	617b      	str	r3, [r7, #20]
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	693a      	ldr	r2, [r7, #16]
 8005af6:	619a      	str	r2, [r3, #24]
 8005af8:	68fb      	ldr	r3, [r7, #12]
 8005afa:	697a      	ldr	r2, [r7, #20]
 8005afc:	621a      	str	r2, [r3, #32]
 8005afe:	bf00      	nop
 8005b00:	371c      	adds	r7, #28
 8005b02:	46bd      	mov	sp, r7
 8005b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b08:	4770      	bx	lr

08005b0a <TIM_TI2_ConfigInputStage>:
 8005b0a:	b480      	push	{r7}
 8005b0c:	b087      	sub	sp, #28
 8005b0e:	af00      	add	r7, sp, #0
 8005b10:	60f8      	str	r0, [r7, #12]
 8005b12:	60b9      	str	r1, [r7, #8]
 8005b14:	607a      	str	r2, [r7, #4]
 8005b16:	68fb      	ldr	r3, [r7, #12]
 8005b18:	6a1b      	ldr	r3, [r3, #32]
 8005b1a:	617b      	str	r3, [r7, #20]
 8005b1c:	68fb      	ldr	r3, [r7, #12]
 8005b1e:	6a1b      	ldr	r3, [r3, #32]
 8005b20:	f023 0210 	bic.w	r2, r3, #16
 8005b24:	68fb      	ldr	r3, [r7, #12]
 8005b26:	621a      	str	r2, [r3, #32]
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	699b      	ldr	r3, [r3, #24]
 8005b2c:	613b      	str	r3, [r7, #16]
 8005b2e:	693b      	ldr	r3, [r7, #16]
 8005b30:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005b34:	613b      	str	r3, [r7, #16]
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	031b      	lsls	r3, r3, #12
 8005b3a:	693a      	ldr	r2, [r7, #16]
 8005b3c:	4313      	orrs	r3, r2
 8005b3e:	613b      	str	r3, [r7, #16]
 8005b40:	697b      	ldr	r3, [r7, #20]
 8005b42:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8005b46:	617b      	str	r3, [r7, #20]
 8005b48:	68bb      	ldr	r3, [r7, #8]
 8005b4a:	011b      	lsls	r3, r3, #4
 8005b4c:	697a      	ldr	r2, [r7, #20]
 8005b4e:	4313      	orrs	r3, r2
 8005b50:	617b      	str	r3, [r7, #20]
 8005b52:	68fb      	ldr	r3, [r7, #12]
 8005b54:	693a      	ldr	r2, [r7, #16]
 8005b56:	619a      	str	r2, [r3, #24]
 8005b58:	68fb      	ldr	r3, [r7, #12]
 8005b5a:	697a      	ldr	r2, [r7, #20]
 8005b5c:	621a      	str	r2, [r3, #32]
 8005b5e:	bf00      	nop
 8005b60:	371c      	adds	r7, #28
 8005b62:	46bd      	mov	sp, r7
 8005b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b68:	4770      	bx	lr

08005b6a <TIM_ITRx_SetConfig>:
 8005b6a:	b480      	push	{r7}
 8005b6c:	b085      	sub	sp, #20
 8005b6e:	af00      	add	r7, sp, #0
 8005b70:	6078      	str	r0, [r7, #4]
 8005b72:	6039      	str	r1, [r7, #0]
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	689b      	ldr	r3, [r3, #8]
 8005b78:	60fb      	str	r3, [r7, #12]
 8005b7a:	68fb      	ldr	r3, [r7, #12]
 8005b7c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005b80:	60fb      	str	r3, [r7, #12]
 8005b82:	683a      	ldr	r2, [r7, #0]
 8005b84:	68fb      	ldr	r3, [r7, #12]
 8005b86:	4313      	orrs	r3, r2
 8005b88:	f043 0307 	orr.w	r3, r3, #7
 8005b8c:	60fb      	str	r3, [r7, #12]
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	68fa      	ldr	r2, [r7, #12]
 8005b92:	609a      	str	r2, [r3, #8]
 8005b94:	bf00      	nop
 8005b96:	3714      	adds	r7, #20
 8005b98:	46bd      	mov	sp, r7
 8005b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b9e:	4770      	bx	lr

08005ba0 <TIM_ETR_SetConfig>:
 8005ba0:	b480      	push	{r7}
 8005ba2:	b087      	sub	sp, #28
 8005ba4:	af00      	add	r7, sp, #0
 8005ba6:	60f8      	str	r0, [r7, #12]
 8005ba8:	60b9      	str	r1, [r7, #8]
 8005baa:	607a      	str	r2, [r7, #4]
 8005bac:	603b      	str	r3, [r7, #0]
 8005bae:	68fb      	ldr	r3, [r7, #12]
 8005bb0:	689b      	ldr	r3, [r3, #8]
 8005bb2:	617b      	str	r3, [r7, #20]
 8005bb4:	697b      	ldr	r3, [r7, #20]
 8005bb6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005bba:	617b      	str	r3, [r7, #20]
 8005bbc:	683b      	ldr	r3, [r7, #0]
 8005bbe:	021a      	lsls	r2, r3, #8
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	431a      	orrs	r2, r3
 8005bc4:	68bb      	ldr	r3, [r7, #8]
 8005bc6:	4313      	orrs	r3, r2
 8005bc8:	697a      	ldr	r2, [r7, #20]
 8005bca:	4313      	orrs	r3, r2
 8005bcc:	617b      	str	r3, [r7, #20]
 8005bce:	68fb      	ldr	r3, [r7, #12]
 8005bd0:	697a      	ldr	r2, [r7, #20]
 8005bd2:	609a      	str	r2, [r3, #8]
 8005bd4:	bf00      	nop
 8005bd6:	371c      	adds	r7, #28
 8005bd8:	46bd      	mov	sp, r7
 8005bda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bde:	4770      	bx	lr

08005be0 <HAL_TIMEx_MasterConfigSynchronization>:
 8005be0:	b480      	push	{r7}
 8005be2:	b085      	sub	sp, #20
 8005be4:	af00      	add	r7, sp, #0
 8005be6:	6078      	str	r0, [r7, #4]
 8005be8:	6039      	str	r1, [r7, #0]
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005bf0:	2b01      	cmp	r3, #1
 8005bf2:	d101      	bne.n	8005bf8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005bf4:	2302      	movs	r3, #2
 8005bf6:	e068      	b.n	8005cca <HAL_TIMEx_MasterConfigSynchronization+0xea>
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	2201      	movs	r2, #1
 8005bfc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	2202      	movs	r2, #2
 8005c04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005c08:	687b      	ldr	r3, [r7, #4]
 8005c0a:	681b      	ldr	r3, [r3, #0]
 8005c0c:	685b      	ldr	r3, [r3, #4]
 8005c0e:	60fb      	str	r3, [r7, #12]
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	689b      	ldr	r3, [r3, #8]
 8005c16:	60bb      	str	r3, [r7, #8]
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	4a2e      	ldr	r2, [pc, #184]	; (8005cd8 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8005c1e:	4293      	cmp	r3, r2
 8005c20:	d004      	beq.n	8005c2c <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8005c22:	687b      	ldr	r3, [r7, #4]
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	4a2d      	ldr	r2, [pc, #180]	; (8005cdc <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8005c28:	4293      	cmp	r3, r2
 8005c2a:	d108      	bne.n	8005c3e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8005c32:	60fb      	str	r3, [r7, #12]
 8005c34:	683b      	ldr	r3, [r7, #0]
 8005c36:	685b      	ldr	r3, [r3, #4]
 8005c38:	68fa      	ldr	r2, [r7, #12]
 8005c3a:	4313      	orrs	r3, r2
 8005c3c:	60fb      	str	r3, [r7, #12]
 8005c3e:	68fb      	ldr	r3, [r7, #12]
 8005c40:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005c44:	60fb      	str	r3, [r7, #12]
 8005c46:	683b      	ldr	r3, [r7, #0]
 8005c48:	681b      	ldr	r3, [r3, #0]
 8005c4a:	68fa      	ldr	r2, [r7, #12]
 8005c4c:	4313      	orrs	r3, r2
 8005c4e:	60fb      	str	r3, [r7, #12]
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	68fa      	ldr	r2, [r7, #12]
 8005c56:	605a      	str	r2, [r3, #4]
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	681b      	ldr	r3, [r3, #0]
 8005c5c:	4a1e      	ldr	r2, [pc, #120]	; (8005cd8 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8005c5e:	4293      	cmp	r3, r2
 8005c60:	d01d      	beq.n	8005c9e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005c6a:	d018      	beq.n	8005c9e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	4a1b      	ldr	r2, [pc, #108]	; (8005ce0 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8005c72:	4293      	cmp	r3, r2
 8005c74:	d013      	beq.n	8005c9e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	4a1a      	ldr	r2, [pc, #104]	; (8005ce4 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8005c7c:	4293      	cmp	r3, r2
 8005c7e:	d00e      	beq.n	8005c9e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	681b      	ldr	r3, [r3, #0]
 8005c84:	4a18      	ldr	r2, [pc, #96]	; (8005ce8 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 8005c86:	4293      	cmp	r3, r2
 8005c88:	d009      	beq.n	8005c9e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	4a13      	ldr	r2, [pc, #76]	; (8005cdc <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8005c90:	4293      	cmp	r3, r2
 8005c92:	d004      	beq.n	8005c9e <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	681b      	ldr	r3, [r3, #0]
 8005c98:	4a14      	ldr	r2, [pc, #80]	; (8005cec <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 8005c9a:	4293      	cmp	r3, r2
 8005c9c:	d10c      	bne.n	8005cb8 <HAL_TIMEx_MasterConfigSynchronization+0xd8>
 8005c9e:	68bb      	ldr	r3, [r7, #8]
 8005ca0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005ca4:	60bb      	str	r3, [r7, #8]
 8005ca6:	683b      	ldr	r3, [r7, #0]
 8005ca8:	689b      	ldr	r3, [r3, #8]
 8005caa:	68ba      	ldr	r2, [r7, #8]
 8005cac:	4313      	orrs	r3, r2
 8005cae:	60bb      	str	r3, [r7, #8]
 8005cb0:	687b      	ldr	r3, [r7, #4]
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	68ba      	ldr	r2, [r7, #8]
 8005cb6:	609a      	str	r2, [r3, #8]
 8005cb8:	687b      	ldr	r3, [r7, #4]
 8005cba:	2201      	movs	r2, #1
 8005cbc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005cc0:	687b      	ldr	r3, [r7, #4]
 8005cc2:	2200      	movs	r2, #0
 8005cc4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005cc8:	2300      	movs	r3, #0
 8005cca:	4618      	mov	r0, r3
 8005ccc:	3714      	adds	r7, #20
 8005cce:	46bd      	mov	sp, r7
 8005cd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cd4:	4770      	bx	lr
 8005cd6:	bf00      	nop
 8005cd8:	40012c00 	.word	0x40012c00
 8005cdc:	40013400 	.word	0x40013400
 8005ce0:	40000400 	.word	0x40000400
 8005ce4:	40000800 	.word	0x40000800
 8005ce8:	40000c00 	.word	0x40000c00
 8005cec:	40014000 	.word	0x40014000

08005cf0 <HAL_TIMEx_CommutCallback>:
 8005cf0:	b480      	push	{r7}
 8005cf2:	b083      	sub	sp, #12
 8005cf4:	af00      	add	r7, sp, #0
 8005cf6:	6078      	str	r0, [r7, #4]
 8005cf8:	bf00      	nop
 8005cfa:	370c      	adds	r7, #12
 8005cfc:	46bd      	mov	sp, r7
 8005cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d02:	4770      	bx	lr

08005d04 <HAL_TIMEx_BreakCallback>:
 8005d04:	b480      	push	{r7}
 8005d06:	b083      	sub	sp, #12
 8005d08:	af00      	add	r7, sp, #0
 8005d0a:	6078      	str	r0, [r7, #4]
 8005d0c:	bf00      	nop
 8005d0e:	370c      	adds	r7, #12
 8005d10:	46bd      	mov	sp, r7
 8005d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d16:	4770      	bx	lr

08005d18 <HAL_TIMEx_Break2Callback>:
 8005d18:	b480      	push	{r7}
 8005d1a:	b083      	sub	sp, #12
 8005d1c:	af00      	add	r7, sp, #0
 8005d1e:	6078      	str	r0, [r7, #4]
 8005d20:	bf00      	nop
 8005d22:	370c      	adds	r7, #12
 8005d24:	46bd      	mov	sp, r7
 8005d26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d2a:	4770      	bx	lr

08005d2c <HAL_UART_Init>:
 8005d2c:	b580      	push	{r7, lr}
 8005d2e:	b082      	sub	sp, #8
 8005d30:	af00      	add	r7, sp, #0
 8005d32:	6078      	str	r0, [r7, #4]
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	2b00      	cmp	r3, #0
 8005d38:	d101      	bne.n	8005d3e <HAL_UART_Init+0x12>
 8005d3a:	2301      	movs	r3, #1
 8005d3c:	e040      	b.n	8005dc0 <HAL_UART_Init+0x94>
 8005d3e:	687b      	ldr	r3, [r7, #4]
 8005d40:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d106      	bne.n	8005d54 <HAL_UART_Init+0x28>
 8005d46:	687b      	ldr	r3, [r7, #4]
 8005d48:	2200      	movs	r2, #0
 8005d4a:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8005d4e:	6878      	ldr	r0, [r7, #4]
 8005d50:	f7fc feb2 	bl	8002ab8 <HAL_UART_MspInit>
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	2224      	movs	r2, #36	; 0x24
 8005d58:	67da      	str	r2, [r3, #124]	; 0x7c
 8005d5a:	687b      	ldr	r3, [r7, #4]
 8005d5c:	681b      	ldr	r3, [r3, #0]
 8005d5e:	681a      	ldr	r2, [r3, #0]
 8005d60:	687b      	ldr	r3, [r7, #4]
 8005d62:	681b      	ldr	r3, [r3, #0]
 8005d64:	f022 0201 	bic.w	r2, r2, #1
 8005d68:	601a      	str	r2, [r3, #0]
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d002      	beq.n	8005d78 <HAL_UART_Init+0x4c>
 8005d72:	6878      	ldr	r0, [r7, #4]
 8005d74:	f000 fb6a 	bl	800644c <UART_AdvFeatureConfig>
 8005d78:	6878      	ldr	r0, [r7, #4]
 8005d7a:	f000 f8af 	bl	8005edc <UART_SetConfig>
 8005d7e:	4603      	mov	r3, r0
 8005d80:	2b01      	cmp	r3, #1
 8005d82:	d101      	bne.n	8005d88 <HAL_UART_Init+0x5c>
 8005d84:	2301      	movs	r3, #1
 8005d86:	e01b      	b.n	8005dc0 <HAL_UART_Init+0x94>
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	681b      	ldr	r3, [r3, #0]
 8005d8c:	685a      	ldr	r2, [r3, #4]
 8005d8e:	687b      	ldr	r3, [r7, #4]
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8005d96:	605a      	str	r2, [r3, #4]
 8005d98:	687b      	ldr	r3, [r7, #4]
 8005d9a:	681b      	ldr	r3, [r3, #0]
 8005d9c:	689a      	ldr	r2, [r3, #8]
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	681b      	ldr	r3, [r3, #0]
 8005da2:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8005da6:	609a      	str	r2, [r3, #8]
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	681a      	ldr	r2, [r3, #0]
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	681b      	ldr	r3, [r3, #0]
 8005db2:	f042 0201 	orr.w	r2, r2, #1
 8005db6:	601a      	str	r2, [r3, #0]
 8005db8:	6878      	ldr	r0, [r7, #4]
 8005dba:	f000 fbe9 	bl	8006590 <UART_CheckIdleState>
 8005dbe:	4603      	mov	r3, r0
 8005dc0:	4618      	mov	r0, r3
 8005dc2:	3708      	adds	r7, #8
 8005dc4:	46bd      	mov	sp, r7
 8005dc6:	bd80      	pop	{r7, pc}

08005dc8 <HAL_UART_Transmit>:
 8005dc8:	b580      	push	{r7, lr}
 8005dca:	b08a      	sub	sp, #40	; 0x28
 8005dcc:	af02      	add	r7, sp, #8
 8005dce:	60f8      	str	r0, [r7, #12]
 8005dd0:	60b9      	str	r1, [r7, #8]
 8005dd2:	603b      	str	r3, [r7, #0]
 8005dd4:	4613      	mov	r3, r2
 8005dd6:	80fb      	strh	r3, [r7, #6]
 8005dd8:	68fb      	ldr	r3, [r7, #12]
 8005dda:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005ddc:	2b20      	cmp	r3, #32
 8005dde:	d178      	bne.n	8005ed2 <HAL_UART_Transmit+0x10a>
 8005de0:	68bb      	ldr	r3, [r7, #8]
 8005de2:	2b00      	cmp	r3, #0
 8005de4:	d002      	beq.n	8005dec <HAL_UART_Transmit+0x24>
 8005de6:	88fb      	ldrh	r3, [r7, #6]
 8005de8:	2b00      	cmp	r3, #0
 8005dea:	d101      	bne.n	8005df0 <HAL_UART_Transmit+0x28>
 8005dec:	2301      	movs	r3, #1
 8005dee:	e071      	b.n	8005ed4 <HAL_UART_Transmit+0x10c>
 8005df0:	68fb      	ldr	r3, [r7, #12]
 8005df2:	2200      	movs	r2, #0
 8005df4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8005df8:	68fb      	ldr	r3, [r7, #12]
 8005dfa:	2221      	movs	r2, #33	; 0x21
 8005dfc:	67da      	str	r2, [r3, #124]	; 0x7c
 8005dfe:	f7fd f86b 	bl	8002ed8 <HAL_GetTick>
 8005e02:	6178      	str	r0, [r7, #20]
 8005e04:	68fb      	ldr	r3, [r7, #12]
 8005e06:	88fa      	ldrh	r2, [r7, #6]
 8005e08:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8005e0c:	68fb      	ldr	r3, [r7, #12]
 8005e0e:	88fa      	ldrh	r2, [r7, #6]
 8005e10:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8005e14:	68fb      	ldr	r3, [r7, #12]
 8005e16:	689b      	ldr	r3, [r3, #8]
 8005e18:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005e1c:	d108      	bne.n	8005e30 <HAL_UART_Transmit+0x68>
 8005e1e:	68fb      	ldr	r3, [r7, #12]
 8005e20:	691b      	ldr	r3, [r3, #16]
 8005e22:	2b00      	cmp	r3, #0
 8005e24:	d104      	bne.n	8005e30 <HAL_UART_Transmit+0x68>
 8005e26:	2300      	movs	r3, #0
 8005e28:	61fb      	str	r3, [r7, #28]
 8005e2a:	68bb      	ldr	r3, [r7, #8]
 8005e2c:	61bb      	str	r3, [r7, #24]
 8005e2e:	e003      	b.n	8005e38 <HAL_UART_Transmit+0x70>
 8005e30:	68bb      	ldr	r3, [r7, #8]
 8005e32:	61fb      	str	r3, [r7, #28]
 8005e34:	2300      	movs	r3, #0
 8005e36:	61bb      	str	r3, [r7, #24]
 8005e38:	e030      	b.n	8005e9c <HAL_UART_Transmit+0xd4>
 8005e3a:	683b      	ldr	r3, [r7, #0]
 8005e3c:	9300      	str	r3, [sp, #0]
 8005e3e:	697b      	ldr	r3, [r7, #20]
 8005e40:	2200      	movs	r2, #0
 8005e42:	2180      	movs	r1, #128	; 0x80
 8005e44:	68f8      	ldr	r0, [r7, #12]
 8005e46:	f000 fc4b 	bl	80066e0 <UART_WaitOnFlagUntilTimeout>
 8005e4a:	4603      	mov	r3, r0
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d004      	beq.n	8005e5a <HAL_UART_Transmit+0x92>
 8005e50:	68fb      	ldr	r3, [r7, #12]
 8005e52:	2220      	movs	r2, #32
 8005e54:	67da      	str	r2, [r3, #124]	; 0x7c
 8005e56:	2303      	movs	r3, #3
 8005e58:	e03c      	b.n	8005ed4 <HAL_UART_Transmit+0x10c>
 8005e5a:	69fb      	ldr	r3, [r7, #28]
 8005e5c:	2b00      	cmp	r3, #0
 8005e5e:	d10b      	bne.n	8005e78 <HAL_UART_Transmit+0xb0>
 8005e60:	69bb      	ldr	r3, [r7, #24]
 8005e62:	881a      	ldrh	r2, [r3, #0]
 8005e64:	68fb      	ldr	r3, [r7, #12]
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005e6c:	b292      	uxth	r2, r2
 8005e6e:	851a      	strh	r2, [r3, #40]	; 0x28
 8005e70:	69bb      	ldr	r3, [r7, #24]
 8005e72:	3302      	adds	r3, #2
 8005e74:	61bb      	str	r3, [r7, #24]
 8005e76:	e008      	b.n	8005e8a <HAL_UART_Transmit+0xc2>
 8005e78:	69fb      	ldr	r3, [r7, #28]
 8005e7a:	781a      	ldrb	r2, [r3, #0]
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	681b      	ldr	r3, [r3, #0]
 8005e80:	b292      	uxth	r2, r2
 8005e82:	851a      	strh	r2, [r3, #40]	; 0x28
 8005e84:	69fb      	ldr	r3, [r7, #28]
 8005e86:	3301      	adds	r3, #1
 8005e88:	61fb      	str	r3, [r7, #28]
 8005e8a:	68fb      	ldr	r3, [r7, #12]
 8005e8c:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8005e90:	b29b      	uxth	r3, r3
 8005e92:	3b01      	subs	r3, #1
 8005e94:	b29a      	uxth	r2, r3
 8005e96:	68fb      	ldr	r3, [r7, #12]
 8005e98:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8005e9c:	68fb      	ldr	r3, [r7, #12]
 8005e9e:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8005ea2:	b29b      	uxth	r3, r3
 8005ea4:	2b00      	cmp	r3, #0
 8005ea6:	d1c8      	bne.n	8005e3a <HAL_UART_Transmit+0x72>
 8005ea8:	683b      	ldr	r3, [r7, #0]
 8005eaa:	9300      	str	r3, [sp, #0]
 8005eac:	697b      	ldr	r3, [r7, #20]
 8005eae:	2200      	movs	r2, #0
 8005eb0:	2140      	movs	r1, #64	; 0x40
 8005eb2:	68f8      	ldr	r0, [r7, #12]
 8005eb4:	f000 fc14 	bl	80066e0 <UART_WaitOnFlagUntilTimeout>
 8005eb8:	4603      	mov	r3, r0
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d004      	beq.n	8005ec8 <HAL_UART_Transmit+0x100>
 8005ebe:	68fb      	ldr	r3, [r7, #12]
 8005ec0:	2220      	movs	r2, #32
 8005ec2:	67da      	str	r2, [r3, #124]	; 0x7c
 8005ec4:	2303      	movs	r3, #3
 8005ec6:	e005      	b.n	8005ed4 <HAL_UART_Transmit+0x10c>
 8005ec8:	68fb      	ldr	r3, [r7, #12]
 8005eca:	2220      	movs	r2, #32
 8005ecc:	67da      	str	r2, [r3, #124]	; 0x7c
 8005ece:	2300      	movs	r3, #0
 8005ed0:	e000      	b.n	8005ed4 <HAL_UART_Transmit+0x10c>
 8005ed2:	2302      	movs	r3, #2
 8005ed4:	4618      	mov	r0, r3
 8005ed6:	3720      	adds	r7, #32
 8005ed8:	46bd      	mov	sp, r7
 8005eda:	bd80      	pop	{r7, pc}

08005edc <UART_SetConfig>:
 8005edc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005ee0:	b08a      	sub	sp, #40	; 0x28
 8005ee2:	af00      	add	r7, sp, #0
 8005ee4:	60f8      	str	r0, [r7, #12]
 8005ee6:	2300      	movs	r3, #0
 8005ee8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8005eec:	68fb      	ldr	r3, [r7, #12]
 8005eee:	689a      	ldr	r2, [r3, #8]
 8005ef0:	68fb      	ldr	r3, [r7, #12]
 8005ef2:	691b      	ldr	r3, [r3, #16]
 8005ef4:	431a      	orrs	r2, r3
 8005ef6:	68fb      	ldr	r3, [r7, #12]
 8005ef8:	695b      	ldr	r3, [r3, #20]
 8005efa:	431a      	orrs	r2, r3
 8005efc:	68fb      	ldr	r3, [r7, #12]
 8005efe:	69db      	ldr	r3, [r3, #28]
 8005f00:	4313      	orrs	r3, r2
 8005f02:	627b      	str	r3, [r7, #36]	; 0x24
 8005f04:	68fb      	ldr	r3, [r7, #12]
 8005f06:	681b      	ldr	r3, [r3, #0]
 8005f08:	681a      	ldr	r2, [r3, #0]
 8005f0a:	4ba4      	ldr	r3, [pc, #656]	; (800619c <UART_SetConfig+0x2c0>)
 8005f0c:	4013      	ands	r3, r2
 8005f0e:	68fa      	ldr	r2, [r7, #12]
 8005f10:	6812      	ldr	r2, [r2, #0]
 8005f12:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8005f14:	430b      	orrs	r3, r1
 8005f16:	6013      	str	r3, [r2, #0]
 8005f18:	68fb      	ldr	r3, [r7, #12]
 8005f1a:	681b      	ldr	r3, [r3, #0]
 8005f1c:	685b      	ldr	r3, [r3, #4]
 8005f1e:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8005f22:	68fb      	ldr	r3, [r7, #12]
 8005f24:	68da      	ldr	r2, [r3, #12]
 8005f26:	68fb      	ldr	r3, [r7, #12]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	430a      	orrs	r2, r1
 8005f2c:	605a      	str	r2, [r3, #4]
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	699b      	ldr	r3, [r3, #24]
 8005f32:	627b      	str	r3, [r7, #36]	; 0x24
 8005f34:	68fb      	ldr	r3, [r7, #12]
 8005f36:	681b      	ldr	r3, [r3, #0]
 8005f38:	4a99      	ldr	r2, [pc, #612]	; (80061a0 <UART_SetConfig+0x2c4>)
 8005f3a:	4293      	cmp	r3, r2
 8005f3c:	d004      	beq.n	8005f48 <UART_SetConfig+0x6c>
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	6a1b      	ldr	r3, [r3, #32]
 8005f42:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005f44:	4313      	orrs	r3, r2
 8005f46:	627b      	str	r3, [r7, #36]	; 0x24
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	681b      	ldr	r3, [r3, #0]
 8005f4c:	689b      	ldr	r3, [r3, #8]
 8005f4e:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8005f52:	68fb      	ldr	r3, [r7, #12]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005f58:	430a      	orrs	r2, r1
 8005f5a:	609a      	str	r2, [r3, #8]
 8005f5c:	68fb      	ldr	r3, [r7, #12]
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	4a90      	ldr	r2, [pc, #576]	; (80061a4 <UART_SetConfig+0x2c8>)
 8005f62:	4293      	cmp	r3, r2
 8005f64:	d126      	bne.n	8005fb4 <UART_SetConfig+0xd8>
 8005f66:	4b90      	ldr	r3, [pc, #576]	; (80061a8 <UART_SetConfig+0x2cc>)
 8005f68:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005f6c:	f003 0303 	and.w	r3, r3, #3
 8005f70:	2b03      	cmp	r3, #3
 8005f72:	d81b      	bhi.n	8005fac <UART_SetConfig+0xd0>
 8005f74:	a201      	add	r2, pc, #4	; (adr r2, 8005f7c <UART_SetConfig+0xa0>)
 8005f76:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005f7a:	bf00      	nop
 8005f7c:	08005f8d 	.word	0x08005f8d
 8005f80:	08005f9d 	.word	0x08005f9d
 8005f84:	08005f95 	.word	0x08005f95
 8005f88:	08005fa5 	.word	0x08005fa5
 8005f8c:	2301      	movs	r3, #1
 8005f8e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005f92:	e116      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8005f94:	2302      	movs	r3, #2
 8005f96:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005f9a:	e112      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8005f9c:	2304      	movs	r3, #4
 8005f9e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005fa2:	e10e      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8005fa4:	2308      	movs	r3, #8
 8005fa6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005faa:	e10a      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8005fac:	2310      	movs	r3, #16
 8005fae:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8005fb2:	e106      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8005fb4:	68fb      	ldr	r3, [r7, #12]
 8005fb6:	681b      	ldr	r3, [r3, #0]
 8005fb8:	4a7c      	ldr	r2, [pc, #496]	; (80061ac <UART_SetConfig+0x2d0>)
 8005fba:	4293      	cmp	r3, r2
 8005fbc:	d138      	bne.n	8006030 <UART_SetConfig+0x154>
 8005fbe:	4b7a      	ldr	r3, [pc, #488]	; (80061a8 <UART_SetConfig+0x2cc>)
 8005fc0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005fc4:	f003 030c 	and.w	r3, r3, #12
 8005fc8:	2b0c      	cmp	r3, #12
 8005fca:	d82d      	bhi.n	8006028 <UART_SetConfig+0x14c>
 8005fcc:	a201      	add	r2, pc, #4	; (adr r2, 8005fd4 <UART_SetConfig+0xf8>)
 8005fce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005fd2:	bf00      	nop
 8005fd4:	08006009 	.word	0x08006009
 8005fd8:	08006029 	.word	0x08006029
 8005fdc:	08006029 	.word	0x08006029
 8005fe0:	08006029 	.word	0x08006029
 8005fe4:	08006019 	.word	0x08006019
 8005fe8:	08006029 	.word	0x08006029
 8005fec:	08006029 	.word	0x08006029
 8005ff0:	08006029 	.word	0x08006029
 8005ff4:	08006011 	.word	0x08006011
 8005ff8:	08006029 	.word	0x08006029
 8005ffc:	08006029 	.word	0x08006029
 8006000:	08006029 	.word	0x08006029
 8006004:	08006021 	.word	0x08006021
 8006008:	2300      	movs	r3, #0
 800600a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800600e:	e0d8      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006010:	2302      	movs	r3, #2
 8006012:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006016:	e0d4      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006018:	2304      	movs	r3, #4
 800601a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800601e:	e0d0      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006020:	2308      	movs	r3, #8
 8006022:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006026:	e0cc      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006028:	2310      	movs	r3, #16
 800602a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800602e:	e0c8      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006030:	68fb      	ldr	r3, [r7, #12]
 8006032:	681b      	ldr	r3, [r3, #0]
 8006034:	4a5e      	ldr	r2, [pc, #376]	; (80061b0 <UART_SetConfig+0x2d4>)
 8006036:	4293      	cmp	r3, r2
 8006038:	d125      	bne.n	8006086 <UART_SetConfig+0x1aa>
 800603a:	4b5b      	ldr	r3, [pc, #364]	; (80061a8 <UART_SetConfig+0x2cc>)
 800603c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006040:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8006044:	2b30      	cmp	r3, #48	; 0x30
 8006046:	d016      	beq.n	8006076 <UART_SetConfig+0x19a>
 8006048:	2b30      	cmp	r3, #48	; 0x30
 800604a:	d818      	bhi.n	800607e <UART_SetConfig+0x1a2>
 800604c:	2b20      	cmp	r3, #32
 800604e:	d00a      	beq.n	8006066 <UART_SetConfig+0x18a>
 8006050:	2b20      	cmp	r3, #32
 8006052:	d814      	bhi.n	800607e <UART_SetConfig+0x1a2>
 8006054:	2b00      	cmp	r3, #0
 8006056:	d002      	beq.n	800605e <UART_SetConfig+0x182>
 8006058:	2b10      	cmp	r3, #16
 800605a:	d008      	beq.n	800606e <UART_SetConfig+0x192>
 800605c:	e00f      	b.n	800607e <UART_SetConfig+0x1a2>
 800605e:	2300      	movs	r3, #0
 8006060:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006064:	e0ad      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006066:	2302      	movs	r3, #2
 8006068:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800606c:	e0a9      	b.n	80061c2 <UART_SetConfig+0x2e6>
 800606e:	2304      	movs	r3, #4
 8006070:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006074:	e0a5      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006076:	2308      	movs	r3, #8
 8006078:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800607c:	e0a1      	b.n	80061c2 <UART_SetConfig+0x2e6>
 800607e:	2310      	movs	r3, #16
 8006080:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006084:	e09d      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006086:	68fb      	ldr	r3, [r7, #12]
 8006088:	681b      	ldr	r3, [r3, #0]
 800608a:	4a4a      	ldr	r2, [pc, #296]	; (80061b4 <UART_SetConfig+0x2d8>)
 800608c:	4293      	cmp	r3, r2
 800608e:	d125      	bne.n	80060dc <UART_SetConfig+0x200>
 8006090:	4b45      	ldr	r3, [pc, #276]	; (80061a8 <UART_SetConfig+0x2cc>)
 8006092:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006096:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800609a:	2bc0      	cmp	r3, #192	; 0xc0
 800609c:	d016      	beq.n	80060cc <UART_SetConfig+0x1f0>
 800609e:	2bc0      	cmp	r3, #192	; 0xc0
 80060a0:	d818      	bhi.n	80060d4 <UART_SetConfig+0x1f8>
 80060a2:	2b80      	cmp	r3, #128	; 0x80
 80060a4:	d00a      	beq.n	80060bc <UART_SetConfig+0x1e0>
 80060a6:	2b80      	cmp	r3, #128	; 0x80
 80060a8:	d814      	bhi.n	80060d4 <UART_SetConfig+0x1f8>
 80060aa:	2b00      	cmp	r3, #0
 80060ac:	d002      	beq.n	80060b4 <UART_SetConfig+0x1d8>
 80060ae:	2b40      	cmp	r3, #64	; 0x40
 80060b0:	d008      	beq.n	80060c4 <UART_SetConfig+0x1e8>
 80060b2:	e00f      	b.n	80060d4 <UART_SetConfig+0x1f8>
 80060b4:	2300      	movs	r3, #0
 80060b6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80060ba:	e082      	b.n	80061c2 <UART_SetConfig+0x2e6>
 80060bc:	2302      	movs	r3, #2
 80060be:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80060c2:	e07e      	b.n	80061c2 <UART_SetConfig+0x2e6>
 80060c4:	2304      	movs	r3, #4
 80060c6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80060ca:	e07a      	b.n	80061c2 <UART_SetConfig+0x2e6>
 80060cc:	2308      	movs	r3, #8
 80060ce:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80060d2:	e076      	b.n	80061c2 <UART_SetConfig+0x2e6>
 80060d4:	2310      	movs	r3, #16
 80060d6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80060da:	e072      	b.n	80061c2 <UART_SetConfig+0x2e6>
 80060dc:	68fb      	ldr	r3, [r7, #12]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	4a35      	ldr	r2, [pc, #212]	; (80061b8 <UART_SetConfig+0x2dc>)
 80060e2:	4293      	cmp	r3, r2
 80060e4:	d12a      	bne.n	800613c <UART_SetConfig+0x260>
 80060e6:	4b30      	ldr	r3, [pc, #192]	; (80061a8 <UART_SetConfig+0x2cc>)
 80060e8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80060ec:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80060f0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80060f4:	d01a      	beq.n	800612c <UART_SetConfig+0x250>
 80060f6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80060fa:	d81b      	bhi.n	8006134 <UART_SetConfig+0x258>
 80060fc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006100:	d00c      	beq.n	800611c <UART_SetConfig+0x240>
 8006102:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006106:	d815      	bhi.n	8006134 <UART_SetConfig+0x258>
 8006108:	2b00      	cmp	r3, #0
 800610a:	d003      	beq.n	8006114 <UART_SetConfig+0x238>
 800610c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006110:	d008      	beq.n	8006124 <UART_SetConfig+0x248>
 8006112:	e00f      	b.n	8006134 <UART_SetConfig+0x258>
 8006114:	2300      	movs	r3, #0
 8006116:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800611a:	e052      	b.n	80061c2 <UART_SetConfig+0x2e6>
 800611c:	2302      	movs	r3, #2
 800611e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006122:	e04e      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006124:	2304      	movs	r3, #4
 8006126:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800612a:	e04a      	b.n	80061c2 <UART_SetConfig+0x2e6>
 800612c:	2308      	movs	r3, #8
 800612e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006132:	e046      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006134:	2310      	movs	r3, #16
 8006136:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800613a:	e042      	b.n	80061c2 <UART_SetConfig+0x2e6>
 800613c:	68fb      	ldr	r3, [r7, #12]
 800613e:	681b      	ldr	r3, [r3, #0]
 8006140:	4a17      	ldr	r2, [pc, #92]	; (80061a0 <UART_SetConfig+0x2c4>)
 8006142:	4293      	cmp	r3, r2
 8006144:	d13a      	bne.n	80061bc <UART_SetConfig+0x2e0>
 8006146:	4b18      	ldr	r3, [pc, #96]	; (80061a8 <UART_SetConfig+0x2cc>)
 8006148:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800614c:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8006150:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8006154:	d01a      	beq.n	800618c <UART_SetConfig+0x2b0>
 8006156:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800615a:	d81b      	bhi.n	8006194 <UART_SetConfig+0x2b8>
 800615c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006160:	d00c      	beq.n	800617c <UART_SetConfig+0x2a0>
 8006162:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006166:	d815      	bhi.n	8006194 <UART_SetConfig+0x2b8>
 8006168:	2b00      	cmp	r3, #0
 800616a:	d003      	beq.n	8006174 <UART_SetConfig+0x298>
 800616c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006170:	d008      	beq.n	8006184 <UART_SetConfig+0x2a8>
 8006172:	e00f      	b.n	8006194 <UART_SetConfig+0x2b8>
 8006174:	2300      	movs	r3, #0
 8006176:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800617a:	e022      	b.n	80061c2 <UART_SetConfig+0x2e6>
 800617c:	2302      	movs	r3, #2
 800617e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006182:	e01e      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006184:	2304      	movs	r3, #4
 8006186:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800618a:	e01a      	b.n	80061c2 <UART_SetConfig+0x2e6>
 800618c:	2308      	movs	r3, #8
 800618e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006192:	e016      	b.n	80061c2 <UART_SetConfig+0x2e6>
 8006194:	2310      	movs	r3, #16
 8006196:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800619a:	e012      	b.n	80061c2 <UART_SetConfig+0x2e6>
 800619c:	efff69f3 	.word	0xefff69f3
 80061a0:	40008000 	.word	0x40008000
 80061a4:	40013800 	.word	0x40013800
 80061a8:	40021000 	.word	0x40021000
 80061ac:	40004400 	.word	0x40004400
 80061b0:	40004800 	.word	0x40004800
 80061b4:	40004c00 	.word	0x40004c00
 80061b8:	40005000 	.word	0x40005000
 80061bc:	2310      	movs	r3, #16
 80061be:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80061c2:	68fb      	ldr	r3, [r7, #12]
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	4a9f      	ldr	r2, [pc, #636]	; (8006444 <UART_SetConfig+0x568>)
 80061c8:	4293      	cmp	r3, r2
 80061ca:	d17a      	bne.n	80062c2 <UART_SetConfig+0x3e6>
 80061cc:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80061d0:	2b08      	cmp	r3, #8
 80061d2:	d824      	bhi.n	800621e <UART_SetConfig+0x342>
 80061d4:	a201      	add	r2, pc, #4	; (adr r2, 80061dc <UART_SetConfig+0x300>)
 80061d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80061da:	bf00      	nop
 80061dc:	08006201 	.word	0x08006201
 80061e0:	0800621f 	.word	0x0800621f
 80061e4:	08006209 	.word	0x08006209
 80061e8:	0800621f 	.word	0x0800621f
 80061ec:	0800620f 	.word	0x0800620f
 80061f0:	0800621f 	.word	0x0800621f
 80061f4:	0800621f 	.word	0x0800621f
 80061f8:	0800621f 	.word	0x0800621f
 80061fc:	08006217 	.word	0x08006217
 8006200:	f7fd ff82 	bl	8004108 <HAL_RCC_GetPCLK1Freq>
 8006204:	61f8      	str	r0, [r7, #28]
 8006206:	e010      	b.n	800622a <UART_SetConfig+0x34e>
 8006208:	4b8f      	ldr	r3, [pc, #572]	; (8006448 <UART_SetConfig+0x56c>)
 800620a:	61fb      	str	r3, [r7, #28]
 800620c:	e00d      	b.n	800622a <UART_SetConfig+0x34e>
 800620e:	f7fd fee3 	bl	8003fd8 <HAL_RCC_GetSysClockFreq>
 8006212:	61f8      	str	r0, [r7, #28]
 8006214:	e009      	b.n	800622a <UART_SetConfig+0x34e>
 8006216:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800621a:	61fb      	str	r3, [r7, #28]
 800621c:	e005      	b.n	800622a <UART_SetConfig+0x34e>
 800621e:	2300      	movs	r3, #0
 8006220:	61fb      	str	r3, [r7, #28]
 8006222:	2301      	movs	r3, #1
 8006224:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8006228:	bf00      	nop
 800622a:	69fb      	ldr	r3, [r7, #28]
 800622c:	2b00      	cmp	r3, #0
 800622e:	f000 80fb 	beq.w	8006428 <UART_SetConfig+0x54c>
 8006232:	68fb      	ldr	r3, [r7, #12]
 8006234:	685a      	ldr	r2, [r3, #4]
 8006236:	4613      	mov	r3, r2
 8006238:	005b      	lsls	r3, r3, #1
 800623a:	4413      	add	r3, r2
 800623c:	69fa      	ldr	r2, [r7, #28]
 800623e:	429a      	cmp	r2, r3
 8006240:	d305      	bcc.n	800624e <UART_SetConfig+0x372>
 8006242:	68fb      	ldr	r3, [r7, #12]
 8006244:	685b      	ldr	r3, [r3, #4]
 8006246:	031b      	lsls	r3, r3, #12
 8006248:	69fa      	ldr	r2, [r7, #28]
 800624a:	429a      	cmp	r2, r3
 800624c:	d903      	bls.n	8006256 <UART_SetConfig+0x37a>
 800624e:	2301      	movs	r3, #1
 8006250:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8006254:	e0e8      	b.n	8006428 <UART_SetConfig+0x54c>
 8006256:	69fb      	ldr	r3, [r7, #28]
 8006258:	2200      	movs	r2, #0
 800625a:	461c      	mov	r4, r3
 800625c:	4615      	mov	r5, r2
 800625e:	f04f 0200 	mov.w	r2, #0
 8006262:	f04f 0300 	mov.w	r3, #0
 8006266:	022b      	lsls	r3, r5, #8
 8006268:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 800626c:	0222      	lsls	r2, r4, #8
 800626e:	68f9      	ldr	r1, [r7, #12]
 8006270:	6849      	ldr	r1, [r1, #4]
 8006272:	0849      	lsrs	r1, r1, #1
 8006274:	2000      	movs	r0, #0
 8006276:	4688      	mov	r8, r1
 8006278:	4681      	mov	r9, r0
 800627a:	eb12 0a08 	adds.w	sl, r2, r8
 800627e:	eb43 0b09 	adc.w	fp, r3, r9
 8006282:	68fb      	ldr	r3, [r7, #12]
 8006284:	685b      	ldr	r3, [r3, #4]
 8006286:	2200      	movs	r2, #0
 8006288:	603b      	str	r3, [r7, #0]
 800628a:	607a      	str	r2, [r7, #4]
 800628c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006290:	4650      	mov	r0, sl
 8006292:	4659      	mov	r1, fp
 8006294:	f7fa fcf8 	bl	8000c88 <__aeabi_uldivmod>
 8006298:	4602      	mov	r2, r0
 800629a:	460b      	mov	r3, r1
 800629c:	4613      	mov	r3, r2
 800629e:	61bb      	str	r3, [r7, #24]
 80062a0:	69bb      	ldr	r3, [r7, #24]
 80062a2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80062a6:	d308      	bcc.n	80062ba <UART_SetConfig+0x3de>
 80062a8:	69bb      	ldr	r3, [r7, #24]
 80062aa:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80062ae:	d204      	bcs.n	80062ba <UART_SetConfig+0x3de>
 80062b0:	68fb      	ldr	r3, [r7, #12]
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	69ba      	ldr	r2, [r7, #24]
 80062b6:	60da      	str	r2, [r3, #12]
 80062b8:	e0b6      	b.n	8006428 <UART_SetConfig+0x54c>
 80062ba:	2301      	movs	r3, #1
 80062bc:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80062c0:	e0b2      	b.n	8006428 <UART_SetConfig+0x54c>
 80062c2:	68fb      	ldr	r3, [r7, #12]
 80062c4:	69db      	ldr	r3, [r3, #28]
 80062c6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80062ca:	d15e      	bne.n	800638a <UART_SetConfig+0x4ae>
 80062cc:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80062d0:	2b08      	cmp	r3, #8
 80062d2:	d828      	bhi.n	8006326 <UART_SetConfig+0x44a>
 80062d4:	a201      	add	r2, pc, #4	; (adr r2, 80062dc <UART_SetConfig+0x400>)
 80062d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80062da:	bf00      	nop
 80062dc:	08006301 	.word	0x08006301
 80062e0:	08006309 	.word	0x08006309
 80062e4:	08006311 	.word	0x08006311
 80062e8:	08006327 	.word	0x08006327
 80062ec:	08006317 	.word	0x08006317
 80062f0:	08006327 	.word	0x08006327
 80062f4:	08006327 	.word	0x08006327
 80062f8:	08006327 	.word	0x08006327
 80062fc:	0800631f 	.word	0x0800631f
 8006300:	f7fd ff02 	bl	8004108 <HAL_RCC_GetPCLK1Freq>
 8006304:	61f8      	str	r0, [r7, #28]
 8006306:	e014      	b.n	8006332 <UART_SetConfig+0x456>
 8006308:	f7fd ff14 	bl	8004134 <HAL_RCC_GetPCLK2Freq>
 800630c:	61f8      	str	r0, [r7, #28]
 800630e:	e010      	b.n	8006332 <UART_SetConfig+0x456>
 8006310:	4b4d      	ldr	r3, [pc, #308]	; (8006448 <UART_SetConfig+0x56c>)
 8006312:	61fb      	str	r3, [r7, #28]
 8006314:	e00d      	b.n	8006332 <UART_SetConfig+0x456>
 8006316:	f7fd fe5f 	bl	8003fd8 <HAL_RCC_GetSysClockFreq>
 800631a:	61f8      	str	r0, [r7, #28]
 800631c:	e009      	b.n	8006332 <UART_SetConfig+0x456>
 800631e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006322:	61fb      	str	r3, [r7, #28]
 8006324:	e005      	b.n	8006332 <UART_SetConfig+0x456>
 8006326:	2300      	movs	r3, #0
 8006328:	61fb      	str	r3, [r7, #28]
 800632a:	2301      	movs	r3, #1
 800632c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8006330:	bf00      	nop
 8006332:	69fb      	ldr	r3, [r7, #28]
 8006334:	2b00      	cmp	r3, #0
 8006336:	d077      	beq.n	8006428 <UART_SetConfig+0x54c>
 8006338:	69fb      	ldr	r3, [r7, #28]
 800633a:	005a      	lsls	r2, r3, #1
 800633c:	68fb      	ldr	r3, [r7, #12]
 800633e:	685b      	ldr	r3, [r3, #4]
 8006340:	085b      	lsrs	r3, r3, #1
 8006342:	441a      	add	r2, r3
 8006344:	68fb      	ldr	r3, [r7, #12]
 8006346:	685b      	ldr	r3, [r3, #4]
 8006348:	fbb2 f3f3 	udiv	r3, r2, r3
 800634c:	61bb      	str	r3, [r7, #24]
 800634e:	69bb      	ldr	r3, [r7, #24]
 8006350:	2b0f      	cmp	r3, #15
 8006352:	d916      	bls.n	8006382 <UART_SetConfig+0x4a6>
 8006354:	69bb      	ldr	r3, [r7, #24]
 8006356:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800635a:	d212      	bcs.n	8006382 <UART_SetConfig+0x4a6>
 800635c:	69bb      	ldr	r3, [r7, #24]
 800635e:	b29b      	uxth	r3, r3
 8006360:	f023 030f 	bic.w	r3, r3, #15
 8006364:	82fb      	strh	r3, [r7, #22]
 8006366:	69bb      	ldr	r3, [r7, #24]
 8006368:	085b      	lsrs	r3, r3, #1
 800636a:	b29b      	uxth	r3, r3
 800636c:	f003 0307 	and.w	r3, r3, #7
 8006370:	b29a      	uxth	r2, r3
 8006372:	8afb      	ldrh	r3, [r7, #22]
 8006374:	4313      	orrs	r3, r2
 8006376:	82fb      	strh	r3, [r7, #22]
 8006378:	68fb      	ldr	r3, [r7, #12]
 800637a:	681b      	ldr	r3, [r3, #0]
 800637c:	8afa      	ldrh	r2, [r7, #22]
 800637e:	60da      	str	r2, [r3, #12]
 8006380:	e052      	b.n	8006428 <UART_SetConfig+0x54c>
 8006382:	2301      	movs	r3, #1
 8006384:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8006388:	e04e      	b.n	8006428 <UART_SetConfig+0x54c>
 800638a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800638e:	2b08      	cmp	r3, #8
 8006390:	d827      	bhi.n	80063e2 <UART_SetConfig+0x506>
 8006392:	a201      	add	r2, pc, #4	; (adr r2, 8006398 <UART_SetConfig+0x4bc>)
 8006394:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006398:	080063bd 	.word	0x080063bd
 800639c:	080063c5 	.word	0x080063c5
 80063a0:	080063cd 	.word	0x080063cd
 80063a4:	080063e3 	.word	0x080063e3
 80063a8:	080063d3 	.word	0x080063d3
 80063ac:	080063e3 	.word	0x080063e3
 80063b0:	080063e3 	.word	0x080063e3
 80063b4:	080063e3 	.word	0x080063e3
 80063b8:	080063db 	.word	0x080063db
 80063bc:	f7fd fea4 	bl	8004108 <HAL_RCC_GetPCLK1Freq>
 80063c0:	61f8      	str	r0, [r7, #28]
 80063c2:	e014      	b.n	80063ee <UART_SetConfig+0x512>
 80063c4:	f7fd feb6 	bl	8004134 <HAL_RCC_GetPCLK2Freq>
 80063c8:	61f8      	str	r0, [r7, #28]
 80063ca:	e010      	b.n	80063ee <UART_SetConfig+0x512>
 80063cc:	4b1e      	ldr	r3, [pc, #120]	; (8006448 <UART_SetConfig+0x56c>)
 80063ce:	61fb      	str	r3, [r7, #28]
 80063d0:	e00d      	b.n	80063ee <UART_SetConfig+0x512>
 80063d2:	f7fd fe01 	bl	8003fd8 <HAL_RCC_GetSysClockFreq>
 80063d6:	61f8      	str	r0, [r7, #28]
 80063d8:	e009      	b.n	80063ee <UART_SetConfig+0x512>
 80063da:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80063de:	61fb      	str	r3, [r7, #28]
 80063e0:	e005      	b.n	80063ee <UART_SetConfig+0x512>
 80063e2:	2300      	movs	r3, #0
 80063e4:	61fb      	str	r3, [r7, #28]
 80063e6:	2301      	movs	r3, #1
 80063e8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80063ec:	bf00      	nop
 80063ee:	69fb      	ldr	r3, [r7, #28]
 80063f0:	2b00      	cmp	r3, #0
 80063f2:	d019      	beq.n	8006428 <UART_SetConfig+0x54c>
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	685b      	ldr	r3, [r3, #4]
 80063f8:	085a      	lsrs	r2, r3, #1
 80063fa:	69fb      	ldr	r3, [r7, #28]
 80063fc:	441a      	add	r2, r3
 80063fe:	68fb      	ldr	r3, [r7, #12]
 8006400:	685b      	ldr	r3, [r3, #4]
 8006402:	fbb2 f3f3 	udiv	r3, r2, r3
 8006406:	61bb      	str	r3, [r7, #24]
 8006408:	69bb      	ldr	r3, [r7, #24]
 800640a:	2b0f      	cmp	r3, #15
 800640c:	d909      	bls.n	8006422 <UART_SetConfig+0x546>
 800640e:	69bb      	ldr	r3, [r7, #24]
 8006410:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006414:	d205      	bcs.n	8006422 <UART_SetConfig+0x546>
 8006416:	69bb      	ldr	r3, [r7, #24]
 8006418:	b29a      	uxth	r2, r3
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	681b      	ldr	r3, [r3, #0]
 800641e:	60da      	str	r2, [r3, #12]
 8006420:	e002      	b.n	8006428 <UART_SetConfig+0x54c>
 8006422:	2301      	movs	r3, #1
 8006424:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8006428:	68fb      	ldr	r3, [r7, #12]
 800642a:	2200      	movs	r2, #0
 800642c:	669a      	str	r2, [r3, #104]	; 0x68
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	2200      	movs	r2, #0
 8006432:	66da      	str	r2, [r3, #108]	; 0x6c
 8006434:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8006438:	4618      	mov	r0, r3
 800643a:	3728      	adds	r7, #40	; 0x28
 800643c:	46bd      	mov	sp, r7
 800643e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006442:	bf00      	nop
 8006444:	40008000 	.word	0x40008000
 8006448:	00f42400 	.word	0x00f42400

0800644c <UART_AdvFeatureConfig>:
 800644c:	b480      	push	{r7}
 800644e:	b083      	sub	sp, #12
 8006450:	af00      	add	r7, sp, #0
 8006452:	6078      	str	r0, [r7, #4]
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006458:	f003 0308 	and.w	r3, r3, #8
 800645c:	2b00      	cmp	r3, #0
 800645e:	d00a      	beq.n	8006476 <UART_AdvFeatureConfig+0x2a>
 8006460:	687b      	ldr	r3, [r7, #4]
 8006462:	681b      	ldr	r3, [r3, #0]
 8006464:	685b      	ldr	r3, [r3, #4]
 8006466:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800646e:	687b      	ldr	r3, [r7, #4]
 8006470:	681b      	ldr	r3, [r3, #0]
 8006472:	430a      	orrs	r2, r1
 8006474:	605a      	str	r2, [r3, #4]
 8006476:	687b      	ldr	r3, [r7, #4]
 8006478:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800647a:	f003 0301 	and.w	r3, r3, #1
 800647e:	2b00      	cmp	r3, #0
 8006480:	d00a      	beq.n	8006498 <UART_AdvFeatureConfig+0x4c>
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	681b      	ldr	r3, [r3, #0]
 8006486:	685b      	ldr	r3, [r3, #4]
 8006488:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	430a      	orrs	r2, r1
 8006496:	605a      	str	r2, [r3, #4]
 8006498:	687b      	ldr	r3, [r7, #4]
 800649a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800649c:	f003 0302 	and.w	r3, r3, #2
 80064a0:	2b00      	cmp	r3, #0
 80064a2:	d00a      	beq.n	80064ba <UART_AdvFeatureConfig+0x6e>
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	681b      	ldr	r3, [r3, #0]
 80064a8:	685b      	ldr	r3, [r3, #4]
 80064aa:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	681b      	ldr	r3, [r3, #0]
 80064b6:	430a      	orrs	r2, r1
 80064b8:	605a      	str	r2, [r3, #4]
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064be:	f003 0304 	and.w	r3, r3, #4
 80064c2:	2b00      	cmp	r3, #0
 80064c4:	d00a      	beq.n	80064dc <UART_AdvFeatureConfig+0x90>
 80064c6:	687b      	ldr	r3, [r7, #4]
 80064c8:	681b      	ldr	r3, [r3, #0]
 80064ca:	685b      	ldr	r3, [r3, #4]
 80064cc:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 80064d0:	687b      	ldr	r3, [r7, #4]
 80064d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	681b      	ldr	r3, [r3, #0]
 80064d8:	430a      	orrs	r2, r1
 80064da:	605a      	str	r2, [r3, #4]
 80064dc:	687b      	ldr	r3, [r7, #4]
 80064de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064e0:	f003 0310 	and.w	r3, r3, #16
 80064e4:	2b00      	cmp	r3, #0
 80064e6:	d00a      	beq.n	80064fe <UART_AdvFeatureConfig+0xb2>
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	681b      	ldr	r3, [r3, #0]
 80064ec:	689b      	ldr	r3, [r3, #8]
 80064ee:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 80064f2:	687b      	ldr	r3, [r7, #4]
 80064f4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	681b      	ldr	r3, [r3, #0]
 80064fa:	430a      	orrs	r2, r1
 80064fc:	609a      	str	r2, [r3, #8]
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006502:	f003 0320 	and.w	r3, r3, #32
 8006506:	2b00      	cmp	r3, #0
 8006508:	d00a      	beq.n	8006520 <UART_AdvFeatureConfig+0xd4>
 800650a:	687b      	ldr	r3, [r7, #4]
 800650c:	681b      	ldr	r3, [r3, #0]
 800650e:	689b      	ldr	r3, [r3, #8]
 8006510:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8006514:	687b      	ldr	r3, [r7, #4]
 8006516:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	430a      	orrs	r2, r1
 800651e:	609a      	str	r2, [r3, #8]
 8006520:	687b      	ldr	r3, [r7, #4]
 8006522:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006524:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006528:	2b00      	cmp	r3, #0
 800652a:	d01a      	beq.n	8006562 <UART_AdvFeatureConfig+0x116>
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	681b      	ldr	r3, [r3, #0]
 8006530:	685b      	ldr	r3, [r3, #4]
 8006532:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	681b      	ldr	r3, [r3, #0]
 800653e:	430a      	orrs	r2, r1
 8006540:	605a      	str	r2, [r3, #4]
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006546:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800654a:	d10a      	bne.n	8006562 <UART_AdvFeatureConfig+0x116>
 800654c:	687b      	ldr	r3, [r7, #4]
 800654e:	681b      	ldr	r3, [r3, #0]
 8006550:	685b      	ldr	r3, [r3, #4]
 8006552:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8006556:	687b      	ldr	r3, [r7, #4]
 8006558:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	681b      	ldr	r3, [r3, #0]
 800655e:	430a      	orrs	r2, r1
 8006560:	605a      	str	r2, [r3, #4]
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006566:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800656a:	2b00      	cmp	r3, #0
 800656c:	d00a      	beq.n	8006584 <UART_AdvFeatureConfig+0x138>
 800656e:	687b      	ldr	r3, [r7, #4]
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	685b      	ldr	r3, [r3, #4]
 8006574:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8006578:	687b      	ldr	r3, [r7, #4]
 800657a:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800657c:	687b      	ldr	r3, [r7, #4]
 800657e:	681b      	ldr	r3, [r3, #0]
 8006580:	430a      	orrs	r2, r1
 8006582:	605a      	str	r2, [r3, #4]
 8006584:	bf00      	nop
 8006586:	370c      	adds	r7, #12
 8006588:	46bd      	mov	sp, r7
 800658a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800658e:	4770      	bx	lr

08006590 <UART_CheckIdleState>:
 8006590:	b580      	push	{r7, lr}
 8006592:	b098      	sub	sp, #96	; 0x60
 8006594:	af02      	add	r7, sp, #8
 8006596:	6078      	str	r0, [r7, #4]
 8006598:	687b      	ldr	r3, [r7, #4]
 800659a:	2200      	movs	r2, #0
 800659c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80065a0:	f7fc fc9a 	bl	8002ed8 <HAL_GetTick>
 80065a4:	6578      	str	r0, [r7, #84]	; 0x54
 80065a6:	687b      	ldr	r3, [r7, #4]
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	f003 0308 	and.w	r3, r3, #8
 80065b0:	2b08      	cmp	r3, #8
 80065b2:	d12e      	bne.n	8006612 <UART_CheckIdleState+0x82>
 80065b4:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80065b8:	9300      	str	r3, [sp, #0]
 80065ba:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80065bc:	2200      	movs	r2, #0
 80065be:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80065c2:	6878      	ldr	r0, [r7, #4]
 80065c4:	f000 f88c 	bl	80066e0 <UART_WaitOnFlagUntilTimeout>
 80065c8:	4603      	mov	r3, r0
 80065ca:	2b00      	cmp	r3, #0
 80065cc:	d021      	beq.n	8006612 <UART_CheckIdleState+0x82>
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	681b      	ldr	r3, [r3, #0]
 80065d2:	63bb      	str	r3, [r7, #56]	; 0x38
 80065d4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80065d6:	e853 3f00 	ldrex	r3, [r3]
 80065da:	637b      	str	r3, [r7, #52]	; 0x34
 80065dc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80065de:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80065e2:	653b      	str	r3, [r7, #80]	; 0x50
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	681b      	ldr	r3, [r3, #0]
 80065e8:	461a      	mov	r2, r3
 80065ea:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80065ec:	647b      	str	r3, [r7, #68]	; 0x44
 80065ee:	643a      	str	r2, [r7, #64]	; 0x40
 80065f0:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80065f2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80065f4:	e841 2300 	strex	r3, r2, [r1]
 80065f8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80065fa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80065fc:	2b00      	cmp	r3, #0
 80065fe:	d1e6      	bne.n	80065ce <UART_CheckIdleState+0x3e>
 8006600:	687b      	ldr	r3, [r7, #4]
 8006602:	2220      	movs	r2, #32
 8006604:	67da      	str	r2, [r3, #124]	; 0x7c
 8006606:	687b      	ldr	r3, [r7, #4]
 8006608:	2200      	movs	r2, #0
 800660a:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 800660e:	2303      	movs	r3, #3
 8006610:	e062      	b.n	80066d8 <UART_CheckIdleState+0x148>
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	681b      	ldr	r3, [r3, #0]
 8006616:	681b      	ldr	r3, [r3, #0]
 8006618:	f003 0304 	and.w	r3, r3, #4
 800661c:	2b04      	cmp	r3, #4
 800661e:	d149      	bne.n	80066b4 <UART_CheckIdleState+0x124>
 8006620:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8006624:	9300      	str	r3, [sp, #0]
 8006626:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8006628:	2200      	movs	r2, #0
 800662a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800662e:	6878      	ldr	r0, [r7, #4]
 8006630:	f000 f856 	bl	80066e0 <UART_WaitOnFlagUntilTimeout>
 8006634:	4603      	mov	r3, r0
 8006636:	2b00      	cmp	r3, #0
 8006638:	d03c      	beq.n	80066b4 <UART_CheckIdleState+0x124>
 800663a:	687b      	ldr	r3, [r7, #4]
 800663c:	681b      	ldr	r3, [r3, #0]
 800663e:	627b      	str	r3, [r7, #36]	; 0x24
 8006640:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006642:	e853 3f00 	ldrex	r3, [r3]
 8006646:	623b      	str	r3, [r7, #32]
 8006648:	6a3b      	ldr	r3, [r7, #32]
 800664a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800664e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006650:	687b      	ldr	r3, [r7, #4]
 8006652:	681b      	ldr	r3, [r3, #0]
 8006654:	461a      	mov	r2, r3
 8006656:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006658:	633b      	str	r3, [r7, #48]	; 0x30
 800665a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800665c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800665e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006660:	e841 2300 	strex	r3, r2, [r1]
 8006664:	62bb      	str	r3, [r7, #40]	; 0x28
 8006666:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006668:	2b00      	cmp	r3, #0
 800666a:	d1e6      	bne.n	800663a <UART_CheckIdleState+0xaa>
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	681b      	ldr	r3, [r3, #0]
 8006670:	3308      	adds	r3, #8
 8006672:	613b      	str	r3, [r7, #16]
 8006674:	693b      	ldr	r3, [r7, #16]
 8006676:	e853 3f00 	ldrex	r3, [r3]
 800667a:	60fb      	str	r3, [r7, #12]
 800667c:	68fb      	ldr	r3, [r7, #12]
 800667e:	f023 0301 	bic.w	r3, r3, #1
 8006682:	64bb      	str	r3, [r7, #72]	; 0x48
 8006684:	687b      	ldr	r3, [r7, #4]
 8006686:	681b      	ldr	r3, [r3, #0]
 8006688:	3308      	adds	r3, #8
 800668a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800668c:	61fa      	str	r2, [r7, #28]
 800668e:	61bb      	str	r3, [r7, #24]
 8006690:	69b9      	ldr	r1, [r7, #24]
 8006692:	69fa      	ldr	r2, [r7, #28]
 8006694:	e841 2300 	strex	r3, r2, [r1]
 8006698:	617b      	str	r3, [r7, #20]
 800669a:	697b      	ldr	r3, [r7, #20]
 800669c:	2b00      	cmp	r3, #0
 800669e:	d1e5      	bne.n	800666c <UART_CheckIdleState+0xdc>
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	2220      	movs	r2, #32
 80066a4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80066a8:	687b      	ldr	r3, [r7, #4]
 80066aa:	2200      	movs	r2, #0
 80066ac:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 80066b0:	2303      	movs	r3, #3
 80066b2:	e011      	b.n	80066d8 <UART_CheckIdleState+0x148>
 80066b4:	687b      	ldr	r3, [r7, #4]
 80066b6:	2220      	movs	r2, #32
 80066b8:	67da      	str	r2, [r3, #124]	; 0x7c
 80066ba:	687b      	ldr	r3, [r7, #4]
 80066bc:	2220      	movs	r2, #32
 80066be:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80066c2:	687b      	ldr	r3, [r7, #4]
 80066c4:	2200      	movs	r2, #0
 80066c6:	661a      	str	r2, [r3, #96]	; 0x60
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	2200      	movs	r2, #0
 80066cc:	665a      	str	r2, [r3, #100]	; 0x64
 80066ce:	687b      	ldr	r3, [r7, #4]
 80066d0:	2200      	movs	r2, #0
 80066d2:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 80066d6:	2300      	movs	r3, #0
 80066d8:	4618      	mov	r0, r3
 80066da:	3758      	adds	r7, #88	; 0x58
 80066dc:	46bd      	mov	sp, r7
 80066de:	bd80      	pop	{r7, pc}

080066e0 <UART_WaitOnFlagUntilTimeout>:
 80066e0:	b580      	push	{r7, lr}
 80066e2:	b084      	sub	sp, #16
 80066e4:	af00      	add	r7, sp, #0
 80066e6:	60f8      	str	r0, [r7, #12]
 80066e8:	60b9      	str	r1, [r7, #8]
 80066ea:	603b      	str	r3, [r7, #0]
 80066ec:	4613      	mov	r3, r2
 80066ee:	71fb      	strb	r3, [r7, #7]
 80066f0:	e049      	b.n	8006786 <UART_WaitOnFlagUntilTimeout+0xa6>
 80066f2:	69bb      	ldr	r3, [r7, #24]
 80066f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80066f8:	d045      	beq.n	8006786 <UART_WaitOnFlagUntilTimeout+0xa6>
 80066fa:	f7fc fbed 	bl	8002ed8 <HAL_GetTick>
 80066fe:	4602      	mov	r2, r0
 8006700:	683b      	ldr	r3, [r7, #0]
 8006702:	1ad3      	subs	r3, r2, r3
 8006704:	69ba      	ldr	r2, [r7, #24]
 8006706:	429a      	cmp	r2, r3
 8006708:	d302      	bcc.n	8006710 <UART_WaitOnFlagUntilTimeout+0x30>
 800670a:	69bb      	ldr	r3, [r7, #24]
 800670c:	2b00      	cmp	r3, #0
 800670e:	d101      	bne.n	8006714 <UART_WaitOnFlagUntilTimeout+0x34>
 8006710:	2303      	movs	r3, #3
 8006712:	e048      	b.n	80067a6 <UART_WaitOnFlagUntilTimeout+0xc6>
 8006714:	68fb      	ldr	r3, [r7, #12]
 8006716:	681b      	ldr	r3, [r3, #0]
 8006718:	681b      	ldr	r3, [r3, #0]
 800671a:	f003 0304 	and.w	r3, r3, #4
 800671e:	2b00      	cmp	r3, #0
 8006720:	d031      	beq.n	8006786 <UART_WaitOnFlagUntilTimeout+0xa6>
 8006722:	68fb      	ldr	r3, [r7, #12]
 8006724:	681b      	ldr	r3, [r3, #0]
 8006726:	69db      	ldr	r3, [r3, #28]
 8006728:	f003 0308 	and.w	r3, r3, #8
 800672c:	2b08      	cmp	r3, #8
 800672e:	d110      	bne.n	8006752 <UART_WaitOnFlagUntilTimeout+0x72>
 8006730:	68fb      	ldr	r3, [r7, #12]
 8006732:	681b      	ldr	r3, [r3, #0]
 8006734:	2208      	movs	r2, #8
 8006736:	621a      	str	r2, [r3, #32]
 8006738:	68f8      	ldr	r0, [r7, #12]
 800673a:	f000 f838 	bl	80067ae <UART_EndRxTransfer>
 800673e:	68fb      	ldr	r3, [r7, #12]
 8006740:	2208      	movs	r2, #8
 8006742:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8006746:	68fb      	ldr	r3, [r7, #12]
 8006748:	2200      	movs	r2, #0
 800674a:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 800674e:	2301      	movs	r3, #1
 8006750:	e029      	b.n	80067a6 <UART_WaitOnFlagUntilTimeout+0xc6>
 8006752:	68fb      	ldr	r3, [r7, #12]
 8006754:	681b      	ldr	r3, [r3, #0]
 8006756:	69db      	ldr	r3, [r3, #28]
 8006758:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800675c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006760:	d111      	bne.n	8006786 <UART_WaitOnFlagUntilTimeout+0xa6>
 8006762:	68fb      	ldr	r3, [r7, #12]
 8006764:	681b      	ldr	r3, [r3, #0]
 8006766:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800676a:	621a      	str	r2, [r3, #32]
 800676c:	68f8      	ldr	r0, [r7, #12]
 800676e:	f000 f81e 	bl	80067ae <UART_EndRxTransfer>
 8006772:	68fb      	ldr	r3, [r7, #12]
 8006774:	2220      	movs	r2, #32
 8006776:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800677a:	68fb      	ldr	r3, [r7, #12]
 800677c:	2200      	movs	r2, #0
 800677e:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8006782:	2303      	movs	r3, #3
 8006784:	e00f      	b.n	80067a6 <UART_WaitOnFlagUntilTimeout+0xc6>
 8006786:	68fb      	ldr	r3, [r7, #12]
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	69da      	ldr	r2, [r3, #28]
 800678c:	68bb      	ldr	r3, [r7, #8]
 800678e:	4013      	ands	r3, r2
 8006790:	68ba      	ldr	r2, [r7, #8]
 8006792:	429a      	cmp	r2, r3
 8006794:	bf0c      	ite	eq
 8006796:	2301      	moveq	r3, #1
 8006798:	2300      	movne	r3, #0
 800679a:	b2db      	uxtb	r3, r3
 800679c:	461a      	mov	r2, r3
 800679e:	79fb      	ldrb	r3, [r7, #7]
 80067a0:	429a      	cmp	r2, r3
 80067a2:	d0a6      	beq.n	80066f2 <UART_WaitOnFlagUntilTimeout+0x12>
 80067a4:	2300      	movs	r3, #0
 80067a6:	4618      	mov	r0, r3
 80067a8:	3710      	adds	r7, #16
 80067aa:	46bd      	mov	sp, r7
 80067ac:	bd80      	pop	{r7, pc}

080067ae <UART_EndRxTransfer>:
 80067ae:	b480      	push	{r7}
 80067b0:	b095      	sub	sp, #84	; 0x54
 80067b2:	af00      	add	r7, sp, #0
 80067b4:	6078      	str	r0, [r7, #4]
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	637b      	str	r3, [r7, #52]	; 0x34
 80067bc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80067be:	e853 3f00 	ldrex	r3, [r3]
 80067c2:	633b      	str	r3, [r7, #48]	; 0x30
 80067c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80067c6:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80067ca:	64fb      	str	r3, [r7, #76]	; 0x4c
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	461a      	mov	r2, r3
 80067d2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80067d4:	643b      	str	r3, [r7, #64]	; 0x40
 80067d6:	63fa      	str	r2, [r7, #60]	; 0x3c
 80067d8:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80067da:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80067dc:	e841 2300 	strex	r3, r2, [r1]
 80067e0:	63bb      	str	r3, [r7, #56]	; 0x38
 80067e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80067e4:	2b00      	cmp	r3, #0
 80067e6:	d1e6      	bne.n	80067b6 <UART_EndRxTransfer+0x8>
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	681b      	ldr	r3, [r3, #0]
 80067ec:	3308      	adds	r3, #8
 80067ee:	623b      	str	r3, [r7, #32]
 80067f0:	6a3b      	ldr	r3, [r7, #32]
 80067f2:	e853 3f00 	ldrex	r3, [r3]
 80067f6:	61fb      	str	r3, [r7, #28]
 80067f8:	69fb      	ldr	r3, [r7, #28]
 80067fa:	f023 0301 	bic.w	r3, r3, #1
 80067fe:	64bb      	str	r3, [r7, #72]	; 0x48
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	681b      	ldr	r3, [r3, #0]
 8006804:	3308      	adds	r3, #8
 8006806:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006808:	62fa      	str	r2, [r7, #44]	; 0x2c
 800680a:	62bb      	str	r3, [r7, #40]	; 0x28
 800680c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800680e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006810:	e841 2300 	strex	r3, r2, [r1]
 8006814:	627b      	str	r3, [r7, #36]	; 0x24
 8006816:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006818:	2b00      	cmp	r3, #0
 800681a:	d1e5      	bne.n	80067e8 <UART_EndRxTransfer+0x3a>
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006820:	2b01      	cmp	r3, #1
 8006822:	d118      	bne.n	8006856 <UART_EndRxTransfer+0xa8>
 8006824:	687b      	ldr	r3, [r7, #4]
 8006826:	681b      	ldr	r3, [r3, #0]
 8006828:	60fb      	str	r3, [r7, #12]
 800682a:	68fb      	ldr	r3, [r7, #12]
 800682c:	e853 3f00 	ldrex	r3, [r3]
 8006830:	60bb      	str	r3, [r7, #8]
 8006832:	68bb      	ldr	r3, [r7, #8]
 8006834:	f023 0310 	bic.w	r3, r3, #16
 8006838:	647b      	str	r3, [r7, #68]	; 0x44
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	461a      	mov	r2, r3
 8006840:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8006842:	61bb      	str	r3, [r7, #24]
 8006844:	617a      	str	r2, [r7, #20]
 8006846:	6979      	ldr	r1, [r7, #20]
 8006848:	69ba      	ldr	r2, [r7, #24]
 800684a:	e841 2300 	strex	r3, r2, [r1]
 800684e:	613b      	str	r3, [r7, #16]
 8006850:	693b      	ldr	r3, [r7, #16]
 8006852:	2b00      	cmp	r3, #0
 8006854:	d1e6      	bne.n	8006824 <UART_EndRxTransfer+0x76>
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	2220      	movs	r2, #32
 800685a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800685e:	687b      	ldr	r3, [r7, #4]
 8006860:	2200      	movs	r2, #0
 8006862:	661a      	str	r2, [r3, #96]	; 0x60
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	2200      	movs	r2, #0
 8006868:	669a      	str	r2, [r3, #104]	; 0x68
 800686a:	bf00      	nop
 800686c:	3754      	adds	r7, #84	; 0x54
 800686e:	46bd      	mov	sp, r7
 8006870:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006874:	4770      	bx	lr

08006876 <_ZdlPvj>:
 8006876:	f000 b800 	b.w	800687a <_ZdlPv>

0800687a <_ZdlPv>:
 800687a:	f000 b80f 	b.w	800689c <free>

0800687e <abort>:
 800687e:	b508      	push	{r3, lr}
 8006880:	2006      	movs	r0, #6
 8006882:	f000 fe69 	bl	8007558 <raise>
 8006886:	2001      	movs	r0, #1
 8006888:	f7fc f9cc 	bl	8002c24 <_exit>

0800688c <malloc>:
 800688c:	4b02      	ldr	r3, [pc, #8]	; (8006898 <malloc+0xc>)
 800688e:	4601      	mov	r1, r0
 8006890:	6818      	ldr	r0, [r3, #0]
 8006892:	f000 b82b 	b.w	80068ec <_malloc_r>
 8006896:	bf00      	nop
 8006898:	20000064 	.word	0x20000064

0800689c <free>:
 800689c:	4b02      	ldr	r3, [pc, #8]	; (80068a8 <free+0xc>)
 800689e:	4601      	mov	r1, r0
 80068a0:	6818      	ldr	r0, [r3, #0]
 80068a2:	f001 bd83 	b.w	80083ac <_free_r>
 80068a6:	bf00      	nop
 80068a8:	20000064 	.word	0x20000064

080068ac <sbrk_aligned>:
 80068ac:	b570      	push	{r4, r5, r6, lr}
 80068ae:	4e0e      	ldr	r6, [pc, #56]	; (80068e8 <sbrk_aligned+0x3c>)
 80068b0:	460c      	mov	r4, r1
 80068b2:	6831      	ldr	r1, [r6, #0]
 80068b4:	4605      	mov	r5, r0
 80068b6:	b911      	cbnz	r1, 80068be <sbrk_aligned+0x12>
 80068b8:	f000 fea2 	bl	8007600 <_sbrk_r>
 80068bc:	6030      	str	r0, [r6, #0]
 80068be:	4621      	mov	r1, r4
 80068c0:	4628      	mov	r0, r5
 80068c2:	f000 fe9d 	bl	8007600 <_sbrk_r>
 80068c6:	1c43      	adds	r3, r0, #1
 80068c8:	d00a      	beq.n	80068e0 <sbrk_aligned+0x34>
 80068ca:	1cc4      	adds	r4, r0, #3
 80068cc:	f024 0403 	bic.w	r4, r4, #3
 80068d0:	42a0      	cmp	r0, r4
 80068d2:	d007      	beq.n	80068e4 <sbrk_aligned+0x38>
 80068d4:	1a21      	subs	r1, r4, r0
 80068d6:	4628      	mov	r0, r5
 80068d8:	f000 fe92 	bl	8007600 <_sbrk_r>
 80068dc:	3001      	adds	r0, #1
 80068de:	d101      	bne.n	80068e4 <sbrk_aligned+0x38>
 80068e0:	f04f 34ff 	mov.w	r4, #4294967295
 80068e4:	4620      	mov	r0, r4
 80068e6:	bd70      	pop	{r4, r5, r6, pc}
 80068e8:	200004cc 	.word	0x200004cc

080068ec <_malloc_r>:
 80068ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80068f0:	1ccd      	adds	r5, r1, #3
 80068f2:	f025 0503 	bic.w	r5, r5, #3
 80068f6:	3508      	adds	r5, #8
 80068f8:	2d0c      	cmp	r5, #12
 80068fa:	bf38      	it	cc
 80068fc:	250c      	movcc	r5, #12
 80068fe:	2d00      	cmp	r5, #0
 8006900:	4607      	mov	r7, r0
 8006902:	db01      	blt.n	8006908 <_malloc_r+0x1c>
 8006904:	42a9      	cmp	r1, r5
 8006906:	d905      	bls.n	8006914 <_malloc_r+0x28>
 8006908:	230c      	movs	r3, #12
 800690a:	603b      	str	r3, [r7, #0]
 800690c:	2600      	movs	r6, #0
 800690e:	4630      	mov	r0, r6
 8006910:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006914:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80069e8 <_malloc_r+0xfc>
 8006918:	f000 f868 	bl	80069ec <__malloc_lock>
 800691c:	f8d8 3000 	ldr.w	r3, [r8]
 8006920:	461c      	mov	r4, r3
 8006922:	bb5c      	cbnz	r4, 800697c <_malloc_r+0x90>
 8006924:	4629      	mov	r1, r5
 8006926:	4638      	mov	r0, r7
 8006928:	f7ff ffc0 	bl	80068ac <sbrk_aligned>
 800692c:	1c43      	adds	r3, r0, #1
 800692e:	4604      	mov	r4, r0
 8006930:	d155      	bne.n	80069de <_malloc_r+0xf2>
 8006932:	f8d8 4000 	ldr.w	r4, [r8]
 8006936:	4626      	mov	r6, r4
 8006938:	2e00      	cmp	r6, #0
 800693a:	d145      	bne.n	80069c8 <_malloc_r+0xdc>
 800693c:	2c00      	cmp	r4, #0
 800693e:	d048      	beq.n	80069d2 <_malloc_r+0xe6>
 8006940:	6823      	ldr	r3, [r4, #0]
 8006942:	4631      	mov	r1, r6
 8006944:	4638      	mov	r0, r7
 8006946:	eb04 0903 	add.w	r9, r4, r3
 800694a:	f000 fe59 	bl	8007600 <_sbrk_r>
 800694e:	4581      	cmp	r9, r0
 8006950:	d13f      	bne.n	80069d2 <_malloc_r+0xe6>
 8006952:	6821      	ldr	r1, [r4, #0]
 8006954:	1a6d      	subs	r5, r5, r1
 8006956:	4629      	mov	r1, r5
 8006958:	4638      	mov	r0, r7
 800695a:	f7ff ffa7 	bl	80068ac <sbrk_aligned>
 800695e:	3001      	adds	r0, #1
 8006960:	d037      	beq.n	80069d2 <_malloc_r+0xe6>
 8006962:	6823      	ldr	r3, [r4, #0]
 8006964:	442b      	add	r3, r5
 8006966:	6023      	str	r3, [r4, #0]
 8006968:	f8d8 3000 	ldr.w	r3, [r8]
 800696c:	2b00      	cmp	r3, #0
 800696e:	d038      	beq.n	80069e2 <_malloc_r+0xf6>
 8006970:	685a      	ldr	r2, [r3, #4]
 8006972:	42a2      	cmp	r2, r4
 8006974:	d12b      	bne.n	80069ce <_malloc_r+0xe2>
 8006976:	2200      	movs	r2, #0
 8006978:	605a      	str	r2, [r3, #4]
 800697a:	e00f      	b.n	800699c <_malloc_r+0xb0>
 800697c:	6822      	ldr	r2, [r4, #0]
 800697e:	1b52      	subs	r2, r2, r5
 8006980:	d41f      	bmi.n	80069c2 <_malloc_r+0xd6>
 8006982:	2a0b      	cmp	r2, #11
 8006984:	d917      	bls.n	80069b6 <_malloc_r+0xca>
 8006986:	1961      	adds	r1, r4, r5
 8006988:	42a3      	cmp	r3, r4
 800698a:	6025      	str	r5, [r4, #0]
 800698c:	bf18      	it	ne
 800698e:	6059      	strne	r1, [r3, #4]
 8006990:	6863      	ldr	r3, [r4, #4]
 8006992:	bf08      	it	eq
 8006994:	f8c8 1000 	streq.w	r1, [r8]
 8006998:	5162      	str	r2, [r4, r5]
 800699a:	604b      	str	r3, [r1, #4]
 800699c:	4638      	mov	r0, r7
 800699e:	f104 060b 	add.w	r6, r4, #11
 80069a2:	f000 f829 	bl	80069f8 <__malloc_unlock>
 80069a6:	f026 0607 	bic.w	r6, r6, #7
 80069aa:	1d23      	adds	r3, r4, #4
 80069ac:	1af2      	subs	r2, r6, r3
 80069ae:	d0ae      	beq.n	800690e <_malloc_r+0x22>
 80069b0:	1b9b      	subs	r3, r3, r6
 80069b2:	50a3      	str	r3, [r4, r2]
 80069b4:	e7ab      	b.n	800690e <_malloc_r+0x22>
 80069b6:	42a3      	cmp	r3, r4
 80069b8:	6862      	ldr	r2, [r4, #4]
 80069ba:	d1dd      	bne.n	8006978 <_malloc_r+0x8c>
 80069bc:	f8c8 2000 	str.w	r2, [r8]
 80069c0:	e7ec      	b.n	800699c <_malloc_r+0xb0>
 80069c2:	4623      	mov	r3, r4
 80069c4:	6864      	ldr	r4, [r4, #4]
 80069c6:	e7ac      	b.n	8006922 <_malloc_r+0x36>
 80069c8:	4634      	mov	r4, r6
 80069ca:	6876      	ldr	r6, [r6, #4]
 80069cc:	e7b4      	b.n	8006938 <_malloc_r+0x4c>
 80069ce:	4613      	mov	r3, r2
 80069d0:	e7cc      	b.n	800696c <_malloc_r+0x80>
 80069d2:	230c      	movs	r3, #12
 80069d4:	603b      	str	r3, [r7, #0]
 80069d6:	4638      	mov	r0, r7
 80069d8:	f000 f80e 	bl	80069f8 <__malloc_unlock>
 80069dc:	e797      	b.n	800690e <_malloc_r+0x22>
 80069de:	6025      	str	r5, [r4, #0]
 80069e0:	e7dc      	b.n	800699c <_malloc_r+0xb0>
 80069e2:	605b      	str	r3, [r3, #4]
 80069e4:	deff      	udf	#255	; 0xff
 80069e6:	bf00      	nop
 80069e8:	200004c8 	.word	0x200004c8

080069ec <__malloc_lock>:
 80069ec:	4801      	ldr	r0, [pc, #4]	; (80069f4 <__malloc_lock+0x8>)
 80069ee:	f000 be53 	b.w	8007698 <__retarget_lock_acquire_recursive>
 80069f2:	bf00      	nop
 80069f4:	20000610 	.word	0x20000610

080069f8 <__malloc_unlock>:
 80069f8:	4801      	ldr	r0, [pc, #4]	; (8006a00 <__malloc_unlock+0x8>)
 80069fa:	f000 be4e 	b.w	800769a <__retarget_lock_release_recursive>
 80069fe:	bf00      	nop
 8006a00:	20000610 	.word	0x20000610

08006a04 <__cvt>:
 8006a04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006a08:	ec55 4b10 	vmov	r4, r5, d0
 8006a0c:	2d00      	cmp	r5, #0
 8006a0e:	460e      	mov	r6, r1
 8006a10:	4619      	mov	r1, r3
 8006a12:	462b      	mov	r3, r5
 8006a14:	bfbb      	ittet	lt
 8006a16:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8006a1a:	461d      	movlt	r5, r3
 8006a1c:	2300      	movge	r3, #0
 8006a1e:	232d      	movlt	r3, #45	; 0x2d
 8006a20:	700b      	strb	r3, [r1, #0]
 8006a22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006a24:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8006a28:	4691      	mov	r9, r2
 8006a2a:	f023 0820 	bic.w	r8, r3, #32
 8006a2e:	bfbc      	itt	lt
 8006a30:	4622      	movlt	r2, r4
 8006a32:	4614      	movlt	r4, r2
 8006a34:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8006a38:	d005      	beq.n	8006a46 <__cvt+0x42>
 8006a3a:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8006a3e:	d100      	bne.n	8006a42 <__cvt+0x3e>
 8006a40:	3601      	adds	r6, #1
 8006a42:	2102      	movs	r1, #2
 8006a44:	e000      	b.n	8006a48 <__cvt+0x44>
 8006a46:	2103      	movs	r1, #3
 8006a48:	ab03      	add	r3, sp, #12
 8006a4a:	9301      	str	r3, [sp, #4]
 8006a4c:	ab02      	add	r3, sp, #8
 8006a4e:	9300      	str	r3, [sp, #0]
 8006a50:	ec45 4b10 	vmov	d0, r4, r5
 8006a54:	4653      	mov	r3, sl
 8006a56:	4632      	mov	r2, r6
 8006a58:	f000 feb6 	bl	80077c8 <_dtoa_r>
 8006a5c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8006a60:	4607      	mov	r7, r0
 8006a62:	d102      	bne.n	8006a6a <__cvt+0x66>
 8006a64:	f019 0f01 	tst.w	r9, #1
 8006a68:	d022      	beq.n	8006ab0 <__cvt+0xac>
 8006a6a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8006a6e:	eb07 0906 	add.w	r9, r7, r6
 8006a72:	d110      	bne.n	8006a96 <__cvt+0x92>
 8006a74:	783b      	ldrb	r3, [r7, #0]
 8006a76:	2b30      	cmp	r3, #48	; 0x30
 8006a78:	d10a      	bne.n	8006a90 <__cvt+0x8c>
 8006a7a:	2200      	movs	r2, #0
 8006a7c:	2300      	movs	r3, #0
 8006a7e:	4620      	mov	r0, r4
 8006a80:	4629      	mov	r1, r5
 8006a82:	f7fa f821 	bl	8000ac8 <__aeabi_dcmpeq>
 8006a86:	b918      	cbnz	r0, 8006a90 <__cvt+0x8c>
 8006a88:	f1c6 0601 	rsb	r6, r6, #1
 8006a8c:	f8ca 6000 	str.w	r6, [sl]
 8006a90:	f8da 3000 	ldr.w	r3, [sl]
 8006a94:	4499      	add	r9, r3
 8006a96:	2200      	movs	r2, #0
 8006a98:	2300      	movs	r3, #0
 8006a9a:	4620      	mov	r0, r4
 8006a9c:	4629      	mov	r1, r5
 8006a9e:	f7fa f813 	bl	8000ac8 <__aeabi_dcmpeq>
 8006aa2:	b108      	cbz	r0, 8006aa8 <__cvt+0xa4>
 8006aa4:	f8cd 900c 	str.w	r9, [sp, #12]
 8006aa8:	2230      	movs	r2, #48	; 0x30
 8006aaa:	9b03      	ldr	r3, [sp, #12]
 8006aac:	454b      	cmp	r3, r9
 8006aae:	d307      	bcc.n	8006ac0 <__cvt+0xbc>
 8006ab0:	9b03      	ldr	r3, [sp, #12]
 8006ab2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006ab4:	1bdb      	subs	r3, r3, r7
 8006ab6:	4638      	mov	r0, r7
 8006ab8:	6013      	str	r3, [r2, #0]
 8006aba:	b004      	add	sp, #16
 8006abc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ac0:	1c59      	adds	r1, r3, #1
 8006ac2:	9103      	str	r1, [sp, #12]
 8006ac4:	701a      	strb	r2, [r3, #0]
 8006ac6:	e7f0      	b.n	8006aaa <__cvt+0xa6>

08006ac8 <__exponent>:
 8006ac8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006aca:	4603      	mov	r3, r0
 8006acc:	2900      	cmp	r1, #0
 8006ace:	bfb8      	it	lt
 8006ad0:	4249      	neglt	r1, r1
 8006ad2:	f803 2b02 	strb.w	r2, [r3], #2
 8006ad6:	bfb4      	ite	lt
 8006ad8:	222d      	movlt	r2, #45	; 0x2d
 8006ada:	222b      	movge	r2, #43	; 0x2b
 8006adc:	2909      	cmp	r1, #9
 8006ade:	7042      	strb	r2, [r0, #1]
 8006ae0:	dd2a      	ble.n	8006b38 <__exponent+0x70>
 8006ae2:	f10d 0207 	add.w	r2, sp, #7
 8006ae6:	4617      	mov	r7, r2
 8006ae8:	260a      	movs	r6, #10
 8006aea:	4694      	mov	ip, r2
 8006aec:	fb91 f5f6 	sdiv	r5, r1, r6
 8006af0:	fb06 1415 	mls	r4, r6, r5, r1
 8006af4:	3430      	adds	r4, #48	; 0x30
 8006af6:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8006afa:	460c      	mov	r4, r1
 8006afc:	2c63      	cmp	r4, #99	; 0x63
 8006afe:	f102 32ff 	add.w	r2, r2, #4294967295
 8006b02:	4629      	mov	r1, r5
 8006b04:	dcf1      	bgt.n	8006aea <__exponent+0x22>
 8006b06:	3130      	adds	r1, #48	; 0x30
 8006b08:	f1ac 0402 	sub.w	r4, ip, #2
 8006b0c:	f802 1c01 	strb.w	r1, [r2, #-1]
 8006b10:	1c41      	adds	r1, r0, #1
 8006b12:	4622      	mov	r2, r4
 8006b14:	42ba      	cmp	r2, r7
 8006b16:	d30a      	bcc.n	8006b2e <__exponent+0x66>
 8006b18:	f10d 0209 	add.w	r2, sp, #9
 8006b1c:	eba2 020c 	sub.w	r2, r2, ip
 8006b20:	42bc      	cmp	r4, r7
 8006b22:	bf88      	it	hi
 8006b24:	2200      	movhi	r2, #0
 8006b26:	4413      	add	r3, r2
 8006b28:	1a18      	subs	r0, r3, r0
 8006b2a:	b003      	add	sp, #12
 8006b2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006b2e:	f812 5b01 	ldrb.w	r5, [r2], #1
 8006b32:	f801 5f01 	strb.w	r5, [r1, #1]!
 8006b36:	e7ed      	b.n	8006b14 <__exponent+0x4c>
 8006b38:	2330      	movs	r3, #48	; 0x30
 8006b3a:	3130      	adds	r1, #48	; 0x30
 8006b3c:	7083      	strb	r3, [r0, #2]
 8006b3e:	70c1      	strb	r1, [r0, #3]
 8006b40:	1d03      	adds	r3, r0, #4
 8006b42:	e7f1      	b.n	8006b28 <__exponent+0x60>

08006b44 <_printf_float>:
 8006b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b48:	ed2d 8b02 	vpush	{d8}
 8006b4c:	b08d      	sub	sp, #52	; 0x34
 8006b4e:	460c      	mov	r4, r1
 8006b50:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8006b54:	4616      	mov	r6, r2
 8006b56:	461f      	mov	r7, r3
 8006b58:	4605      	mov	r5, r0
 8006b5a:	f000 fd05 	bl	8007568 <_localeconv_r>
 8006b5e:	f8d0 a000 	ldr.w	sl, [r0]
 8006b62:	4650      	mov	r0, sl
 8006b64:	f7f9 fb84 	bl	8000270 <strlen>
 8006b68:	2300      	movs	r3, #0
 8006b6a:	930a      	str	r3, [sp, #40]	; 0x28
 8006b6c:	6823      	ldr	r3, [r4, #0]
 8006b6e:	9305      	str	r3, [sp, #20]
 8006b70:	f8d8 3000 	ldr.w	r3, [r8]
 8006b74:	f894 b018 	ldrb.w	fp, [r4, #24]
 8006b78:	3307      	adds	r3, #7
 8006b7a:	f023 0307 	bic.w	r3, r3, #7
 8006b7e:	f103 0208 	add.w	r2, r3, #8
 8006b82:	f8c8 2000 	str.w	r2, [r8]
 8006b86:	e9d3 8900 	ldrd	r8, r9, [r3]
 8006b8a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8006b8e:	9307      	str	r3, [sp, #28]
 8006b90:	f8cd 8018 	str.w	r8, [sp, #24]
 8006b94:	ee08 0a10 	vmov	s16, r0
 8006b98:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8006b9c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006ba0:	4b9e      	ldr	r3, [pc, #632]	; (8006e1c <_printf_float+0x2d8>)
 8006ba2:	f04f 32ff 	mov.w	r2, #4294967295
 8006ba6:	f7f9 ffc1 	bl	8000b2c <__aeabi_dcmpun>
 8006baa:	bb88      	cbnz	r0, 8006c10 <_printf_float+0xcc>
 8006bac:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006bb0:	4b9a      	ldr	r3, [pc, #616]	; (8006e1c <_printf_float+0x2d8>)
 8006bb2:	f04f 32ff 	mov.w	r2, #4294967295
 8006bb6:	f7f9 ff9b 	bl	8000af0 <__aeabi_dcmple>
 8006bba:	bb48      	cbnz	r0, 8006c10 <_printf_float+0xcc>
 8006bbc:	2200      	movs	r2, #0
 8006bbe:	2300      	movs	r3, #0
 8006bc0:	4640      	mov	r0, r8
 8006bc2:	4649      	mov	r1, r9
 8006bc4:	f7f9 ff8a 	bl	8000adc <__aeabi_dcmplt>
 8006bc8:	b110      	cbz	r0, 8006bd0 <_printf_float+0x8c>
 8006bca:	232d      	movs	r3, #45	; 0x2d
 8006bcc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006bd0:	4a93      	ldr	r2, [pc, #588]	; (8006e20 <_printf_float+0x2dc>)
 8006bd2:	4b94      	ldr	r3, [pc, #592]	; (8006e24 <_printf_float+0x2e0>)
 8006bd4:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8006bd8:	bf94      	ite	ls
 8006bda:	4690      	movls	r8, r2
 8006bdc:	4698      	movhi	r8, r3
 8006bde:	2303      	movs	r3, #3
 8006be0:	6123      	str	r3, [r4, #16]
 8006be2:	9b05      	ldr	r3, [sp, #20]
 8006be4:	f023 0304 	bic.w	r3, r3, #4
 8006be8:	6023      	str	r3, [r4, #0]
 8006bea:	f04f 0900 	mov.w	r9, #0
 8006bee:	9700      	str	r7, [sp, #0]
 8006bf0:	4633      	mov	r3, r6
 8006bf2:	aa0b      	add	r2, sp, #44	; 0x2c
 8006bf4:	4621      	mov	r1, r4
 8006bf6:	4628      	mov	r0, r5
 8006bf8:	f000 f9da 	bl	8006fb0 <_printf_common>
 8006bfc:	3001      	adds	r0, #1
 8006bfe:	f040 8090 	bne.w	8006d22 <_printf_float+0x1de>
 8006c02:	f04f 30ff 	mov.w	r0, #4294967295
 8006c06:	b00d      	add	sp, #52	; 0x34
 8006c08:	ecbd 8b02 	vpop	{d8}
 8006c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c10:	4642      	mov	r2, r8
 8006c12:	464b      	mov	r3, r9
 8006c14:	4640      	mov	r0, r8
 8006c16:	4649      	mov	r1, r9
 8006c18:	f7f9 ff88 	bl	8000b2c <__aeabi_dcmpun>
 8006c1c:	b140      	cbz	r0, 8006c30 <_printf_float+0xec>
 8006c1e:	464b      	mov	r3, r9
 8006c20:	2b00      	cmp	r3, #0
 8006c22:	bfbc      	itt	lt
 8006c24:	232d      	movlt	r3, #45	; 0x2d
 8006c26:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8006c2a:	4a7f      	ldr	r2, [pc, #508]	; (8006e28 <_printf_float+0x2e4>)
 8006c2c:	4b7f      	ldr	r3, [pc, #508]	; (8006e2c <_printf_float+0x2e8>)
 8006c2e:	e7d1      	b.n	8006bd4 <_printf_float+0x90>
 8006c30:	6863      	ldr	r3, [r4, #4]
 8006c32:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8006c36:	9206      	str	r2, [sp, #24]
 8006c38:	1c5a      	adds	r2, r3, #1
 8006c3a:	d13f      	bne.n	8006cbc <_printf_float+0x178>
 8006c3c:	2306      	movs	r3, #6
 8006c3e:	6063      	str	r3, [r4, #4]
 8006c40:	9b05      	ldr	r3, [sp, #20]
 8006c42:	6861      	ldr	r1, [r4, #4]
 8006c44:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8006c48:	2300      	movs	r3, #0
 8006c4a:	9303      	str	r3, [sp, #12]
 8006c4c:	ab0a      	add	r3, sp, #40	; 0x28
 8006c4e:	e9cd b301 	strd	fp, r3, [sp, #4]
 8006c52:	ab09      	add	r3, sp, #36	; 0x24
 8006c54:	ec49 8b10 	vmov	d0, r8, r9
 8006c58:	9300      	str	r3, [sp, #0]
 8006c5a:	6022      	str	r2, [r4, #0]
 8006c5c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8006c60:	4628      	mov	r0, r5
 8006c62:	f7ff fecf 	bl	8006a04 <__cvt>
 8006c66:	9b06      	ldr	r3, [sp, #24]
 8006c68:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006c6a:	2b47      	cmp	r3, #71	; 0x47
 8006c6c:	4680      	mov	r8, r0
 8006c6e:	d108      	bne.n	8006c82 <_printf_float+0x13e>
 8006c70:	1cc8      	adds	r0, r1, #3
 8006c72:	db02      	blt.n	8006c7a <_printf_float+0x136>
 8006c74:	6863      	ldr	r3, [r4, #4]
 8006c76:	4299      	cmp	r1, r3
 8006c78:	dd41      	ble.n	8006cfe <_printf_float+0x1ba>
 8006c7a:	f1ab 0302 	sub.w	r3, fp, #2
 8006c7e:	fa5f fb83 	uxtb.w	fp, r3
 8006c82:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8006c86:	d820      	bhi.n	8006cca <_printf_float+0x186>
 8006c88:	3901      	subs	r1, #1
 8006c8a:	465a      	mov	r2, fp
 8006c8c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8006c90:	9109      	str	r1, [sp, #36]	; 0x24
 8006c92:	f7ff ff19 	bl	8006ac8 <__exponent>
 8006c96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006c98:	1813      	adds	r3, r2, r0
 8006c9a:	2a01      	cmp	r2, #1
 8006c9c:	4681      	mov	r9, r0
 8006c9e:	6123      	str	r3, [r4, #16]
 8006ca0:	dc02      	bgt.n	8006ca8 <_printf_float+0x164>
 8006ca2:	6822      	ldr	r2, [r4, #0]
 8006ca4:	07d2      	lsls	r2, r2, #31
 8006ca6:	d501      	bpl.n	8006cac <_printf_float+0x168>
 8006ca8:	3301      	adds	r3, #1
 8006caa:	6123      	str	r3, [r4, #16]
 8006cac:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8006cb0:	2b00      	cmp	r3, #0
 8006cb2:	d09c      	beq.n	8006bee <_printf_float+0xaa>
 8006cb4:	232d      	movs	r3, #45	; 0x2d
 8006cb6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006cba:	e798      	b.n	8006bee <_printf_float+0xaa>
 8006cbc:	9a06      	ldr	r2, [sp, #24]
 8006cbe:	2a47      	cmp	r2, #71	; 0x47
 8006cc0:	d1be      	bne.n	8006c40 <_printf_float+0xfc>
 8006cc2:	2b00      	cmp	r3, #0
 8006cc4:	d1bc      	bne.n	8006c40 <_printf_float+0xfc>
 8006cc6:	2301      	movs	r3, #1
 8006cc8:	e7b9      	b.n	8006c3e <_printf_float+0xfa>
 8006cca:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8006cce:	d118      	bne.n	8006d02 <_printf_float+0x1be>
 8006cd0:	2900      	cmp	r1, #0
 8006cd2:	6863      	ldr	r3, [r4, #4]
 8006cd4:	dd0b      	ble.n	8006cee <_printf_float+0x1aa>
 8006cd6:	6121      	str	r1, [r4, #16]
 8006cd8:	b913      	cbnz	r3, 8006ce0 <_printf_float+0x19c>
 8006cda:	6822      	ldr	r2, [r4, #0]
 8006cdc:	07d0      	lsls	r0, r2, #31
 8006cde:	d502      	bpl.n	8006ce6 <_printf_float+0x1a2>
 8006ce0:	3301      	adds	r3, #1
 8006ce2:	440b      	add	r3, r1
 8006ce4:	6123      	str	r3, [r4, #16]
 8006ce6:	65a1      	str	r1, [r4, #88]	; 0x58
 8006ce8:	f04f 0900 	mov.w	r9, #0
 8006cec:	e7de      	b.n	8006cac <_printf_float+0x168>
 8006cee:	b913      	cbnz	r3, 8006cf6 <_printf_float+0x1b2>
 8006cf0:	6822      	ldr	r2, [r4, #0]
 8006cf2:	07d2      	lsls	r2, r2, #31
 8006cf4:	d501      	bpl.n	8006cfa <_printf_float+0x1b6>
 8006cf6:	3302      	adds	r3, #2
 8006cf8:	e7f4      	b.n	8006ce4 <_printf_float+0x1a0>
 8006cfa:	2301      	movs	r3, #1
 8006cfc:	e7f2      	b.n	8006ce4 <_printf_float+0x1a0>
 8006cfe:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8006d02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006d04:	4299      	cmp	r1, r3
 8006d06:	db05      	blt.n	8006d14 <_printf_float+0x1d0>
 8006d08:	6823      	ldr	r3, [r4, #0]
 8006d0a:	6121      	str	r1, [r4, #16]
 8006d0c:	07d8      	lsls	r0, r3, #31
 8006d0e:	d5ea      	bpl.n	8006ce6 <_printf_float+0x1a2>
 8006d10:	1c4b      	adds	r3, r1, #1
 8006d12:	e7e7      	b.n	8006ce4 <_printf_float+0x1a0>
 8006d14:	2900      	cmp	r1, #0
 8006d16:	bfd4      	ite	le
 8006d18:	f1c1 0202 	rsble	r2, r1, #2
 8006d1c:	2201      	movgt	r2, #1
 8006d1e:	4413      	add	r3, r2
 8006d20:	e7e0      	b.n	8006ce4 <_printf_float+0x1a0>
 8006d22:	6823      	ldr	r3, [r4, #0]
 8006d24:	055a      	lsls	r2, r3, #21
 8006d26:	d407      	bmi.n	8006d38 <_printf_float+0x1f4>
 8006d28:	6923      	ldr	r3, [r4, #16]
 8006d2a:	4642      	mov	r2, r8
 8006d2c:	4631      	mov	r1, r6
 8006d2e:	4628      	mov	r0, r5
 8006d30:	47b8      	blx	r7
 8006d32:	3001      	adds	r0, #1
 8006d34:	d12c      	bne.n	8006d90 <_printf_float+0x24c>
 8006d36:	e764      	b.n	8006c02 <_printf_float+0xbe>
 8006d38:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8006d3c:	f240 80e0 	bls.w	8006f00 <_printf_float+0x3bc>
 8006d40:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8006d44:	2200      	movs	r2, #0
 8006d46:	2300      	movs	r3, #0
 8006d48:	f7f9 febe 	bl	8000ac8 <__aeabi_dcmpeq>
 8006d4c:	2800      	cmp	r0, #0
 8006d4e:	d034      	beq.n	8006dba <_printf_float+0x276>
 8006d50:	4a37      	ldr	r2, [pc, #220]	; (8006e30 <_printf_float+0x2ec>)
 8006d52:	2301      	movs	r3, #1
 8006d54:	4631      	mov	r1, r6
 8006d56:	4628      	mov	r0, r5
 8006d58:	47b8      	blx	r7
 8006d5a:	3001      	adds	r0, #1
 8006d5c:	f43f af51 	beq.w	8006c02 <_printf_float+0xbe>
 8006d60:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8006d64:	429a      	cmp	r2, r3
 8006d66:	db02      	blt.n	8006d6e <_printf_float+0x22a>
 8006d68:	6823      	ldr	r3, [r4, #0]
 8006d6a:	07d8      	lsls	r0, r3, #31
 8006d6c:	d510      	bpl.n	8006d90 <_printf_float+0x24c>
 8006d6e:	ee18 3a10 	vmov	r3, s16
 8006d72:	4652      	mov	r2, sl
 8006d74:	4631      	mov	r1, r6
 8006d76:	4628      	mov	r0, r5
 8006d78:	47b8      	blx	r7
 8006d7a:	3001      	adds	r0, #1
 8006d7c:	f43f af41 	beq.w	8006c02 <_printf_float+0xbe>
 8006d80:	f04f 0800 	mov.w	r8, #0
 8006d84:	f104 091a 	add.w	r9, r4, #26
 8006d88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006d8a:	3b01      	subs	r3, #1
 8006d8c:	4543      	cmp	r3, r8
 8006d8e:	dc09      	bgt.n	8006da4 <_printf_float+0x260>
 8006d90:	6823      	ldr	r3, [r4, #0]
 8006d92:	079b      	lsls	r3, r3, #30
 8006d94:	f100 8107 	bmi.w	8006fa6 <_printf_float+0x462>
 8006d98:	68e0      	ldr	r0, [r4, #12]
 8006d9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006d9c:	4298      	cmp	r0, r3
 8006d9e:	bfb8      	it	lt
 8006da0:	4618      	movlt	r0, r3
 8006da2:	e730      	b.n	8006c06 <_printf_float+0xc2>
 8006da4:	2301      	movs	r3, #1
 8006da6:	464a      	mov	r2, r9
 8006da8:	4631      	mov	r1, r6
 8006daa:	4628      	mov	r0, r5
 8006dac:	47b8      	blx	r7
 8006dae:	3001      	adds	r0, #1
 8006db0:	f43f af27 	beq.w	8006c02 <_printf_float+0xbe>
 8006db4:	f108 0801 	add.w	r8, r8, #1
 8006db8:	e7e6      	b.n	8006d88 <_printf_float+0x244>
 8006dba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006dbc:	2b00      	cmp	r3, #0
 8006dbe:	dc39      	bgt.n	8006e34 <_printf_float+0x2f0>
 8006dc0:	4a1b      	ldr	r2, [pc, #108]	; (8006e30 <_printf_float+0x2ec>)
 8006dc2:	2301      	movs	r3, #1
 8006dc4:	4631      	mov	r1, r6
 8006dc6:	4628      	mov	r0, r5
 8006dc8:	47b8      	blx	r7
 8006dca:	3001      	adds	r0, #1
 8006dcc:	f43f af19 	beq.w	8006c02 <_printf_float+0xbe>
 8006dd0:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8006dd4:	4313      	orrs	r3, r2
 8006dd6:	d102      	bne.n	8006dde <_printf_float+0x29a>
 8006dd8:	6823      	ldr	r3, [r4, #0]
 8006dda:	07d9      	lsls	r1, r3, #31
 8006ddc:	d5d8      	bpl.n	8006d90 <_printf_float+0x24c>
 8006dde:	ee18 3a10 	vmov	r3, s16
 8006de2:	4652      	mov	r2, sl
 8006de4:	4631      	mov	r1, r6
 8006de6:	4628      	mov	r0, r5
 8006de8:	47b8      	blx	r7
 8006dea:	3001      	adds	r0, #1
 8006dec:	f43f af09 	beq.w	8006c02 <_printf_float+0xbe>
 8006df0:	f04f 0900 	mov.w	r9, #0
 8006df4:	f104 0a1a 	add.w	sl, r4, #26
 8006df8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006dfa:	425b      	negs	r3, r3
 8006dfc:	454b      	cmp	r3, r9
 8006dfe:	dc01      	bgt.n	8006e04 <_printf_float+0x2c0>
 8006e00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006e02:	e792      	b.n	8006d2a <_printf_float+0x1e6>
 8006e04:	2301      	movs	r3, #1
 8006e06:	4652      	mov	r2, sl
 8006e08:	4631      	mov	r1, r6
 8006e0a:	4628      	mov	r0, r5
 8006e0c:	47b8      	blx	r7
 8006e0e:	3001      	adds	r0, #1
 8006e10:	f43f aef7 	beq.w	8006c02 <_printf_float+0xbe>
 8006e14:	f109 0901 	add.w	r9, r9, #1
 8006e18:	e7ee      	b.n	8006df8 <_printf_float+0x2b4>
 8006e1a:	bf00      	nop
 8006e1c:	7fefffff 	.word	0x7fefffff
 8006e20:	08009700 	.word	0x08009700
 8006e24:	08009704 	.word	0x08009704
 8006e28:	08009708 	.word	0x08009708
 8006e2c:	0800970c 	.word	0x0800970c
 8006e30:	08009710 	.word	0x08009710
 8006e34:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006e36:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8006e38:	429a      	cmp	r2, r3
 8006e3a:	bfa8      	it	ge
 8006e3c:	461a      	movge	r2, r3
 8006e3e:	2a00      	cmp	r2, #0
 8006e40:	4691      	mov	r9, r2
 8006e42:	dc37      	bgt.n	8006eb4 <_printf_float+0x370>
 8006e44:	f04f 0b00 	mov.w	fp, #0
 8006e48:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8006e4c:	f104 021a 	add.w	r2, r4, #26
 8006e50:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8006e52:	9305      	str	r3, [sp, #20]
 8006e54:	eba3 0309 	sub.w	r3, r3, r9
 8006e58:	455b      	cmp	r3, fp
 8006e5a:	dc33      	bgt.n	8006ec4 <_printf_float+0x380>
 8006e5c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8006e60:	429a      	cmp	r2, r3
 8006e62:	db3b      	blt.n	8006edc <_printf_float+0x398>
 8006e64:	6823      	ldr	r3, [r4, #0]
 8006e66:	07da      	lsls	r2, r3, #31
 8006e68:	d438      	bmi.n	8006edc <_printf_float+0x398>
 8006e6a:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8006e6e:	eba2 0903 	sub.w	r9, r2, r3
 8006e72:	9b05      	ldr	r3, [sp, #20]
 8006e74:	1ad2      	subs	r2, r2, r3
 8006e76:	4591      	cmp	r9, r2
 8006e78:	bfa8      	it	ge
 8006e7a:	4691      	movge	r9, r2
 8006e7c:	f1b9 0f00 	cmp.w	r9, #0
 8006e80:	dc35      	bgt.n	8006eee <_printf_float+0x3aa>
 8006e82:	f04f 0800 	mov.w	r8, #0
 8006e86:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8006e8a:	f104 0a1a 	add.w	sl, r4, #26
 8006e8e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8006e92:	1a9b      	subs	r3, r3, r2
 8006e94:	eba3 0309 	sub.w	r3, r3, r9
 8006e98:	4543      	cmp	r3, r8
 8006e9a:	f77f af79 	ble.w	8006d90 <_printf_float+0x24c>
 8006e9e:	2301      	movs	r3, #1
 8006ea0:	4652      	mov	r2, sl
 8006ea2:	4631      	mov	r1, r6
 8006ea4:	4628      	mov	r0, r5
 8006ea6:	47b8      	blx	r7
 8006ea8:	3001      	adds	r0, #1
 8006eaa:	f43f aeaa 	beq.w	8006c02 <_printf_float+0xbe>
 8006eae:	f108 0801 	add.w	r8, r8, #1
 8006eb2:	e7ec      	b.n	8006e8e <_printf_float+0x34a>
 8006eb4:	4613      	mov	r3, r2
 8006eb6:	4631      	mov	r1, r6
 8006eb8:	4642      	mov	r2, r8
 8006eba:	4628      	mov	r0, r5
 8006ebc:	47b8      	blx	r7
 8006ebe:	3001      	adds	r0, #1
 8006ec0:	d1c0      	bne.n	8006e44 <_printf_float+0x300>
 8006ec2:	e69e      	b.n	8006c02 <_printf_float+0xbe>
 8006ec4:	2301      	movs	r3, #1
 8006ec6:	4631      	mov	r1, r6
 8006ec8:	4628      	mov	r0, r5
 8006eca:	9205      	str	r2, [sp, #20]
 8006ecc:	47b8      	blx	r7
 8006ece:	3001      	adds	r0, #1
 8006ed0:	f43f ae97 	beq.w	8006c02 <_printf_float+0xbe>
 8006ed4:	9a05      	ldr	r2, [sp, #20]
 8006ed6:	f10b 0b01 	add.w	fp, fp, #1
 8006eda:	e7b9      	b.n	8006e50 <_printf_float+0x30c>
 8006edc:	ee18 3a10 	vmov	r3, s16
 8006ee0:	4652      	mov	r2, sl
 8006ee2:	4631      	mov	r1, r6
 8006ee4:	4628      	mov	r0, r5
 8006ee6:	47b8      	blx	r7
 8006ee8:	3001      	adds	r0, #1
 8006eea:	d1be      	bne.n	8006e6a <_printf_float+0x326>
 8006eec:	e689      	b.n	8006c02 <_printf_float+0xbe>
 8006eee:	9a05      	ldr	r2, [sp, #20]
 8006ef0:	464b      	mov	r3, r9
 8006ef2:	4442      	add	r2, r8
 8006ef4:	4631      	mov	r1, r6
 8006ef6:	4628      	mov	r0, r5
 8006ef8:	47b8      	blx	r7
 8006efa:	3001      	adds	r0, #1
 8006efc:	d1c1      	bne.n	8006e82 <_printf_float+0x33e>
 8006efe:	e680      	b.n	8006c02 <_printf_float+0xbe>
 8006f00:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006f02:	2a01      	cmp	r2, #1
 8006f04:	dc01      	bgt.n	8006f0a <_printf_float+0x3c6>
 8006f06:	07db      	lsls	r3, r3, #31
 8006f08:	d53a      	bpl.n	8006f80 <_printf_float+0x43c>
 8006f0a:	2301      	movs	r3, #1
 8006f0c:	4642      	mov	r2, r8
 8006f0e:	4631      	mov	r1, r6
 8006f10:	4628      	mov	r0, r5
 8006f12:	47b8      	blx	r7
 8006f14:	3001      	adds	r0, #1
 8006f16:	f43f ae74 	beq.w	8006c02 <_printf_float+0xbe>
 8006f1a:	ee18 3a10 	vmov	r3, s16
 8006f1e:	4652      	mov	r2, sl
 8006f20:	4631      	mov	r1, r6
 8006f22:	4628      	mov	r0, r5
 8006f24:	47b8      	blx	r7
 8006f26:	3001      	adds	r0, #1
 8006f28:	f43f ae6b 	beq.w	8006c02 <_printf_float+0xbe>
 8006f2c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8006f30:	2200      	movs	r2, #0
 8006f32:	2300      	movs	r3, #0
 8006f34:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8006f38:	f7f9 fdc6 	bl	8000ac8 <__aeabi_dcmpeq>
 8006f3c:	b9d8      	cbnz	r0, 8006f76 <_printf_float+0x432>
 8006f3e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8006f42:	f108 0201 	add.w	r2, r8, #1
 8006f46:	4631      	mov	r1, r6
 8006f48:	4628      	mov	r0, r5
 8006f4a:	47b8      	blx	r7
 8006f4c:	3001      	adds	r0, #1
 8006f4e:	d10e      	bne.n	8006f6e <_printf_float+0x42a>
 8006f50:	e657      	b.n	8006c02 <_printf_float+0xbe>
 8006f52:	2301      	movs	r3, #1
 8006f54:	4652      	mov	r2, sl
 8006f56:	4631      	mov	r1, r6
 8006f58:	4628      	mov	r0, r5
 8006f5a:	47b8      	blx	r7
 8006f5c:	3001      	adds	r0, #1
 8006f5e:	f43f ae50 	beq.w	8006c02 <_printf_float+0xbe>
 8006f62:	f108 0801 	add.w	r8, r8, #1
 8006f66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006f68:	3b01      	subs	r3, #1
 8006f6a:	4543      	cmp	r3, r8
 8006f6c:	dcf1      	bgt.n	8006f52 <_printf_float+0x40e>
 8006f6e:	464b      	mov	r3, r9
 8006f70:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8006f74:	e6da      	b.n	8006d2c <_printf_float+0x1e8>
 8006f76:	f04f 0800 	mov.w	r8, #0
 8006f7a:	f104 0a1a 	add.w	sl, r4, #26
 8006f7e:	e7f2      	b.n	8006f66 <_printf_float+0x422>
 8006f80:	2301      	movs	r3, #1
 8006f82:	4642      	mov	r2, r8
 8006f84:	e7df      	b.n	8006f46 <_printf_float+0x402>
 8006f86:	2301      	movs	r3, #1
 8006f88:	464a      	mov	r2, r9
 8006f8a:	4631      	mov	r1, r6
 8006f8c:	4628      	mov	r0, r5
 8006f8e:	47b8      	blx	r7
 8006f90:	3001      	adds	r0, #1
 8006f92:	f43f ae36 	beq.w	8006c02 <_printf_float+0xbe>
 8006f96:	f108 0801 	add.w	r8, r8, #1
 8006f9a:	68e3      	ldr	r3, [r4, #12]
 8006f9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006f9e:	1a5b      	subs	r3, r3, r1
 8006fa0:	4543      	cmp	r3, r8
 8006fa2:	dcf0      	bgt.n	8006f86 <_printf_float+0x442>
 8006fa4:	e6f8      	b.n	8006d98 <_printf_float+0x254>
 8006fa6:	f04f 0800 	mov.w	r8, #0
 8006faa:	f104 0919 	add.w	r9, r4, #25
 8006fae:	e7f4      	b.n	8006f9a <_printf_float+0x456>

08006fb0 <_printf_common>:
 8006fb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006fb4:	4616      	mov	r6, r2
 8006fb6:	4699      	mov	r9, r3
 8006fb8:	688a      	ldr	r2, [r1, #8]
 8006fba:	690b      	ldr	r3, [r1, #16]
 8006fbc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006fc0:	4293      	cmp	r3, r2
 8006fc2:	bfb8      	it	lt
 8006fc4:	4613      	movlt	r3, r2
 8006fc6:	6033      	str	r3, [r6, #0]
 8006fc8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8006fcc:	4607      	mov	r7, r0
 8006fce:	460c      	mov	r4, r1
 8006fd0:	b10a      	cbz	r2, 8006fd6 <_printf_common+0x26>
 8006fd2:	3301      	adds	r3, #1
 8006fd4:	6033      	str	r3, [r6, #0]
 8006fd6:	6823      	ldr	r3, [r4, #0]
 8006fd8:	0699      	lsls	r1, r3, #26
 8006fda:	bf42      	ittt	mi
 8006fdc:	6833      	ldrmi	r3, [r6, #0]
 8006fde:	3302      	addmi	r3, #2
 8006fe0:	6033      	strmi	r3, [r6, #0]
 8006fe2:	6825      	ldr	r5, [r4, #0]
 8006fe4:	f015 0506 	ands.w	r5, r5, #6
 8006fe8:	d106      	bne.n	8006ff8 <_printf_common+0x48>
 8006fea:	f104 0a19 	add.w	sl, r4, #25
 8006fee:	68e3      	ldr	r3, [r4, #12]
 8006ff0:	6832      	ldr	r2, [r6, #0]
 8006ff2:	1a9b      	subs	r3, r3, r2
 8006ff4:	42ab      	cmp	r3, r5
 8006ff6:	dc26      	bgt.n	8007046 <_printf_common+0x96>
 8006ff8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8006ffc:	1e13      	subs	r3, r2, #0
 8006ffe:	6822      	ldr	r2, [r4, #0]
 8007000:	bf18      	it	ne
 8007002:	2301      	movne	r3, #1
 8007004:	0692      	lsls	r2, r2, #26
 8007006:	d42b      	bmi.n	8007060 <_printf_common+0xb0>
 8007008:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800700c:	4649      	mov	r1, r9
 800700e:	4638      	mov	r0, r7
 8007010:	47c0      	blx	r8
 8007012:	3001      	adds	r0, #1
 8007014:	d01e      	beq.n	8007054 <_printf_common+0xa4>
 8007016:	6823      	ldr	r3, [r4, #0]
 8007018:	6922      	ldr	r2, [r4, #16]
 800701a:	f003 0306 	and.w	r3, r3, #6
 800701e:	2b04      	cmp	r3, #4
 8007020:	bf02      	ittt	eq
 8007022:	68e5      	ldreq	r5, [r4, #12]
 8007024:	6833      	ldreq	r3, [r6, #0]
 8007026:	1aed      	subeq	r5, r5, r3
 8007028:	68a3      	ldr	r3, [r4, #8]
 800702a:	bf0c      	ite	eq
 800702c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007030:	2500      	movne	r5, #0
 8007032:	4293      	cmp	r3, r2
 8007034:	bfc4      	itt	gt
 8007036:	1a9b      	subgt	r3, r3, r2
 8007038:	18ed      	addgt	r5, r5, r3
 800703a:	2600      	movs	r6, #0
 800703c:	341a      	adds	r4, #26
 800703e:	42b5      	cmp	r5, r6
 8007040:	d11a      	bne.n	8007078 <_printf_common+0xc8>
 8007042:	2000      	movs	r0, #0
 8007044:	e008      	b.n	8007058 <_printf_common+0xa8>
 8007046:	2301      	movs	r3, #1
 8007048:	4652      	mov	r2, sl
 800704a:	4649      	mov	r1, r9
 800704c:	4638      	mov	r0, r7
 800704e:	47c0      	blx	r8
 8007050:	3001      	adds	r0, #1
 8007052:	d103      	bne.n	800705c <_printf_common+0xac>
 8007054:	f04f 30ff 	mov.w	r0, #4294967295
 8007058:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800705c:	3501      	adds	r5, #1
 800705e:	e7c6      	b.n	8006fee <_printf_common+0x3e>
 8007060:	18e1      	adds	r1, r4, r3
 8007062:	1c5a      	adds	r2, r3, #1
 8007064:	2030      	movs	r0, #48	; 0x30
 8007066:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800706a:	4422      	add	r2, r4
 800706c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007070:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007074:	3302      	adds	r3, #2
 8007076:	e7c7      	b.n	8007008 <_printf_common+0x58>
 8007078:	2301      	movs	r3, #1
 800707a:	4622      	mov	r2, r4
 800707c:	4649      	mov	r1, r9
 800707e:	4638      	mov	r0, r7
 8007080:	47c0      	blx	r8
 8007082:	3001      	adds	r0, #1
 8007084:	d0e6      	beq.n	8007054 <_printf_common+0xa4>
 8007086:	3601      	adds	r6, #1
 8007088:	e7d9      	b.n	800703e <_printf_common+0x8e>
	...

0800708c <_printf_i>:
 800708c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007090:	7e0f      	ldrb	r7, [r1, #24]
 8007092:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007094:	2f78      	cmp	r7, #120	; 0x78
 8007096:	4691      	mov	r9, r2
 8007098:	4680      	mov	r8, r0
 800709a:	460c      	mov	r4, r1
 800709c:	469a      	mov	sl, r3
 800709e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80070a2:	d807      	bhi.n	80070b4 <_printf_i+0x28>
 80070a4:	2f62      	cmp	r7, #98	; 0x62
 80070a6:	d80a      	bhi.n	80070be <_printf_i+0x32>
 80070a8:	2f00      	cmp	r7, #0
 80070aa:	f000 80d4 	beq.w	8007256 <_printf_i+0x1ca>
 80070ae:	2f58      	cmp	r7, #88	; 0x58
 80070b0:	f000 80c0 	beq.w	8007234 <_printf_i+0x1a8>
 80070b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80070b8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80070bc:	e03a      	b.n	8007134 <_printf_i+0xa8>
 80070be:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80070c2:	2b15      	cmp	r3, #21
 80070c4:	d8f6      	bhi.n	80070b4 <_printf_i+0x28>
 80070c6:	a101      	add	r1, pc, #4	; (adr r1, 80070cc <_printf_i+0x40>)
 80070c8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80070cc:	08007125 	.word	0x08007125
 80070d0:	08007139 	.word	0x08007139
 80070d4:	080070b5 	.word	0x080070b5
 80070d8:	080070b5 	.word	0x080070b5
 80070dc:	080070b5 	.word	0x080070b5
 80070e0:	080070b5 	.word	0x080070b5
 80070e4:	08007139 	.word	0x08007139
 80070e8:	080070b5 	.word	0x080070b5
 80070ec:	080070b5 	.word	0x080070b5
 80070f0:	080070b5 	.word	0x080070b5
 80070f4:	080070b5 	.word	0x080070b5
 80070f8:	0800723d 	.word	0x0800723d
 80070fc:	08007165 	.word	0x08007165
 8007100:	080071f7 	.word	0x080071f7
 8007104:	080070b5 	.word	0x080070b5
 8007108:	080070b5 	.word	0x080070b5
 800710c:	0800725f 	.word	0x0800725f
 8007110:	080070b5 	.word	0x080070b5
 8007114:	08007165 	.word	0x08007165
 8007118:	080070b5 	.word	0x080070b5
 800711c:	080070b5 	.word	0x080070b5
 8007120:	080071ff 	.word	0x080071ff
 8007124:	682b      	ldr	r3, [r5, #0]
 8007126:	1d1a      	adds	r2, r3, #4
 8007128:	681b      	ldr	r3, [r3, #0]
 800712a:	602a      	str	r2, [r5, #0]
 800712c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007130:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007134:	2301      	movs	r3, #1
 8007136:	e09f      	b.n	8007278 <_printf_i+0x1ec>
 8007138:	6820      	ldr	r0, [r4, #0]
 800713a:	682b      	ldr	r3, [r5, #0]
 800713c:	0607      	lsls	r7, r0, #24
 800713e:	f103 0104 	add.w	r1, r3, #4
 8007142:	6029      	str	r1, [r5, #0]
 8007144:	d501      	bpl.n	800714a <_printf_i+0xbe>
 8007146:	681e      	ldr	r6, [r3, #0]
 8007148:	e003      	b.n	8007152 <_printf_i+0xc6>
 800714a:	0646      	lsls	r6, r0, #25
 800714c:	d5fb      	bpl.n	8007146 <_printf_i+0xba>
 800714e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8007152:	2e00      	cmp	r6, #0
 8007154:	da03      	bge.n	800715e <_printf_i+0xd2>
 8007156:	232d      	movs	r3, #45	; 0x2d
 8007158:	4276      	negs	r6, r6
 800715a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800715e:	485a      	ldr	r0, [pc, #360]	; (80072c8 <_printf_i+0x23c>)
 8007160:	230a      	movs	r3, #10
 8007162:	e012      	b.n	800718a <_printf_i+0xfe>
 8007164:	682b      	ldr	r3, [r5, #0]
 8007166:	6820      	ldr	r0, [r4, #0]
 8007168:	1d19      	adds	r1, r3, #4
 800716a:	6029      	str	r1, [r5, #0]
 800716c:	0605      	lsls	r5, r0, #24
 800716e:	d501      	bpl.n	8007174 <_printf_i+0xe8>
 8007170:	681e      	ldr	r6, [r3, #0]
 8007172:	e002      	b.n	800717a <_printf_i+0xee>
 8007174:	0641      	lsls	r1, r0, #25
 8007176:	d5fb      	bpl.n	8007170 <_printf_i+0xe4>
 8007178:	881e      	ldrh	r6, [r3, #0]
 800717a:	4853      	ldr	r0, [pc, #332]	; (80072c8 <_printf_i+0x23c>)
 800717c:	2f6f      	cmp	r7, #111	; 0x6f
 800717e:	bf0c      	ite	eq
 8007180:	2308      	moveq	r3, #8
 8007182:	230a      	movne	r3, #10
 8007184:	2100      	movs	r1, #0
 8007186:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800718a:	6865      	ldr	r5, [r4, #4]
 800718c:	60a5      	str	r5, [r4, #8]
 800718e:	2d00      	cmp	r5, #0
 8007190:	bfa2      	ittt	ge
 8007192:	6821      	ldrge	r1, [r4, #0]
 8007194:	f021 0104 	bicge.w	r1, r1, #4
 8007198:	6021      	strge	r1, [r4, #0]
 800719a:	b90e      	cbnz	r6, 80071a0 <_printf_i+0x114>
 800719c:	2d00      	cmp	r5, #0
 800719e:	d04b      	beq.n	8007238 <_printf_i+0x1ac>
 80071a0:	4615      	mov	r5, r2
 80071a2:	fbb6 f1f3 	udiv	r1, r6, r3
 80071a6:	fb03 6711 	mls	r7, r3, r1, r6
 80071aa:	5dc7      	ldrb	r7, [r0, r7]
 80071ac:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80071b0:	4637      	mov	r7, r6
 80071b2:	42bb      	cmp	r3, r7
 80071b4:	460e      	mov	r6, r1
 80071b6:	d9f4      	bls.n	80071a2 <_printf_i+0x116>
 80071b8:	2b08      	cmp	r3, #8
 80071ba:	d10b      	bne.n	80071d4 <_printf_i+0x148>
 80071bc:	6823      	ldr	r3, [r4, #0]
 80071be:	07de      	lsls	r6, r3, #31
 80071c0:	d508      	bpl.n	80071d4 <_printf_i+0x148>
 80071c2:	6923      	ldr	r3, [r4, #16]
 80071c4:	6861      	ldr	r1, [r4, #4]
 80071c6:	4299      	cmp	r1, r3
 80071c8:	bfde      	ittt	le
 80071ca:	2330      	movle	r3, #48	; 0x30
 80071cc:	f805 3c01 	strble.w	r3, [r5, #-1]
 80071d0:	f105 35ff 	addle.w	r5, r5, #4294967295
 80071d4:	1b52      	subs	r2, r2, r5
 80071d6:	6122      	str	r2, [r4, #16]
 80071d8:	f8cd a000 	str.w	sl, [sp]
 80071dc:	464b      	mov	r3, r9
 80071de:	aa03      	add	r2, sp, #12
 80071e0:	4621      	mov	r1, r4
 80071e2:	4640      	mov	r0, r8
 80071e4:	f7ff fee4 	bl	8006fb0 <_printf_common>
 80071e8:	3001      	adds	r0, #1
 80071ea:	d14a      	bne.n	8007282 <_printf_i+0x1f6>
 80071ec:	f04f 30ff 	mov.w	r0, #4294967295
 80071f0:	b004      	add	sp, #16
 80071f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80071f6:	6823      	ldr	r3, [r4, #0]
 80071f8:	f043 0320 	orr.w	r3, r3, #32
 80071fc:	6023      	str	r3, [r4, #0]
 80071fe:	4833      	ldr	r0, [pc, #204]	; (80072cc <_printf_i+0x240>)
 8007200:	2778      	movs	r7, #120	; 0x78
 8007202:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8007206:	6823      	ldr	r3, [r4, #0]
 8007208:	6829      	ldr	r1, [r5, #0]
 800720a:	061f      	lsls	r7, r3, #24
 800720c:	f851 6b04 	ldr.w	r6, [r1], #4
 8007210:	d402      	bmi.n	8007218 <_printf_i+0x18c>
 8007212:	065f      	lsls	r7, r3, #25
 8007214:	bf48      	it	mi
 8007216:	b2b6      	uxthmi	r6, r6
 8007218:	07df      	lsls	r7, r3, #31
 800721a:	bf48      	it	mi
 800721c:	f043 0320 	orrmi.w	r3, r3, #32
 8007220:	6029      	str	r1, [r5, #0]
 8007222:	bf48      	it	mi
 8007224:	6023      	strmi	r3, [r4, #0]
 8007226:	b91e      	cbnz	r6, 8007230 <_printf_i+0x1a4>
 8007228:	6823      	ldr	r3, [r4, #0]
 800722a:	f023 0320 	bic.w	r3, r3, #32
 800722e:	6023      	str	r3, [r4, #0]
 8007230:	2310      	movs	r3, #16
 8007232:	e7a7      	b.n	8007184 <_printf_i+0xf8>
 8007234:	4824      	ldr	r0, [pc, #144]	; (80072c8 <_printf_i+0x23c>)
 8007236:	e7e4      	b.n	8007202 <_printf_i+0x176>
 8007238:	4615      	mov	r5, r2
 800723a:	e7bd      	b.n	80071b8 <_printf_i+0x12c>
 800723c:	682b      	ldr	r3, [r5, #0]
 800723e:	6826      	ldr	r6, [r4, #0]
 8007240:	6961      	ldr	r1, [r4, #20]
 8007242:	1d18      	adds	r0, r3, #4
 8007244:	6028      	str	r0, [r5, #0]
 8007246:	0635      	lsls	r5, r6, #24
 8007248:	681b      	ldr	r3, [r3, #0]
 800724a:	d501      	bpl.n	8007250 <_printf_i+0x1c4>
 800724c:	6019      	str	r1, [r3, #0]
 800724e:	e002      	b.n	8007256 <_printf_i+0x1ca>
 8007250:	0670      	lsls	r0, r6, #25
 8007252:	d5fb      	bpl.n	800724c <_printf_i+0x1c0>
 8007254:	8019      	strh	r1, [r3, #0]
 8007256:	2300      	movs	r3, #0
 8007258:	6123      	str	r3, [r4, #16]
 800725a:	4615      	mov	r5, r2
 800725c:	e7bc      	b.n	80071d8 <_printf_i+0x14c>
 800725e:	682b      	ldr	r3, [r5, #0]
 8007260:	1d1a      	adds	r2, r3, #4
 8007262:	602a      	str	r2, [r5, #0]
 8007264:	681d      	ldr	r5, [r3, #0]
 8007266:	6862      	ldr	r2, [r4, #4]
 8007268:	2100      	movs	r1, #0
 800726a:	4628      	mov	r0, r5
 800726c:	f7f8 ffb0 	bl	80001d0 <memchr>
 8007270:	b108      	cbz	r0, 8007276 <_printf_i+0x1ea>
 8007272:	1b40      	subs	r0, r0, r5
 8007274:	6060      	str	r0, [r4, #4]
 8007276:	6863      	ldr	r3, [r4, #4]
 8007278:	6123      	str	r3, [r4, #16]
 800727a:	2300      	movs	r3, #0
 800727c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007280:	e7aa      	b.n	80071d8 <_printf_i+0x14c>
 8007282:	6923      	ldr	r3, [r4, #16]
 8007284:	462a      	mov	r2, r5
 8007286:	4649      	mov	r1, r9
 8007288:	4640      	mov	r0, r8
 800728a:	47d0      	blx	sl
 800728c:	3001      	adds	r0, #1
 800728e:	d0ad      	beq.n	80071ec <_printf_i+0x160>
 8007290:	6823      	ldr	r3, [r4, #0]
 8007292:	079b      	lsls	r3, r3, #30
 8007294:	d413      	bmi.n	80072be <_printf_i+0x232>
 8007296:	68e0      	ldr	r0, [r4, #12]
 8007298:	9b03      	ldr	r3, [sp, #12]
 800729a:	4298      	cmp	r0, r3
 800729c:	bfb8      	it	lt
 800729e:	4618      	movlt	r0, r3
 80072a0:	e7a6      	b.n	80071f0 <_printf_i+0x164>
 80072a2:	2301      	movs	r3, #1
 80072a4:	4632      	mov	r2, r6
 80072a6:	4649      	mov	r1, r9
 80072a8:	4640      	mov	r0, r8
 80072aa:	47d0      	blx	sl
 80072ac:	3001      	adds	r0, #1
 80072ae:	d09d      	beq.n	80071ec <_printf_i+0x160>
 80072b0:	3501      	adds	r5, #1
 80072b2:	68e3      	ldr	r3, [r4, #12]
 80072b4:	9903      	ldr	r1, [sp, #12]
 80072b6:	1a5b      	subs	r3, r3, r1
 80072b8:	42ab      	cmp	r3, r5
 80072ba:	dcf2      	bgt.n	80072a2 <_printf_i+0x216>
 80072bc:	e7eb      	b.n	8007296 <_printf_i+0x20a>
 80072be:	2500      	movs	r5, #0
 80072c0:	f104 0619 	add.w	r6, r4, #25
 80072c4:	e7f5      	b.n	80072b2 <_printf_i+0x226>
 80072c6:	bf00      	nop
 80072c8:	08009712 	.word	0x08009712
 80072cc:	08009723 	.word	0x08009723

080072d0 <std>:
 80072d0:	2300      	movs	r3, #0
 80072d2:	b510      	push	{r4, lr}
 80072d4:	4604      	mov	r4, r0
 80072d6:	e9c0 3300 	strd	r3, r3, [r0]
 80072da:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80072de:	6083      	str	r3, [r0, #8]
 80072e0:	8181      	strh	r1, [r0, #12]
 80072e2:	6643      	str	r3, [r0, #100]	; 0x64
 80072e4:	81c2      	strh	r2, [r0, #14]
 80072e6:	6183      	str	r3, [r0, #24]
 80072e8:	4619      	mov	r1, r3
 80072ea:	2208      	movs	r2, #8
 80072ec:	305c      	adds	r0, #92	; 0x5c
 80072ee:	f000 f902 	bl	80074f6 <memset>
 80072f2:	4b05      	ldr	r3, [pc, #20]	; (8007308 <std+0x38>)
 80072f4:	6263      	str	r3, [r4, #36]	; 0x24
 80072f6:	4b05      	ldr	r3, [pc, #20]	; (800730c <std+0x3c>)
 80072f8:	62a3      	str	r3, [r4, #40]	; 0x28
 80072fa:	4b05      	ldr	r3, [pc, #20]	; (8007310 <std+0x40>)
 80072fc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80072fe:	4b05      	ldr	r3, [pc, #20]	; (8007314 <std+0x44>)
 8007300:	6224      	str	r4, [r4, #32]
 8007302:	6323      	str	r3, [r4, #48]	; 0x30
 8007304:	bd10      	pop	{r4, pc}
 8007306:	bf00      	nop
 8007308:	08007471 	.word	0x08007471
 800730c:	08007493 	.word	0x08007493
 8007310:	080074cb 	.word	0x080074cb
 8007314:	080074ef 	.word	0x080074ef

08007318 <stdio_exit_handler>:
 8007318:	4a02      	ldr	r2, [pc, #8]	; (8007324 <stdio_exit_handler+0xc>)
 800731a:	4903      	ldr	r1, [pc, #12]	; (8007328 <stdio_exit_handler+0x10>)
 800731c:	4803      	ldr	r0, [pc, #12]	; (800732c <stdio_exit_handler+0x14>)
 800731e:	f000 b869 	b.w	80073f4 <_fwalk_sglue>
 8007322:	bf00      	nop
 8007324:	2000000c 	.word	0x2000000c
 8007328:	08008ef9 	.word	0x08008ef9
 800732c:	20000018 	.word	0x20000018

08007330 <cleanup_stdio>:
 8007330:	6841      	ldr	r1, [r0, #4]
 8007332:	4b0c      	ldr	r3, [pc, #48]	; (8007364 <cleanup_stdio+0x34>)
 8007334:	4299      	cmp	r1, r3
 8007336:	b510      	push	{r4, lr}
 8007338:	4604      	mov	r4, r0
 800733a:	d001      	beq.n	8007340 <cleanup_stdio+0x10>
 800733c:	f001 fddc 	bl	8008ef8 <_fflush_r>
 8007340:	68a1      	ldr	r1, [r4, #8]
 8007342:	4b09      	ldr	r3, [pc, #36]	; (8007368 <cleanup_stdio+0x38>)
 8007344:	4299      	cmp	r1, r3
 8007346:	d002      	beq.n	800734e <cleanup_stdio+0x1e>
 8007348:	4620      	mov	r0, r4
 800734a:	f001 fdd5 	bl	8008ef8 <_fflush_r>
 800734e:	68e1      	ldr	r1, [r4, #12]
 8007350:	4b06      	ldr	r3, [pc, #24]	; (800736c <cleanup_stdio+0x3c>)
 8007352:	4299      	cmp	r1, r3
 8007354:	d004      	beq.n	8007360 <cleanup_stdio+0x30>
 8007356:	4620      	mov	r0, r4
 8007358:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800735c:	f001 bdcc 	b.w	8008ef8 <_fflush_r>
 8007360:	bd10      	pop	{r4, pc}
 8007362:	bf00      	nop
 8007364:	200004d0 	.word	0x200004d0
 8007368:	20000538 	.word	0x20000538
 800736c:	200005a0 	.word	0x200005a0

08007370 <global_stdio_init.part.0>:
 8007370:	b510      	push	{r4, lr}
 8007372:	4b0b      	ldr	r3, [pc, #44]	; (80073a0 <global_stdio_init.part.0+0x30>)
 8007374:	4c0b      	ldr	r4, [pc, #44]	; (80073a4 <global_stdio_init.part.0+0x34>)
 8007376:	4a0c      	ldr	r2, [pc, #48]	; (80073a8 <global_stdio_init.part.0+0x38>)
 8007378:	601a      	str	r2, [r3, #0]
 800737a:	4620      	mov	r0, r4
 800737c:	2200      	movs	r2, #0
 800737e:	2104      	movs	r1, #4
 8007380:	f7ff ffa6 	bl	80072d0 <std>
 8007384:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8007388:	2201      	movs	r2, #1
 800738a:	2109      	movs	r1, #9
 800738c:	f7ff ffa0 	bl	80072d0 <std>
 8007390:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8007394:	2202      	movs	r2, #2
 8007396:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800739a:	2112      	movs	r1, #18
 800739c:	f7ff bf98 	b.w	80072d0 <std>
 80073a0:	20000608 	.word	0x20000608
 80073a4:	200004d0 	.word	0x200004d0
 80073a8:	08007319 	.word	0x08007319

080073ac <__sfp_lock_acquire>:
 80073ac:	4801      	ldr	r0, [pc, #4]	; (80073b4 <__sfp_lock_acquire+0x8>)
 80073ae:	f000 b973 	b.w	8007698 <__retarget_lock_acquire_recursive>
 80073b2:	bf00      	nop
 80073b4:	20000611 	.word	0x20000611

080073b8 <__sfp_lock_release>:
 80073b8:	4801      	ldr	r0, [pc, #4]	; (80073c0 <__sfp_lock_release+0x8>)
 80073ba:	f000 b96e 	b.w	800769a <__retarget_lock_release_recursive>
 80073be:	bf00      	nop
 80073c0:	20000611 	.word	0x20000611

080073c4 <__sinit>:
 80073c4:	b510      	push	{r4, lr}
 80073c6:	4604      	mov	r4, r0
 80073c8:	f7ff fff0 	bl	80073ac <__sfp_lock_acquire>
 80073cc:	6a23      	ldr	r3, [r4, #32]
 80073ce:	b11b      	cbz	r3, 80073d8 <__sinit+0x14>
 80073d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80073d4:	f7ff bff0 	b.w	80073b8 <__sfp_lock_release>
 80073d8:	4b04      	ldr	r3, [pc, #16]	; (80073ec <__sinit+0x28>)
 80073da:	6223      	str	r3, [r4, #32]
 80073dc:	4b04      	ldr	r3, [pc, #16]	; (80073f0 <__sinit+0x2c>)
 80073de:	681b      	ldr	r3, [r3, #0]
 80073e0:	2b00      	cmp	r3, #0
 80073e2:	d1f5      	bne.n	80073d0 <__sinit+0xc>
 80073e4:	f7ff ffc4 	bl	8007370 <global_stdio_init.part.0>
 80073e8:	e7f2      	b.n	80073d0 <__sinit+0xc>
 80073ea:	bf00      	nop
 80073ec:	08007331 	.word	0x08007331
 80073f0:	20000608 	.word	0x20000608

080073f4 <_fwalk_sglue>:
 80073f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073f8:	4607      	mov	r7, r0
 80073fa:	4688      	mov	r8, r1
 80073fc:	4614      	mov	r4, r2
 80073fe:	2600      	movs	r6, #0
 8007400:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8007404:	f1b9 0901 	subs.w	r9, r9, #1
 8007408:	d505      	bpl.n	8007416 <_fwalk_sglue+0x22>
 800740a:	6824      	ldr	r4, [r4, #0]
 800740c:	2c00      	cmp	r4, #0
 800740e:	d1f7      	bne.n	8007400 <_fwalk_sglue+0xc>
 8007410:	4630      	mov	r0, r6
 8007412:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007416:	89ab      	ldrh	r3, [r5, #12]
 8007418:	2b01      	cmp	r3, #1
 800741a:	d907      	bls.n	800742c <_fwalk_sglue+0x38>
 800741c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007420:	3301      	adds	r3, #1
 8007422:	d003      	beq.n	800742c <_fwalk_sglue+0x38>
 8007424:	4629      	mov	r1, r5
 8007426:	4638      	mov	r0, r7
 8007428:	47c0      	blx	r8
 800742a:	4306      	orrs	r6, r0
 800742c:	3568      	adds	r5, #104	; 0x68
 800742e:	e7e9      	b.n	8007404 <_fwalk_sglue+0x10>

08007430 <siprintf>:
 8007430:	b40e      	push	{r1, r2, r3}
 8007432:	b500      	push	{lr}
 8007434:	b09c      	sub	sp, #112	; 0x70
 8007436:	ab1d      	add	r3, sp, #116	; 0x74
 8007438:	9002      	str	r0, [sp, #8]
 800743a:	9006      	str	r0, [sp, #24]
 800743c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8007440:	4809      	ldr	r0, [pc, #36]	; (8007468 <siprintf+0x38>)
 8007442:	9107      	str	r1, [sp, #28]
 8007444:	9104      	str	r1, [sp, #16]
 8007446:	4909      	ldr	r1, [pc, #36]	; (800746c <siprintf+0x3c>)
 8007448:	f853 2b04 	ldr.w	r2, [r3], #4
 800744c:	9105      	str	r1, [sp, #20]
 800744e:	6800      	ldr	r0, [r0, #0]
 8007450:	9301      	str	r3, [sp, #4]
 8007452:	a902      	add	r1, sp, #8
 8007454:	f001 fbcc 	bl	8008bf0 <_svfiprintf_r>
 8007458:	9b02      	ldr	r3, [sp, #8]
 800745a:	2200      	movs	r2, #0
 800745c:	701a      	strb	r2, [r3, #0]
 800745e:	b01c      	add	sp, #112	; 0x70
 8007460:	f85d eb04 	ldr.w	lr, [sp], #4
 8007464:	b003      	add	sp, #12
 8007466:	4770      	bx	lr
 8007468:	20000064 	.word	0x20000064
 800746c:	ffff0208 	.word	0xffff0208

08007470 <__sread>:
 8007470:	b510      	push	{r4, lr}
 8007472:	460c      	mov	r4, r1
 8007474:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007478:	f000 f89c 	bl	80075b4 <_read_r>
 800747c:	2800      	cmp	r0, #0
 800747e:	bfab      	itete	ge
 8007480:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8007482:	89a3      	ldrhlt	r3, [r4, #12]
 8007484:	181b      	addge	r3, r3, r0
 8007486:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800748a:	bfac      	ite	ge
 800748c:	6563      	strge	r3, [r4, #84]	; 0x54
 800748e:	81a3      	strhlt	r3, [r4, #12]
 8007490:	bd10      	pop	{r4, pc}

08007492 <__swrite>:
 8007492:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007496:	461f      	mov	r7, r3
 8007498:	898b      	ldrh	r3, [r1, #12]
 800749a:	05db      	lsls	r3, r3, #23
 800749c:	4605      	mov	r5, r0
 800749e:	460c      	mov	r4, r1
 80074a0:	4616      	mov	r6, r2
 80074a2:	d505      	bpl.n	80074b0 <__swrite+0x1e>
 80074a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80074a8:	2302      	movs	r3, #2
 80074aa:	2200      	movs	r2, #0
 80074ac:	f000 f870 	bl	8007590 <_lseek_r>
 80074b0:	89a3      	ldrh	r3, [r4, #12]
 80074b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80074b6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80074ba:	81a3      	strh	r3, [r4, #12]
 80074bc:	4632      	mov	r2, r6
 80074be:	463b      	mov	r3, r7
 80074c0:	4628      	mov	r0, r5
 80074c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80074c6:	f000 b8ab 	b.w	8007620 <_write_r>

080074ca <__sseek>:
 80074ca:	b510      	push	{r4, lr}
 80074cc:	460c      	mov	r4, r1
 80074ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80074d2:	f000 f85d 	bl	8007590 <_lseek_r>
 80074d6:	1c43      	adds	r3, r0, #1
 80074d8:	89a3      	ldrh	r3, [r4, #12]
 80074da:	bf15      	itete	ne
 80074dc:	6560      	strne	r0, [r4, #84]	; 0x54
 80074de:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80074e2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80074e6:	81a3      	strheq	r3, [r4, #12]
 80074e8:	bf18      	it	ne
 80074ea:	81a3      	strhne	r3, [r4, #12]
 80074ec:	bd10      	pop	{r4, pc}

080074ee <__sclose>:
 80074ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80074f2:	f000 b83d 	b.w	8007570 <_close_r>

080074f6 <memset>:
 80074f6:	4402      	add	r2, r0
 80074f8:	4603      	mov	r3, r0
 80074fa:	4293      	cmp	r3, r2
 80074fc:	d100      	bne.n	8007500 <memset+0xa>
 80074fe:	4770      	bx	lr
 8007500:	f803 1b01 	strb.w	r1, [r3], #1
 8007504:	e7f9      	b.n	80074fa <memset+0x4>

08007506 <_raise_r>:
 8007506:	291f      	cmp	r1, #31
 8007508:	b538      	push	{r3, r4, r5, lr}
 800750a:	4604      	mov	r4, r0
 800750c:	460d      	mov	r5, r1
 800750e:	d904      	bls.n	800751a <_raise_r+0x14>
 8007510:	2316      	movs	r3, #22
 8007512:	6003      	str	r3, [r0, #0]
 8007514:	f04f 30ff 	mov.w	r0, #4294967295
 8007518:	bd38      	pop	{r3, r4, r5, pc}
 800751a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800751c:	b112      	cbz	r2, 8007524 <_raise_r+0x1e>
 800751e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007522:	b94b      	cbnz	r3, 8007538 <_raise_r+0x32>
 8007524:	4620      	mov	r0, r4
 8007526:	f000 f869 	bl	80075fc <_getpid_r>
 800752a:	462a      	mov	r2, r5
 800752c:	4601      	mov	r1, r0
 800752e:	4620      	mov	r0, r4
 8007530:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007534:	f000 b850 	b.w	80075d8 <_kill_r>
 8007538:	2b01      	cmp	r3, #1
 800753a:	d00a      	beq.n	8007552 <_raise_r+0x4c>
 800753c:	1c59      	adds	r1, r3, #1
 800753e:	d103      	bne.n	8007548 <_raise_r+0x42>
 8007540:	2316      	movs	r3, #22
 8007542:	6003      	str	r3, [r0, #0]
 8007544:	2001      	movs	r0, #1
 8007546:	e7e7      	b.n	8007518 <_raise_r+0x12>
 8007548:	2400      	movs	r4, #0
 800754a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800754e:	4628      	mov	r0, r5
 8007550:	4798      	blx	r3
 8007552:	2000      	movs	r0, #0
 8007554:	e7e0      	b.n	8007518 <_raise_r+0x12>
	...

08007558 <raise>:
 8007558:	4b02      	ldr	r3, [pc, #8]	; (8007564 <raise+0xc>)
 800755a:	4601      	mov	r1, r0
 800755c:	6818      	ldr	r0, [r3, #0]
 800755e:	f7ff bfd2 	b.w	8007506 <_raise_r>
 8007562:	bf00      	nop
 8007564:	20000064 	.word	0x20000064

08007568 <_localeconv_r>:
 8007568:	4800      	ldr	r0, [pc, #0]	; (800756c <_localeconv_r+0x4>)
 800756a:	4770      	bx	lr
 800756c:	20000158 	.word	0x20000158

08007570 <_close_r>:
 8007570:	b538      	push	{r3, r4, r5, lr}
 8007572:	4d06      	ldr	r5, [pc, #24]	; (800758c <_close_r+0x1c>)
 8007574:	2300      	movs	r3, #0
 8007576:	4604      	mov	r4, r0
 8007578:	4608      	mov	r0, r1
 800757a:	602b      	str	r3, [r5, #0]
 800757c:	f7fb fb95 	bl	8002caa <_close>
 8007580:	1c43      	adds	r3, r0, #1
 8007582:	d102      	bne.n	800758a <_close_r+0x1a>
 8007584:	682b      	ldr	r3, [r5, #0]
 8007586:	b103      	cbz	r3, 800758a <_close_r+0x1a>
 8007588:	6023      	str	r3, [r4, #0]
 800758a:	bd38      	pop	{r3, r4, r5, pc}
 800758c:	2000060c 	.word	0x2000060c

08007590 <_lseek_r>:
 8007590:	b538      	push	{r3, r4, r5, lr}
 8007592:	4d07      	ldr	r5, [pc, #28]	; (80075b0 <_lseek_r+0x20>)
 8007594:	4604      	mov	r4, r0
 8007596:	4608      	mov	r0, r1
 8007598:	4611      	mov	r1, r2
 800759a:	2200      	movs	r2, #0
 800759c:	602a      	str	r2, [r5, #0]
 800759e:	461a      	mov	r2, r3
 80075a0:	f7fb fbaa 	bl	8002cf8 <_lseek>
 80075a4:	1c43      	adds	r3, r0, #1
 80075a6:	d102      	bne.n	80075ae <_lseek_r+0x1e>
 80075a8:	682b      	ldr	r3, [r5, #0]
 80075aa:	b103      	cbz	r3, 80075ae <_lseek_r+0x1e>
 80075ac:	6023      	str	r3, [r4, #0]
 80075ae:	bd38      	pop	{r3, r4, r5, pc}
 80075b0:	2000060c 	.word	0x2000060c

080075b4 <_read_r>:
 80075b4:	b538      	push	{r3, r4, r5, lr}
 80075b6:	4d07      	ldr	r5, [pc, #28]	; (80075d4 <_read_r+0x20>)
 80075b8:	4604      	mov	r4, r0
 80075ba:	4608      	mov	r0, r1
 80075bc:	4611      	mov	r1, r2
 80075be:	2200      	movs	r2, #0
 80075c0:	602a      	str	r2, [r5, #0]
 80075c2:	461a      	mov	r2, r3
 80075c4:	f7fb fb38 	bl	8002c38 <_read>
 80075c8:	1c43      	adds	r3, r0, #1
 80075ca:	d102      	bne.n	80075d2 <_read_r+0x1e>
 80075cc:	682b      	ldr	r3, [r5, #0]
 80075ce:	b103      	cbz	r3, 80075d2 <_read_r+0x1e>
 80075d0:	6023      	str	r3, [r4, #0]
 80075d2:	bd38      	pop	{r3, r4, r5, pc}
 80075d4:	2000060c 	.word	0x2000060c

080075d8 <_kill_r>:
 80075d8:	b538      	push	{r3, r4, r5, lr}
 80075da:	4d07      	ldr	r5, [pc, #28]	; (80075f8 <_kill_r+0x20>)
 80075dc:	2300      	movs	r3, #0
 80075de:	4604      	mov	r4, r0
 80075e0:	4608      	mov	r0, r1
 80075e2:	4611      	mov	r1, r2
 80075e4:	602b      	str	r3, [r5, #0]
 80075e6:	f7fb fb0d 	bl	8002c04 <_kill>
 80075ea:	1c43      	adds	r3, r0, #1
 80075ec:	d102      	bne.n	80075f4 <_kill_r+0x1c>
 80075ee:	682b      	ldr	r3, [r5, #0]
 80075f0:	b103      	cbz	r3, 80075f4 <_kill_r+0x1c>
 80075f2:	6023      	str	r3, [r4, #0]
 80075f4:	bd38      	pop	{r3, r4, r5, pc}
 80075f6:	bf00      	nop
 80075f8:	2000060c 	.word	0x2000060c

080075fc <_getpid_r>:
 80075fc:	f7fb bafa 	b.w	8002bf4 <_getpid>

08007600 <_sbrk_r>:
 8007600:	b538      	push	{r3, r4, r5, lr}
 8007602:	4d06      	ldr	r5, [pc, #24]	; (800761c <_sbrk_r+0x1c>)
 8007604:	2300      	movs	r3, #0
 8007606:	4604      	mov	r4, r0
 8007608:	4608      	mov	r0, r1
 800760a:	602b      	str	r3, [r5, #0]
 800760c:	f7fb fb82 	bl	8002d14 <_sbrk>
 8007610:	1c43      	adds	r3, r0, #1
 8007612:	d102      	bne.n	800761a <_sbrk_r+0x1a>
 8007614:	682b      	ldr	r3, [r5, #0]
 8007616:	b103      	cbz	r3, 800761a <_sbrk_r+0x1a>
 8007618:	6023      	str	r3, [r4, #0]
 800761a:	bd38      	pop	{r3, r4, r5, pc}
 800761c:	2000060c 	.word	0x2000060c

08007620 <_write_r>:
 8007620:	b538      	push	{r3, r4, r5, lr}
 8007622:	4d07      	ldr	r5, [pc, #28]	; (8007640 <_write_r+0x20>)
 8007624:	4604      	mov	r4, r0
 8007626:	4608      	mov	r0, r1
 8007628:	4611      	mov	r1, r2
 800762a:	2200      	movs	r2, #0
 800762c:	602a      	str	r2, [r5, #0]
 800762e:	461a      	mov	r2, r3
 8007630:	f7fb fb1f 	bl	8002c72 <_write>
 8007634:	1c43      	adds	r3, r0, #1
 8007636:	d102      	bne.n	800763e <_write_r+0x1e>
 8007638:	682b      	ldr	r3, [r5, #0]
 800763a:	b103      	cbz	r3, 800763e <_write_r+0x1e>
 800763c:	6023      	str	r3, [r4, #0]
 800763e:	bd38      	pop	{r3, r4, r5, pc}
 8007640:	2000060c 	.word	0x2000060c

08007644 <__errno>:
 8007644:	4b01      	ldr	r3, [pc, #4]	; (800764c <__errno+0x8>)
 8007646:	6818      	ldr	r0, [r3, #0]
 8007648:	4770      	bx	lr
 800764a:	bf00      	nop
 800764c:	20000064 	.word	0x20000064

08007650 <__libc_init_array>:
 8007650:	b570      	push	{r4, r5, r6, lr}
 8007652:	4d0d      	ldr	r5, [pc, #52]	; (8007688 <__libc_init_array+0x38>)
 8007654:	4c0d      	ldr	r4, [pc, #52]	; (800768c <__libc_init_array+0x3c>)
 8007656:	1b64      	subs	r4, r4, r5
 8007658:	10a4      	asrs	r4, r4, #2
 800765a:	2600      	movs	r6, #0
 800765c:	42a6      	cmp	r6, r4
 800765e:	d109      	bne.n	8007674 <__libc_init_array+0x24>
 8007660:	4d0b      	ldr	r5, [pc, #44]	; (8007690 <__libc_init_array+0x40>)
 8007662:	4c0c      	ldr	r4, [pc, #48]	; (8007694 <__libc_init_array+0x44>)
 8007664:	f001 ff84 	bl	8009570 <_init>
 8007668:	1b64      	subs	r4, r4, r5
 800766a:	10a4      	asrs	r4, r4, #2
 800766c:	2600      	movs	r6, #0
 800766e:	42a6      	cmp	r6, r4
 8007670:	d105      	bne.n	800767e <__libc_init_array+0x2e>
 8007672:	bd70      	pop	{r4, r5, r6, pc}
 8007674:	f855 3b04 	ldr.w	r3, [r5], #4
 8007678:	4798      	blx	r3
 800767a:	3601      	adds	r6, #1
 800767c:	e7ee      	b.n	800765c <__libc_init_array+0xc>
 800767e:	f855 3b04 	ldr.w	r3, [r5], #4
 8007682:	4798      	blx	r3
 8007684:	3601      	adds	r6, #1
 8007686:	e7f2      	b.n	800766e <__libc_init_array+0x1e>
 8007688:	08009a7c 	.word	0x08009a7c
 800768c:	08009a7c 	.word	0x08009a7c
 8007690:	08009a7c 	.word	0x08009a7c
 8007694:	08009a84 	.word	0x08009a84

08007698 <__retarget_lock_acquire_recursive>:
 8007698:	4770      	bx	lr

0800769a <__retarget_lock_release_recursive>:
 800769a:	4770      	bx	lr

0800769c <memcpy>:
 800769c:	440a      	add	r2, r1
 800769e:	4291      	cmp	r1, r2
 80076a0:	f100 33ff 	add.w	r3, r0, #4294967295
 80076a4:	d100      	bne.n	80076a8 <memcpy+0xc>
 80076a6:	4770      	bx	lr
 80076a8:	b510      	push	{r4, lr}
 80076aa:	f811 4b01 	ldrb.w	r4, [r1], #1
 80076ae:	f803 4f01 	strb.w	r4, [r3, #1]!
 80076b2:	4291      	cmp	r1, r2
 80076b4:	d1f9      	bne.n	80076aa <memcpy+0xe>
 80076b6:	bd10      	pop	{r4, pc}

080076b8 <quorem>:
 80076b8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076bc:	6903      	ldr	r3, [r0, #16]
 80076be:	690c      	ldr	r4, [r1, #16]
 80076c0:	42a3      	cmp	r3, r4
 80076c2:	4607      	mov	r7, r0
 80076c4:	db7e      	blt.n	80077c4 <quorem+0x10c>
 80076c6:	3c01      	subs	r4, #1
 80076c8:	f101 0814 	add.w	r8, r1, #20
 80076cc:	f100 0514 	add.w	r5, r0, #20
 80076d0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80076d4:	9301      	str	r3, [sp, #4]
 80076d6:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80076da:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80076de:	3301      	adds	r3, #1
 80076e0:	429a      	cmp	r2, r3
 80076e2:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80076e6:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80076ea:	fbb2 f6f3 	udiv	r6, r2, r3
 80076ee:	d331      	bcc.n	8007754 <quorem+0x9c>
 80076f0:	f04f 0e00 	mov.w	lr, #0
 80076f4:	4640      	mov	r0, r8
 80076f6:	46ac      	mov	ip, r5
 80076f8:	46f2      	mov	sl, lr
 80076fa:	f850 2b04 	ldr.w	r2, [r0], #4
 80076fe:	b293      	uxth	r3, r2
 8007700:	fb06 e303 	mla	r3, r6, r3, lr
 8007704:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8007708:	0c1a      	lsrs	r2, r3, #16
 800770a:	b29b      	uxth	r3, r3
 800770c:	ebaa 0303 	sub.w	r3, sl, r3
 8007710:	f8dc a000 	ldr.w	sl, [ip]
 8007714:	fa13 f38a 	uxtah	r3, r3, sl
 8007718:	fb06 220e 	mla	r2, r6, lr, r2
 800771c:	9300      	str	r3, [sp, #0]
 800771e:	9b00      	ldr	r3, [sp, #0]
 8007720:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8007724:	b292      	uxth	r2, r2
 8007726:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800772a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800772e:	f8bd 3000 	ldrh.w	r3, [sp]
 8007732:	4581      	cmp	r9, r0
 8007734:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007738:	f84c 3b04 	str.w	r3, [ip], #4
 800773c:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8007740:	d2db      	bcs.n	80076fa <quorem+0x42>
 8007742:	f855 300b 	ldr.w	r3, [r5, fp]
 8007746:	b92b      	cbnz	r3, 8007754 <quorem+0x9c>
 8007748:	9b01      	ldr	r3, [sp, #4]
 800774a:	3b04      	subs	r3, #4
 800774c:	429d      	cmp	r5, r3
 800774e:	461a      	mov	r2, r3
 8007750:	d32c      	bcc.n	80077ac <quorem+0xf4>
 8007752:	613c      	str	r4, [r7, #16]
 8007754:	4638      	mov	r0, r7
 8007756:	f001 f8f1 	bl	800893c <__mcmp>
 800775a:	2800      	cmp	r0, #0
 800775c:	db22      	blt.n	80077a4 <quorem+0xec>
 800775e:	3601      	adds	r6, #1
 8007760:	4629      	mov	r1, r5
 8007762:	2000      	movs	r0, #0
 8007764:	f858 2b04 	ldr.w	r2, [r8], #4
 8007768:	f8d1 c000 	ldr.w	ip, [r1]
 800776c:	b293      	uxth	r3, r2
 800776e:	1ac3      	subs	r3, r0, r3
 8007770:	0c12      	lsrs	r2, r2, #16
 8007772:	fa13 f38c 	uxtah	r3, r3, ip
 8007776:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800777a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800777e:	b29b      	uxth	r3, r3
 8007780:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007784:	45c1      	cmp	r9, r8
 8007786:	f841 3b04 	str.w	r3, [r1], #4
 800778a:	ea4f 4022 	mov.w	r0, r2, asr #16
 800778e:	d2e9      	bcs.n	8007764 <quorem+0xac>
 8007790:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8007794:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8007798:	b922      	cbnz	r2, 80077a4 <quorem+0xec>
 800779a:	3b04      	subs	r3, #4
 800779c:	429d      	cmp	r5, r3
 800779e:	461a      	mov	r2, r3
 80077a0:	d30a      	bcc.n	80077b8 <quorem+0x100>
 80077a2:	613c      	str	r4, [r7, #16]
 80077a4:	4630      	mov	r0, r6
 80077a6:	b003      	add	sp, #12
 80077a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80077ac:	6812      	ldr	r2, [r2, #0]
 80077ae:	3b04      	subs	r3, #4
 80077b0:	2a00      	cmp	r2, #0
 80077b2:	d1ce      	bne.n	8007752 <quorem+0x9a>
 80077b4:	3c01      	subs	r4, #1
 80077b6:	e7c9      	b.n	800774c <quorem+0x94>
 80077b8:	6812      	ldr	r2, [r2, #0]
 80077ba:	3b04      	subs	r3, #4
 80077bc:	2a00      	cmp	r2, #0
 80077be:	d1f0      	bne.n	80077a2 <quorem+0xea>
 80077c0:	3c01      	subs	r4, #1
 80077c2:	e7eb      	b.n	800779c <quorem+0xe4>
 80077c4:	2000      	movs	r0, #0
 80077c6:	e7ee      	b.n	80077a6 <quorem+0xee>

080077c8 <_dtoa_r>:
 80077c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077cc:	ed2d 8b04 	vpush	{d8-d9}
 80077d0:	69c5      	ldr	r5, [r0, #28]
 80077d2:	b093      	sub	sp, #76	; 0x4c
 80077d4:	ed8d 0b02 	vstr	d0, [sp, #8]
 80077d8:	ec57 6b10 	vmov	r6, r7, d0
 80077dc:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80077e0:	9107      	str	r1, [sp, #28]
 80077e2:	4604      	mov	r4, r0
 80077e4:	920a      	str	r2, [sp, #40]	; 0x28
 80077e6:	930d      	str	r3, [sp, #52]	; 0x34
 80077e8:	b975      	cbnz	r5, 8007808 <_dtoa_r+0x40>
 80077ea:	2010      	movs	r0, #16
 80077ec:	f7ff f84e 	bl	800688c <malloc>
 80077f0:	4602      	mov	r2, r0
 80077f2:	61e0      	str	r0, [r4, #28]
 80077f4:	b920      	cbnz	r0, 8007800 <_dtoa_r+0x38>
 80077f6:	4bae      	ldr	r3, [pc, #696]	; (8007ab0 <_dtoa_r+0x2e8>)
 80077f8:	21ef      	movs	r1, #239	; 0xef
 80077fa:	48ae      	ldr	r0, [pc, #696]	; (8007ab4 <_dtoa_r+0x2ec>)
 80077fc:	f001 fbbe 	bl	8008f7c <__assert_func>
 8007800:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8007804:	6005      	str	r5, [r0, #0]
 8007806:	60c5      	str	r5, [r0, #12]
 8007808:	69e3      	ldr	r3, [r4, #28]
 800780a:	6819      	ldr	r1, [r3, #0]
 800780c:	b151      	cbz	r1, 8007824 <_dtoa_r+0x5c>
 800780e:	685a      	ldr	r2, [r3, #4]
 8007810:	604a      	str	r2, [r1, #4]
 8007812:	2301      	movs	r3, #1
 8007814:	4093      	lsls	r3, r2
 8007816:	608b      	str	r3, [r1, #8]
 8007818:	4620      	mov	r0, r4
 800781a:	f000 fe53 	bl	80084c4 <_Bfree>
 800781e:	69e3      	ldr	r3, [r4, #28]
 8007820:	2200      	movs	r2, #0
 8007822:	601a      	str	r2, [r3, #0]
 8007824:	1e3b      	subs	r3, r7, #0
 8007826:	bfbb      	ittet	lt
 8007828:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800782c:	9303      	strlt	r3, [sp, #12]
 800782e:	2300      	movge	r3, #0
 8007830:	2201      	movlt	r2, #1
 8007832:	bfac      	ite	ge
 8007834:	f8c8 3000 	strge.w	r3, [r8]
 8007838:	f8c8 2000 	strlt.w	r2, [r8]
 800783c:	4b9e      	ldr	r3, [pc, #632]	; (8007ab8 <_dtoa_r+0x2f0>)
 800783e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8007842:	ea33 0308 	bics.w	r3, r3, r8
 8007846:	d11b      	bne.n	8007880 <_dtoa_r+0xb8>
 8007848:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800784a:	f242 730f 	movw	r3, #9999	; 0x270f
 800784e:	6013      	str	r3, [r2, #0]
 8007850:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8007854:	4333      	orrs	r3, r6
 8007856:	f000 8593 	beq.w	8008380 <_dtoa_r+0xbb8>
 800785a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800785c:	b963      	cbnz	r3, 8007878 <_dtoa_r+0xb0>
 800785e:	4b97      	ldr	r3, [pc, #604]	; (8007abc <_dtoa_r+0x2f4>)
 8007860:	e027      	b.n	80078b2 <_dtoa_r+0xea>
 8007862:	4b97      	ldr	r3, [pc, #604]	; (8007ac0 <_dtoa_r+0x2f8>)
 8007864:	9300      	str	r3, [sp, #0]
 8007866:	3308      	adds	r3, #8
 8007868:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800786a:	6013      	str	r3, [r2, #0]
 800786c:	9800      	ldr	r0, [sp, #0]
 800786e:	b013      	add	sp, #76	; 0x4c
 8007870:	ecbd 8b04 	vpop	{d8-d9}
 8007874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007878:	4b90      	ldr	r3, [pc, #576]	; (8007abc <_dtoa_r+0x2f4>)
 800787a:	9300      	str	r3, [sp, #0]
 800787c:	3303      	adds	r3, #3
 800787e:	e7f3      	b.n	8007868 <_dtoa_r+0xa0>
 8007880:	ed9d 7b02 	vldr	d7, [sp, #8]
 8007884:	2200      	movs	r2, #0
 8007886:	ec51 0b17 	vmov	r0, r1, d7
 800788a:	eeb0 8a47 	vmov.f32	s16, s14
 800788e:	eef0 8a67 	vmov.f32	s17, s15
 8007892:	2300      	movs	r3, #0
 8007894:	f7f9 f918 	bl	8000ac8 <__aeabi_dcmpeq>
 8007898:	4681      	mov	r9, r0
 800789a:	b160      	cbz	r0, 80078b6 <_dtoa_r+0xee>
 800789c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800789e:	2301      	movs	r3, #1
 80078a0:	6013      	str	r3, [r2, #0]
 80078a2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80078a4:	2b00      	cmp	r3, #0
 80078a6:	f000 8568 	beq.w	800837a <_dtoa_r+0xbb2>
 80078aa:	4b86      	ldr	r3, [pc, #536]	; (8007ac4 <_dtoa_r+0x2fc>)
 80078ac:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80078ae:	6013      	str	r3, [r2, #0]
 80078b0:	3b01      	subs	r3, #1
 80078b2:	9300      	str	r3, [sp, #0]
 80078b4:	e7da      	b.n	800786c <_dtoa_r+0xa4>
 80078b6:	aa10      	add	r2, sp, #64	; 0x40
 80078b8:	a911      	add	r1, sp, #68	; 0x44
 80078ba:	4620      	mov	r0, r4
 80078bc:	eeb0 0a48 	vmov.f32	s0, s16
 80078c0:	eef0 0a68 	vmov.f32	s1, s17
 80078c4:	f001 f8e0 	bl	8008a88 <__d2b>
 80078c8:	f3c8 550a 	ubfx	r5, r8, #20, #11
 80078cc:	4682      	mov	sl, r0
 80078ce:	2d00      	cmp	r5, #0
 80078d0:	d07f      	beq.n	80079d2 <_dtoa_r+0x20a>
 80078d2:	ee18 3a90 	vmov	r3, s17
 80078d6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80078da:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80078de:	ec51 0b18 	vmov	r0, r1, d8
 80078e2:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80078e6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80078ea:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80078ee:	4619      	mov	r1, r3
 80078f0:	2200      	movs	r2, #0
 80078f2:	4b75      	ldr	r3, [pc, #468]	; (8007ac8 <_dtoa_r+0x300>)
 80078f4:	f7f8 fcc8 	bl	8000288 <__aeabi_dsub>
 80078f8:	a367      	add	r3, pc, #412	; (adr r3, 8007a98 <_dtoa_r+0x2d0>)
 80078fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078fe:	f7f8 fe7b 	bl	80005f8 <__aeabi_dmul>
 8007902:	a367      	add	r3, pc, #412	; (adr r3, 8007aa0 <_dtoa_r+0x2d8>)
 8007904:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007908:	f7f8 fcc0 	bl	800028c <__adddf3>
 800790c:	4606      	mov	r6, r0
 800790e:	4628      	mov	r0, r5
 8007910:	460f      	mov	r7, r1
 8007912:	f7f8 fe07 	bl	8000524 <__aeabi_i2d>
 8007916:	a364      	add	r3, pc, #400	; (adr r3, 8007aa8 <_dtoa_r+0x2e0>)
 8007918:	e9d3 2300 	ldrd	r2, r3, [r3]
 800791c:	f7f8 fe6c 	bl	80005f8 <__aeabi_dmul>
 8007920:	4602      	mov	r2, r0
 8007922:	460b      	mov	r3, r1
 8007924:	4630      	mov	r0, r6
 8007926:	4639      	mov	r1, r7
 8007928:	f7f8 fcb0 	bl	800028c <__adddf3>
 800792c:	4606      	mov	r6, r0
 800792e:	460f      	mov	r7, r1
 8007930:	f7f9 f912 	bl	8000b58 <__aeabi_d2iz>
 8007934:	2200      	movs	r2, #0
 8007936:	4683      	mov	fp, r0
 8007938:	2300      	movs	r3, #0
 800793a:	4630      	mov	r0, r6
 800793c:	4639      	mov	r1, r7
 800793e:	f7f9 f8cd 	bl	8000adc <__aeabi_dcmplt>
 8007942:	b148      	cbz	r0, 8007958 <_dtoa_r+0x190>
 8007944:	4658      	mov	r0, fp
 8007946:	f7f8 fded 	bl	8000524 <__aeabi_i2d>
 800794a:	4632      	mov	r2, r6
 800794c:	463b      	mov	r3, r7
 800794e:	f7f9 f8bb 	bl	8000ac8 <__aeabi_dcmpeq>
 8007952:	b908      	cbnz	r0, 8007958 <_dtoa_r+0x190>
 8007954:	f10b 3bff 	add.w	fp, fp, #4294967295
 8007958:	f1bb 0f16 	cmp.w	fp, #22
 800795c:	d857      	bhi.n	8007a0e <_dtoa_r+0x246>
 800795e:	4b5b      	ldr	r3, [pc, #364]	; (8007acc <_dtoa_r+0x304>)
 8007960:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8007964:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007968:	ec51 0b18 	vmov	r0, r1, d8
 800796c:	f7f9 f8b6 	bl	8000adc <__aeabi_dcmplt>
 8007970:	2800      	cmp	r0, #0
 8007972:	d04e      	beq.n	8007a12 <_dtoa_r+0x24a>
 8007974:	f10b 3bff 	add.w	fp, fp, #4294967295
 8007978:	2300      	movs	r3, #0
 800797a:	930c      	str	r3, [sp, #48]	; 0x30
 800797c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800797e:	1b5b      	subs	r3, r3, r5
 8007980:	1e5a      	subs	r2, r3, #1
 8007982:	bf45      	ittet	mi
 8007984:	f1c3 0301 	rsbmi	r3, r3, #1
 8007988:	9305      	strmi	r3, [sp, #20]
 800798a:	2300      	movpl	r3, #0
 800798c:	2300      	movmi	r3, #0
 800798e:	9206      	str	r2, [sp, #24]
 8007990:	bf54      	ite	pl
 8007992:	9305      	strpl	r3, [sp, #20]
 8007994:	9306      	strmi	r3, [sp, #24]
 8007996:	f1bb 0f00 	cmp.w	fp, #0
 800799a:	db3c      	blt.n	8007a16 <_dtoa_r+0x24e>
 800799c:	9b06      	ldr	r3, [sp, #24]
 800799e:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 80079a2:	445b      	add	r3, fp
 80079a4:	9306      	str	r3, [sp, #24]
 80079a6:	2300      	movs	r3, #0
 80079a8:	9308      	str	r3, [sp, #32]
 80079aa:	9b07      	ldr	r3, [sp, #28]
 80079ac:	2b09      	cmp	r3, #9
 80079ae:	d868      	bhi.n	8007a82 <_dtoa_r+0x2ba>
 80079b0:	2b05      	cmp	r3, #5
 80079b2:	bfc4      	itt	gt
 80079b4:	3b04      	subgt	r3, #4
 80079b6:	9307      	strgt	r3, [sp, #28]
 80079b8:	9b07      	ldr	r3, [sp, #28]
 80079ba:	f1a3 0302 	sub.w	r3, r3, #2
 80079be:	bfcc      	ite	gt
 80079c0:	2500      	movgt	r5, #0
 80079c2:	2501      	movle	r5, #1
 80079c4:	2b03      	cmp	r3, #3
 80079c6:	f200 8085 	bhi.w	8007ad4 <_dtoa_r+0x30c>
 80079ca:	e8df f003 	tbb	[pc, r3]
 80079ce:	3b2e      	.short	0x3b2e
 80079d0:	5839      	.short	0x5839
 80079d2:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80079d6:	441d      	add	r5, r3
 80079d8:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80079dc:	2b20      	cmp	r3, #32
 80079de:	bfc1      	itttt	gt
 80079e0:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80079e4:	fa08 f803 	lslgt.w	r8, r8, r3
 80079e8:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 80079ec:	fa26 f303 	lsrgt.w	r3, r6, r3
 80079f0:	bfd6      	itet	le
 80079f2:	f1c3 0320 	rsble	r3, r3, #32
 80079f6:	ea48 0003 	orrgt.w	r0, r8, r3
 80079fa:	fa06 f003 	lslle.w	r0, r6, r3
 80079fe:	f7f8 fd81 	bl	8000504 <__aeabi_ui2d>
 8007a02:	2201      	movs	r2, #1
 8007a04:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8007a08:	3d01      	subs	r5, #1
 8007a0a:	920e      	str	r2, [sp, #56]	; 0x38
 8007a0c:	e76f      	b.n	80078ee <_dtoa_r+0x126>
 8007a0e:	2301      	movs	r3, #1
 8007a10:	e7b3      	b.n	800797a <_dtoa_r+0x1b2>
 8007a12:	900c      	str	r0, [sp, #48]	; 0x30
 8007a14:	e7b2      	b.n	800797c <_dtoa_r+0x1b4>
 8007a16:	9b05      	ldr	r3, [sp, #20]
 8007a18:	eba3 030b 	sub.w	r3, r3, fp
 8007a1c:	9305      	str	r3, [sp, #20]
 8007a1e:	f1cb 0300 	rsb	r3, fp, #0
 8007a22:	9308      	str	r3, [sp, #32]
 8007a24:	2300      	movs	r3, #0
 8007a26:	930b      	str	r3, [sp, #44]	; 0x2c
 8007a28:	e7bf      	b.n	80079aa <_dtoa_r+0x1e2>
 8007a2a:	2300      	movs	r3, #0
 8007a2c:	9309      	str	r3, [sp, #36]	; 0x24
 8007a2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007a30:	2b00      	cmp	r3, #0
 8007a32:	dc52      	bgt.n	8007ada <_dtoa_r+0x312>
 8007a34:	2301      	movs	r3, #1
 8007a36:	9301      	str	r3, [sp, #4]
 8007a38:	9304      	str	r3, [sp, #16]
 8007a3a:	461a      	mov	r2, r3
 8007a3c:	920a      	str	r2, [sp, #40]	; 0x28
 8007a3e:	e00b      	b.n	8007a58 <_dtoa_r+0x290>
 8007a40:	2301      	movs	r3, #1
 8007a42:	e7f3      	b.n	8007a2c <_dtoa_r+0x264>
 8007a44:	2300      	movs	r3, #0
 8007a46:	9309      	str	r3, [sp, #36]	; 0x24
 8007a48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007a4a:	445b      	add	r3, fp
 8007a4c:	9301      	str	r3, [sp, #4]
 8007a4e:	3301      	adds	r3, #1
 8007a50:	2b01      	cmp	r3, #1
 8007a52:	9304      	str	r3, [sp, #16]
 8007a54:	bfb8      	it	lt
 8007a56:	2301      	movlt	r3, #1
 8007a58:	69e0      	ldr	r0, [r4, #28]
 8007a5a:	2100      	movs	r1, #0
 8007a5c:	2204      	movs	r2, #4
 8007a5e:	f102 0614 	add.w	r6, r2, #20
 8007a62:	429e      	cmp	r6, r3
 8007a64:	d93d      	bls.n	8007ae2 <_dtoa_r+0x31a>
 8007a66:	6041      	str	r1, [r0, #4]
 8007a68:	4620      	mov	r0, r4
 8007a6a:	f000 fceb 	bl	8008444 <_Balloc>
 8007a6e:	9000      	str	r0, [sp, #0]
 8007a70:	2800      	cmp	r0, #0
 8007a72:	d139      	bne.n	8007ae8 <_dtoa_r+0x320>
 8007a74:	4b16      	ldr	r3, [pc, #88]	; (8007ad0 <_dtoa_r+0x308>)
 8007a76:	4602      	mov	r2, r0
 8007a78:	f240 11af 	movw	r1, #431	; 0x1af
 8007a7c:	e6bd      	b.n	80077fa <_dtoa_r+0x32>
 8007a7e:	2301      	movs	r3, #1
 8007a80:	e7e1      	b.n	8007a46 <_dtoa_r+0x27e>
 8007a82:	2501      	movs	r5, #1
 8007a84:	2300      	movs	r3, #0
 8007a86:	9307      	str	r3, [sp, #28]
 8007a88:	9509      	str	r5, [sp, #36]	; 0x24
 8007a8a:	f04f 33ff 	mov.w	r3, #4294967295
 8007a8e:	9301      	str	r3, [sp, #4]
 8007a90:	9304      	str	r3, [sp, #16]
 8007a92:	2200      	movs	r2, #0
 8007a94:	2312      	movs	r3, #18
 8007a96:	e7d1      	b.n	8007a3c <_dtoa_r+0x274>
 8007a98:	636f4361 	.word	0x636f4361
 8007a9c:	3fd287a7 	.word	0x3fd287a7
 8007aa0:	8b60c8b3 	.word	0x8b60c8b3
 8007aa4:	3fc68a28 	.word	0x3fc68a28
 8007aa8:	509f79fb 	.word	0x509f79fb
 8007aac:	3fd34413 	.word	0x3fd34413
 8007ab0:	08009741 	.word	0x08009741
 8007ab4:	08009758 	.word	0x08009758
 8007ab8:	7ff00000 	.word	0x7ff00000
 8007abc:	0800973d 	.word	0x0800973d
 8007ac0:	08009734 	.word	0x08009734
 8007ac4:	08009711 	.word	0x08009711
 8007ac8:	3ff80000 	.word	0x3ff80000
 8007acc:	08009848 	.word	0x08009848
 8007ad0:	080097b0 	.word	0x080097b0
 8007ad4:	2301      	movs	r3, #1
 8007ad6:	9309      	str	r3, [sp, #36]	; 0x24
 8007ad8:	e7d7      	b.n	8007a8a <_dtoa_r+0x2c2>
 8007ada:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007adc:	9301      	str	r3, [sp, #4]
 8007ade:	9304      	str	r3, [sp, #16]
 8007ae0:	e7ba      	b.n	8007a58 <_dtoa_r+0x290>
 8007ae2:	3101      	adds	r1, #1
 8007ae4:	0052      	lsls	r2, r2, #1
 8007ae6:	e7ba      	b.n	8007a5e <_dtoa_r+0x296>
 8007ae8:	69e3      	ldr	r3, [r4, #28]
 8007aea:	9a00      	ldr	r2, [sp, #0]
 8007aec:	601a      	str	r2, [r3, #0]
 8007aee:	9b04      	ldr	r3, [sp, #16]
 8007af0:	2b0e      	cmp	r3, #14
 8007af2:	f200 80a8 	bhi.w	8007c46 <_dtoa_r+0x47e>
 8007af6:	2d00      	cmp	r5, #0
 8007af8:	f000 80a5 	beq.w	8007c46 <_dtoa_r+0x47e>
 8007afc:	f1bb 0f00 	cmp.w	fp, #0
 8007b00:	dd38      	ble.n	8007b74 <_dtoa_r+0x3ac>
 8007b02:	4bc0      	ldr	r3, [pc, #768]	; (8007e04 <_dtoa_r+0x63c>)
 8007b04:	f00b 020f 	and.w	r2, fp, #15
 8007b08:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007b0c:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8007b10:	e9d3 6700 	ldrd	r6, r7, [r3]
 8007b14:	ea4f 182b 	mov.w	r8, fp, asr #4
 8007b18:	d019      	beq.n	8007b4e <_dtoa_r+0x386>
 8007b1a:	4bbb      	ldr	r3, [pc, #748]	; (8007e08 <_dtoa_r+0x640>)
 8007b1c:	ec51 0b18 	vmov	r0, r1, d8
 8007b20:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8007b24:	f7f8 fe92 	bl	800084c <__aeabi_ddiv>
 8007b28:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007b2c:	f008 080f 	and.w	r8, r8, #15
 8007b30:	2503      	movs	r5, #3
 8007b32:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8007e08 <_dtoa_r+0x640>
 8007b36:	f1b8 0f00 	cmp.w	r8, #0
 8007b3a:	d10a      	bne.n	8007b52 <_dtoa_r+0x38a>
 8007b3c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8007b40:	4632      	mov	r2, r6
 8007b42:	463b      	mov	r3, r7
 8007b44:	f7f8 fe82 	bl	800084c <__aeabi_ddiv>
 8007b48:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007b4c:	e02b      	b.n	8007ba6 <_dtoa_r+0x3de>
 8007b4e:	2502      	movs	r5, #2
 8007b50:	e7ef      	b.n	8007b32 <_dtoa_r+0x36a>
 8007b52:	f018 0f01 	tst.w	r8, #1
 8007b56:	d008      	beq.n	8007b6a <_dtoa_r+0x3a2>
 8007b58:	4630      	mov	r0, r6
 8007b5a:	4639      	mov	r1, r7
 8007b5c:	e9d9 2300 	ldrd	r2, r3, [r9]
 8007b60:	f7f8 fd4a 	bl	80005f8 <__aeabi_dmul>
 8007b64:	3501      	adds	r5, #1
 8007b66:	4606      	mov	r6, r0
 8007b68:	460f      	mov	r7, r1
 8007b6a:	ea4f 0868 	mov.w	r8, r8, asr #1
 8007b6e:	f109 0908 	add.w	r9, r9, #8
 8007b72:	e7e0      	b.n	8007b36 <_dtoa_r+0x36e>
 8007b74:	f000 809f 	beq.w	8007cb6 <_dtoa_r+0x4ee>
 8007b78:	f1cb 0600 	rsb	r6, fp, #0
 8007b7c:	4ba1      	ldr	r3, [pc, #644]	; (8007e04 <_dtoa_r+0x63c>)
 8007b7e:	4fa2      	ldr	r7, [pc, #648]	; (8007e08 <_dtoa_r+0x640>)
 8007b80:	f006 020f 	and.w	r2, r6, #15
 8007b84:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007b88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b8c:	ec51 0b18 	vmov	r0, r1, d8
 8007b90:	f7f8 fd32 	bl	80005f8 <__aeabi_dmul>
 8007b94:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007b98:	1136      	asrs	r6, r6, #4
 8007b9a:	2300      	movs	r3, #0
 8007b9c:	2502      	movs	r5, #2
 8007b9e:	2e00      	cmp	r6, #0
 8007ba0:	d17e      	bne.n	8007ca0 <_dtoa_r+0x4d8>
 8007ba2:	2b00      	cmp	r3, #0
 8007ba4:	d1d0      	bne.n	8007b48 <_dtoa_r+0x380>
 8007ba6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007ba8:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8007bac:	2b00      	cmp	r3, #0
 8007bae:	f000 8084 	beq.w	8007cba <_dtoa_r+0x4f2>
 8007bb2:	4b96      	ldr	r3, [pc, #600]	; (8007e0c <_dtoa_r+0x644>)
 8007bb4:	2200      	movs	r2, #0
 8007bb6:	4640      	mov	r0, r8
 8007bb8:	4649      	mov	r1, r9
 8007bba:	f7f8 ff8f 	bl	8000adc <__aeabi_dcmplt>
 8007bbe:	2800      	cmp	r0, #0
 8007bc0:	d07b      	beq.n	8007cba <_dtoa_r+0x4f2>
 8007bc2:	9b04      	ldr	r3, [sp, #16]
 8007bc4:	2b00      	cmp	r3, #0
 8007bc6:	d078      	beq.n	8007cba <_dtoa_r+0x4f2>
 8007bc8:	9b01      	ldr	r3, [sp, #4]
 8007bca:	2b00      	cmp	r3, #0
 8007bcc:	dd39      	ble.n	8007c42 <_dtoa_r+0x47a>
 8007bce:	4b90      	ldr	r3, [pc, #576]	; (8007e10 <_dtoa_r+0x648>)
 8007bd0:	2200      	movs	r2, #0
 8007bd2:	4640      	mov	r0, r8
 8007bd4:	4649      	mov	r1, r9
 8007bd6:	f7f8 fd0f 	bl	80005f8 <__aeabi_dmul>
 8007bda:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007bde:	9e01      	ldr	r6, [sp, #4]
 8007be0:	f10b 37ff 	add.w	r7, fp, #4294967295
 8007be4:	3501      	adds	r5, #1
 8007be6:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8007bea:	4628      	mov	r0, r5
 8007bec:	f7f8 fc9a 	bl	8000524 <__aeabi_i2d>
 8007bf0:	4642      	mov	r2, r8
 8007bf2:	464b      	mov	r3, r9
 8007bf4:	f7f8 fd00 	bl	80005f8 <__aeabi_dmul>
 8007bf8:	4b86      	ldr	r3, [pc, #536]	; (8007e14 <_dtoa_r+0x64c>)
 8007bfa:	2200      	movs	r2, #0
 8007bfc:	f7f8 fb46 	bl	800028c <__adddf3>
 8007c00:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8007c04:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007c08:	9303      	str	r3, [sp, #12]
 8007c0a:	2e00      	cmp	r6, #0
 8007c0c:	d158      	bne.n	8007cc0 <_dtoa_r+0x4f8>
 8007c0e:	4b82      	ldr	r3, [pc, #520]	; (8007e18 <_dtoa_r+0x650>)
 8007c10:	2200      	movs	r2, #0
 8007c12:	4640      	mov	r0, r8
 8007c14:	4649      	mov	r1, r9
 8007c16:	f7f8 fb37 	bl	8000288 <__aeabi_dsub>
 8007c1a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007c1e:	4680      	mov	r8, r0
 8007c20:	4689      	mov	r9, r1
 8007c22:	f7f8 ff79 	bl	8000b18 <__aeabi_dcmpgt>
 8007c26:	2800      	cmp	r0, #0
 8007c28:	f040 8296 	bne.w	8008158 <_dtoa_r+0x990>
 8007c2c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8007c30:	4640      	mov	r0, r8
 8007c32:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007c36:	4649      	mov	r1, r9
 8007c38:	f7f8 ff50 	bl	8000adc <__aeabi_dcmplt>
 8007c3c:	2800      	cmp	r0, #0
 8007c3e:	f040 8289 	bne.w	8008154 <_dtoa_r+0x98c>
 8007c42:	ed8d 8b02 	vstr	d8, [sp, #8]
 8007c46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007c48:	2b00      	cmp	r3, #0
 8007c4a:	f2c0 814e 	blt.w	8007eea <_dtoa_r+0x722>
 8007c4e:	f1bb 0f0e 	cmp.w	fp, #14
 8007c52:	f300 814a 	bgt.w	8007eea <_dtoa_r+0x722>
 8007c56:	4b6b      	ldr	r3, [pc, #428]	; (8007e04 <_dtoa_r+0x63c>)
 8007c58:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8007c5c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8007c60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007c62:	2b00      	cmp	r3, #0
 8007c64:	f280 80dc 	bge.w	8007e20 <_dtoa_r+0x658>
 8007c68:	9b04      	ldr	r3, [sp, #16]
 8007c6a:	2b00      	cmp	r3, #0
 8007c6c:	f300 80d8 	bgt.w	8007e20 <_dtoa_r+0x658>
 8007c70:	f040 826f 	bne.w	8008152 <_dtoa_r+0x98a>
 8007c74:	4b68      	ldr	r3, [pc, #416]	; (8007e18 <_dtoa_r+0x650>)
 8007c76:	2200      	movs	r2, #0
 8007c78:	4640      	mov	r0, r8
 8007c7a:	4649      	mov	r1, r9
 8007c7c:	f7f8 fcbc 	bl	80005f8 <__aeabi_dmul>
 8007c80:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007c84:	f7f8 ff3e 	bl	8000b04 <__aeabi_dcmpge>
 8007c88:	9e04      	ldr	r6, [sp, #16]
 8007c8a:	4637      	mov	r7, r6
 8007c8c:	2800      	cmp	r0, #0
 8007c8e:	f040 8245 	bne.w	800811c <_dtoa_r+0x954>
 8007c92:	9d00      	ldr	r5, [sp, #0]
 8007c94:	2331      	movs	r3, #49	; 0x31
 8007c96:	f805 3b01 	strb.w	r3, [r5], #1
 8007c9a:	f10b 0b01 	add.w	fp, fp, #1
 8007c9e:	e241      	b.n	8008124 <_dtoa_r+0x95c>
 8007ca0:	07f2      	lsls	r2, r6, #31
 8007ca2:	d505      	bpl.n	8007cb0 <_dtoa_r+0x4e8>
 8007ca4:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007ca8:	f7f8 fca6 	bl	80005f8 <__aeabi_dmul>
 8007cac:	3501      	adds	r5, #1
 8007cae:	2301      	movs	r3, #1
 8007cb0:	1076      	asrs	r6, r6, #1
 8007cb2:	3708      	adds	r7, #8
 8007cb4:	e773      	b.n	8007b9e <_dtoa_r+0x3d6>
 8007cb6:	2502      	movs	r5, #2
 8007cb8:	e775      	b.n	8007ba6 <_dtoa_r+0x3de>
 8007cba:	9e04      	ldr	r6, [sp, #16]
 8007cbc:	465f      	mov	r7, fp
 8007cbe:	e792      	b.n	8007be6 <_dtoa_r+0x41e>
 8007cc0:	9900      	ldr	r1, [sp, #0]
 8007cc2:	4b50      	ldr	r3, [pc, #320]	; (8007e04 <_dtoa_r+0x63c>)
 8007cc4:	ed9d 7b02 	vldr	d7, [sp, #8]
 8007cc8:	4431      	add	r1, r6
 8007cca:	9102      	str	r1, [sp, #8]
 8007ccc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007cce:	eeb0 9a47 	vmov.f32	s18, s14
 8007cd2:	eef0 9a67 	vmov.f32	s19, s15
 8007cd6:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8007cda:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8007cde:	2900      	cmp	r1, #0
 8007ce0:	d044      	beq.n	8007d6c <_dtoa_r+0x5a4>
 8007ce2:	494e      	ldr	r1, [pc, #312]	; (8007e1c <_dtoa_r+0x654>)
 8007ce4:	2000      	movs	r0, #0
 8007ce6:	f7f8 fdb1 	bl	800084c <__aeabi_ddiv>
 8007cea:	ec53 2b19 	vmov	r2, r3, d9
 8007cee:	f7f8 facb 	bl	8000288 <__aeabi_dsub>
 8007cf2:	9d00      	ldr	r5, [sp, #0]
 8007cf4:	ec41 0b19 	vmov	d9, r0, r1
 8007cf8:	4649      	mov	r1, r9
 8007cfa:	4640      	mov	r0, r8
 8007cfc:	f7f8 ff2c 	bl	8000b58 <__aeabi_d2iz>
 8007d00:	4606      	mov	r6, r0
 8007d02:	f7f8 fc0f 	bl	8000524 <__aeabi_i2d>
 8007d06:	4602      	mov	r2, r0
 8007d08:	460b      	mov	r3, r1
 8007d0a:	4640      	mov	r0, r8
 8007d0c:	4649      	mov	r1, r9
 8007d0e:	f7f8 fabb 	bl	8000288 <__aeabi_dsub>
 8007d12:	3630      	adds	r6, #48	; 0x30
 8007d14:	f805 6b01 	strb.w	r6, [r5], #1
 8007d18:	ec53 2b19 	vmov	r2, r3, d9
 8007d1c:	4680      	mov	r8, r0
 8007d1e:	4689      	mov	r9, r1
 8007d20:	f7f8 fedc 	bl	8000adc <__aeabi_dcmplt>
 8007d24:	2800      	cmp	r0, #0
 8007d26:	d164      	bne.n	8007df2 <_dtoa_r+0x62a>
 8007d28:	4642      	mov	r2, r8
 8007d2a:	464b      	mov	r3, r9
 8007d2c:	4937      	ldr	r1, [pc, #220]	; (8007e0c <_dtoa_r+0x644>)
 8007d2e:	2000      	movs	r0, #0
 8007d30:	f7f8 faaa 	bl	8000288 <__aeabi_dsub>
 8007d34:	ec53 2b19 	vmov	r2, r3, d9
 8007d38:	f7f8 fed0 	bl	8000adc <__aeabi_dcmplt>
 8007d3c:	2800      	cmp	r0, #0
 8007d3e:	f040 80b6 	bne.w	8007eae <_dtoa_r+0x6e6>
 8007d42:	9b02      	ldr	r3, [sp, #8]
 8007d44:	429d      	cmp	r5, r3
 8007d46:	f43f af7c 	beq.w	8007c42 <_dtoa_r+0x47a>
 8007d4a:	4b31      	ldr	r3, [pc, #196]	; (8007e10 <_dtoa_r+0x648>)
 8007d4c:	ec51 0b19 	vmov	r0, r1, d9
 8007d50:	2200      	movs	r2, #0
 8007d52:	f7f8 fc51 	bl	80005f8 <__aeabi_dmul>
 8007d56:	4b2e      	ldr	r3, [pc, #184]	; (8007e10 <_dtoa_r+0x648>)
 8007d58:	ec41 0b19 	vmov	d9, r0, r1
 8007d5c:	2200      	movs	r2, #0
 8007d5e:	4640      	mov	r0, r8
 8007d60:	4649      	mov	r1, r9
 8007d62:	f7f8 fc49 	bl	80005f8 <__aeabi_dmul>
 8007d66:	4680      	mov	r8, r0
 8007d68:	4689      	mov	r9, r1
 8007d6a:	e7c5      	b.n	8007cf8 <_dtoa_r+0x530>
 8007d6c:	ec51 0b17 	vmov	r0, r1, d7
 8007d70:	f7f8 fc42 	bl	80005f8 <__aeabi_dmul>
 8007d74:	9b02      	ldr	r3, [sp, #8]
 8007d76:	9d00      	ldr	r5, [sp, #0]
 8007d78:	930f      	str	r3, [sp, #60]	; 0x3c
 8007d7a:	ec41 0b19 	vmov	d9, r0, r1
 8007d7e:	4649      	mov	r1, r9
 8007d80:	4640      	mov	r0, r8
 8007d82:	f7f8 fee9 	bl	8000b58 <__aeabi_d2iz>
 8007d86:	4606      	mov	r6, r0
 8007d88:	f7f8 fbcc 	bl	8000524 <__aeabi_i2d>
 8007d8c:	3630      	adds	r6, #48	; 0x30
 8007d8e:	4602      	mov	r2, r0
 8007d90:	460b      	mov	r3, r1
 8007d92:	4640      	mov	r0, r8
 8007d94:	4649      	mov	r1, r9
 8007d96:	f7f8 fa77 	bl	8000288 <__aeabi_dsub>
 8007d9a:	f805 6b01 	strb.w	r6, [r5], #1
 8007d9e:	9b02      	ldr	r3, [sp, #8]
 8007da0:	429d      	cmp	r5, r3
 8007da2:	4680      	mov	r8, r0
 8007da4:	4689      	mov	r9, r1
 8007da6:	f04f 0200 	mov.w	r2, #0
 8007daa:	d124      	bne.n	8007df6 <_dtoa_r+0x62e>
 8007dac:	4b1b      	ldr	r3, [pc, #108]	; (8007e1c <_dtoa_r+0x654>)
 8007dae:	ec51 0b19 	vmov	r0, r1, d9
 8007db2:	f7f8 fa6b 	bl	800028c <__adddf3>
 8007db6:	4602      	mov	r2, r0
 8007db8:	460b      	mov	r3, r1
 8007dba:	4640      	mov	r0, r8
 8007dbc:	4649      	mov	r1, r9
 8007dbe:	f7f8 feab 	bl	8000b18 <__aeabi_dcmpgt>
 8007dc2:	2800      	cmp	r0, #0
 8007dc4:	d173      	bne.n	8007eae <_dtoa_r+0x6e6>
 8007dc6:	ec53 2b19 	vmov	r2, r3, d9
 8007dca:	4914      	ldr	r1, [pc, #80]	; (8007e1c <_dtoa_r+0x654>)
 8007dcc:	2000      	movs	r0, #0
 8007dce:	f7f8 fa5b 	bl	8000288 <__aeabi_dsub>
 8007dd2:	4602      	mov	r2, r0
 8007dd4:	460b      	mov	r3, r1
 8007dd6:	4640      	mov	r0, r8
 8007dd8:	4649      	mov	r1, r9
 8007dda:	f7f8 fe7f 	bl	8000adc <__aeabi_dcmplt>
 8007dde:	2800      	cmp	r0, #0
 8007de0:	f43f af2f 	beq.w	8007c42 <_dtoa_r+0x47a>
 8007de4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8007de6:	1e6b      	subs	r3, r5, #1
 8007de8:	930f      	str	r3, [sp, #60]	; 0x3c
 8007dea:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8007dee:	2b30      	cmp	r3, #48	; 0x30
 8007df0:	d0f8      	beq.n	8007de4 <_dtoa_r+0x61c>
 8007df2:	46bb      	mov	fp, r7
 8007df4:	e04a      	b.n	8007e8c <_dtoa_r+0x6c4>
 8007df6:	4b06      	ldr	r3, [pc, #24]	; (8007e10 <_dtoa_r+0x648>)
 8007df8:	f7f8 fbfe 	bl	80005f8 <__aeabi_dmul>
 8007dfc:	4680      	mov	r8, r0
 8007dfe:	4689      	mov	r9, r1
 8007e00:	e7bd      	b.n	8007d7e <_dtoa_r+0x5b6>
 8007e02:	bf00      	nop
 8007e04:	08009848 	.word	0x08009848
 8007e08:	08009820 	.word	0x08009820
 8007e0c:	3ff00000 	.word	0x3ff00000
 8007e10:	40240000 	.word	0x40240000
 8007e14:	401c0000 	.word	0x401c0000
 8007e18:	40140000 	.word	0x40140000
 8007e1c:	3fe00000 	.word	0x3fe00000
 8007e20:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8007e24:	9d00      	ldr	r5, [sp, #0]
 8007e26:	4642      	mov	r2, r8
 8007e28:	464b      	mov	r3, r9
 8007e2a:	4630      	mov	r0, r6
 8007e2c:	4639      	mov	r1, r7
 8007e2e:	f7f8 fd0d 	bl	800084c <__aeabi_ddiv>
 8007e32:	f7f8 fe91 	bl	8000b58 <__aeabi_d2iz>
 8007e36:	9001      	str	r0, [sp, #4]
 8007e38:	f7f8 fb74 	bl	8000524 <__aeabi_i2d>
 8007e3c:	4642      	mov	r2, r8
 8007e3e:	464b      	mov	r3, r9
 8007e40:	f7f8 fbda 	bl	80005f8 <__aeabi_dmul>
 8007e44:	4602      	mov	r2, r0
 8007e46:	460b      	mov	r3, r1
 8007e48:	4630      	mov	r0, r6
 8007e4a:	4639      	mov	r1, r7
 8007e4c:	f7f8 fa1c 	bl	8000288 <__aeabi_dsub>
 8007e50:	9e01      	ldr	r6, [sp, #4]
 8007e52:	9f04      	ldr	r7, [sp, #16]
 8007e54:	3630      	adds	r6, #48	; 0x30
 8007e56:	f805 6b01 	strb.w	r6, [r5], #1
 8007e5a:	9e00      	ldr	r6, [sp, #0]
 8007e5c:	1bae      	subs	r6, r5, r6
 8007e5e:	42b7      	cmp	r7, r6
 8007e60:	4602      	mov	r2, r0
 8007e62:	460b      	mov	r3, r1
 8007e64:	d134      	bne.n	8007ed0 <_dtoa_r+0x708>
 8007e66:	f7f8 fa11 	bl	800028c <__adddf3>
 8007e6a:	4642      	mov	r2, r8
 8007e6c:	464b      	mov	r3, r9
 8007e6e:	4606      	mov	r6, r0
 8007e70:	460f      	mov	r7, r1
 8007e72:	f7f8 fe51 	bl	8000b18 <__aeabi_dcmpgt>
 8007e76:	b9c8      	cbnz	r0, 8007eac <_dtoa_r+0x6e4>
 8007e78:	4642      	mov	r2, r8
 8007e7a:	464b      	mov	r3, r9
 8007e7c:	4630      	mov	r0, r6
 8007e7e:	4639      	mov	r1, r7
 8007e80:	f7f8 fe22 	bl	8000ac8 <__aeabi_dcmpeq>
 8007e84:	b110      	cbz	r0, 8007e8c <_dtoa_r+0x6c4>
 8007e86:	9b01      	ldr	r3, [sp, #4]
 8007e88:	07db      	lsls	r3, r3, #31
 8007e8a:	d40f      	bmi.n	8007eac <_dtoa_r+0x6e4>
 8007e8c:	4651      	mov	r1, sl
 8007e8e:	4620      	mov	r0, r4
 8007e90:	f000 fb18 	bl	80084c4 <_Bfree>
 8007e94:	2300      	movs	r3, #0
 8007e96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007e98:	702b      	strb	r3, [r5, #0]
 8007e9a:	f10b 0301 	add.w	r3, fp, #1
 8007e9e:	6013      	str	r3, [r2, #0]
 8007ea0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007ea2:	2b00      	cmp	r3, #0
 8007ea4:	f43f ace2 	beq.w	800786c <_dtoa_r+0xa4>
 8007ea8:	601d      	str	r5, [r3, #0]
 8007eaa:	e4df      	b.n	800786c <_dtoa_r+0xa4>
 8007eac:	465f      	mov	r7, fp
 8007eae:	462b      	mov	r3, r5
 8007eb0:	461d      	mov	r5, r3
 8007eb2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8007eb6:	2a39      	cmp	r2, #57	; 0x39
 8007eb8:	d106      	bne.n	8007ec8 <_dtoa_r+0x700>
 8007eba:	9a00      	ldr	r2, [sp, #0]
 8007ebc:	429a      	cmp	r2, r3
 8007ebe:	d1f7      	bne.n	8007eb0 <_dtoa_r+0x6e8>
 8007ec0:	9900      	ldr	r1, [sp, #0]
 8007ec2:	2230      	movs	r2, #48	; 0x30
 8007ec4:	3701      	adds	r7, #1
 8007ec6:	700a      	strb	r2, [r1, #0]
 8007ec8:	781a      	ldrb	r2, [r3, #0]
 8007eca:	3201      	adds	r2, #1
 8007ecc:	701a      	strb	r2, [r3, #0]
 8007ece:	e790      	b.n	8007df2 <_dtoa_r+0x62a>
 8007ed0:	4ba3      	ldr	r3, [pc, #652]	; (8008160 <_dtoa_r+0x998>)
 8007ed2:	2200      	movs	r2, #0
 8007ed4:	f7f8 fb90 	bl	80005f8 <__aeabi_dmul>
 8007ed8:	2200      	movs	r2, #0
 8007eda:	2300      	movs	r3, #0
 8007edc:	4606      	mov	r6, r0
 8007ede:	460f      	mov	r7, r1
 8007ee0:	f7f8 fdf2 	bl	8000ac8 <__aeabi_dcmpeq>
 8007ee4:	2800      	cmp	r0, #0
 8007ee6:	d09e      	beq.n	8007e26 <_dtoa_r+0x65e>
 8007ee8:	e7d0      	b.n	8007e8c <_dtoa_r+0x6c4>
 8007eea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007eec:	2a00      	cmp	r2, #0
 8007eee:	f000 80ca 	beq.w	8008086 <_dtoa_r+0x8be>
 8007ef2:	9a07      	ldr	r2, [sp, #28]
 8007ef4:	2a01      	cmp	r2, #1
 8007ef6:	f300 80ad 	bgt.w	8008054 <_dtoa_r+0x88c>
 8007efa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007efc:	2a00      	cmp	r2, #0
 8007efe:	f000 80a5 	beq.w	800804c <_dtoa_r+0x884>
 8007f02:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8007f06:	9e08      	ldr	r6, [sp, #32]
 8007f08:	9d05      	ldr	r5, [sp, #20]
 8007f0a:	9a05      	ldr	r2, [sp, #20]
 8007f0c:	441a      	add	r2, r3
 8007f0e:	9205      	str	r2, [sp, #20]
 8007f10:	9a06      	ldr	r2, [sp, #24]
 8007f12:	2101      	movs	r1, #1
 8007f14:	441a      	add	r2, r3
 8007f16:	4620      	mov	r0, r4
 8007f18:	9206      	str	r2, [sp, #24]
 8007f1a:	f000 fb89 	bl	8008630 <__i2b>
 8007f1e:	4607      	mov	r7, r0
 8007f20:	b165      	cbz	r5, 8007f3c <_dtoa_r+0x774>
 8007f22:	9b06      	ldr	r3, [sp, #24]
 8007f24:	2b00      	cmp	r3, #0
 8007f26:	dd09      	ble.n	8007f3c <_dtoa_r+0x774>
 8007f28:	42ab      	cmp	r3, r5
 8007f2a:	9a05      	ldr	r2, [sp, #20]
 8007f2c:	bfa8      	it	ge
 8007f2e:	462b      	movge	r3, r5
 8007f30:	1ad2      	subs	r2, r2, r3
 8007f32:	9205      	str	r2, [sp, #20]
 8007f34:	9a06      	ldr	r2, [sp, #24]
 8007f36:	1aed      	subs	r5, r5, r3
 8007f38:	1ad3      	subs	r3, r2, r3
 8007f3a:	9306      	str	r3, [sp, #24]
 8007f3c:	9b08      	ldr	r3, [sp, #32]
 8007f3e:	b1f3      	cbz	r3, 8007f7e <_dtoa_r+0x7b6>
 8007f40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007f42:	2b00      	cmp	r3, #0
 8007f44:	f000 80a3 	beq.w	800808e <_dtoa_r+0x8c6>
 8007f48:	2e00      	cmp	r6, #0
 8007f4a:	dd10      	ble.n	8007f6e <_dtoa_r+0x7a6>
 8007f4c:	4639      	mov	r1, r7
 8007f4e:	4632      	mov	r2, r6
 8007f50:	4620      	mov	r0, r4
 8007f52:	f000 fc2d 	bl	80087b0 <__pow5mult>
 8007f56:	4652      	mov	r2, sl
 8007f58:	4601      	mov	r1, r0
 8007f5a:	4607      	mov	r7, r0
 8007f5c:	4620      	mov	r0, r4
 8007f5e:	f000 fb7d 	bl	800865c <__multiply>
 8007f62:	4651      	mov	r1, sl
 8007f64:	4680      	mov	r8, r0
 8007f66:	4620      	mov	r0, r4
 8007f68:	f000 faac 	bl	80084c4 <_Bfree>
 8007f6c:	46c2      	mov	sl, r8
 8007f6e:	9b08      	ldr	r3, [sp, #32]
 8007f70:	1b9a      	subs	r2, r3, r6
 8007f72:	d004      	beq.n	8007f7e <_dtoa_r+0x7b6>
 8007f74:	4651      	mov	r1, sl
 8007f76:	4620      	mov	r0, r4
 8007f78:	f000 fc1a 	bl	80087b0 <__pow5mult>
 8007f7c:	4682      	mov	sl, r0
 8007f7e:	2101      	movs	r1, #1
 8007f80:	4620      	mov	r0, r4
 8007f82:	f000 fb55 	bl	8008630 <__i2b>
 8007f86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007f88:	2b00      	cmp	r3, #0
 8007f8a:	4606      	mov	r6, r0
 8007f8c:	f340 8081 	ble.w	8008092 <_dtoa_r+0x8ca>
 8007f90:	461a      	mov	r2, r3
 8007f92:	4601      	mov	r1, r0
 8007f94:	4620      	mov	r0, r4
 8007f96:	f000 fc0b 	bl	80087b0 <__pow5mult>
 8007f9a:	9b07      	ldr	r3, [sp, #28]
 8007f9c:	2b01      	cmp	r3, #1
 8007f9e:	4606      	mov	r6, r0
 8007fa0:	dd7a      	ble.n	8008098 <_dtoa_r+0x8d0>
 8007fa2:	f04f 0800 	mov.w	r8, #0
 8007fa6:	6933      	ldr	r3, [r6, #16]
 8007fa8:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8007fac:	6918      	ldr	r0, [r3, #16]
 8007fae:	f000 faf1 	bl	8008594 <__hi0bits>
 8007fb2:	f1c0 0020 	rsb	r0, r0, #32
 8007fb6:	9b06      	ldr	r3, [sp, #24]
 8007fb8:	4418      	add	r0, r3
 8007fba:	f010 001f 	ands.w	r0, r0, #31
 8007fbe:	f000 8094 	beq.w	80080ea <_dtoa_r+0x922>
 8007fc2:	f1c0 0320 	rsb	r3, r0, #32
 8007fc6:	2b04      	cmp	r3, #4
 8007fc8:	f340 8085 	ble.w	80080d6 <_dtoa_r+0x90e>
 8007fcc:	9b05      	ldr	r3, [sp, #20]
 8007fce:	f1c0 001c 	rsb	r0, r0, #28
 8007fd2:	4403      	add	r3, r0
 8007fd4:	9305      	str	r3, [sp, #20]
 8007fd6:	9b06      	ldr	r3, [sp, #24]
 8007fd8:	4403      	add	r3, r0
 8007fda:	4405      	add	r5, r0
 8007fdc:	9306      	str	r3, [sp, #24]
 8007fde:	9b05      	ldr	r3, [sp, #20]
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	dd05      	ble.n	8007ff0 <_dtoa_r+0x828>
 8007fe4:	4651      	mov	r1, sl
 8007fe6:	461a      	mov	r2, r3
 8007fe8:	4620      	mov	r0, r4
 8007fea:	f000 fc3b 	bl	8008864 <__lshift>
 8007fee:	4682      	mov	sl, r0
 8007ff0:	9b06      	ldr	r3, [sp, #24]
 8007ff2:	2b00      	cmp	r3, #0
 8007ff4:	dd05      	ble.n	8008002 <_dtoa_r+0x83a>
 8007ff6:	4631      	mov	r1, r6
 8007ff8:	461a      	mov	r2, r3
 8007ffa:	4620      	mov	r0, r4
 8007ffc:	f000 fc32 	bl	8008864 <__lshift>
 8008000:	4606      	mov	r6, r0
 8008002:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008004:	2b00      	cmp	r3, #0
 8008006:	d072      	beq.n	80080ee <_dtoa_r+0x926>
 8008008:	4631      	mov	r1, r6
 800800a:	4650      	mov	r0, sl
 800800c:	f000 fc96 	bl	800893c <__mcmp>
 8008010:	2800      	cmp	r0, #0
 8008012:	da6c      	bge.n	80080ee <_dtoa_r+0x926>
 8008014:	2300      	movs	r3, #0
 8008016:	4651      	mov	r1, sl
 8008018:	220a      	movs	r2, #10
 800801a:	4620      	mov	r0, r4
 800801c:	f000 fa74 	bl	8008508 <__multadd>
 8008020:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008022:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008026:	4682      	mov	sl, r0
 8008028:	2b00      	cmp	r3, #0
 800802a:	f000 81b0 	beq.w	800838e <_dtoa_r+0xbc6>
 800802e:	2300      	movs	r3, #0
 8008030:	4639      	mov	r1, r7
 8008032:	220a      	movs	r2, #10
 8008034:	4620      	mov	r0, r4
 8008036:	f000 fa67 	bl	8008508 <__multadd>
 800803a:	9b01      	ldr	r3, [sp, #4]
 800803c:	2b00      	cmp	r3, #0
 800803e:	4607      	mov	r7, r0
 8008040:	f300 8096 	bgt.w	8008170 <_dtoa_r+0x9a8>
 8008044:	9b07      	ldr	r3, [sp, #28]
 8008046:	2b02      	cmp	r3, #2
 8008048:	dc59      	bgt.n	80080fe <_dtoa_r+0x936>
 800804a:	e091      	b.n	8008170 <_dtoa_r+0x9a8>
 800804c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800804e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8008052:	e758      	b.n	8007f06 <_dtoa_r+0x73e>
 8008054:	9b04      	ldr	r3, [sp, #16]
 8008056:	1e5e      	subs	r6, r3, #1
 8008058:	9b08      	ldr	r3, [sp, #32]
 800805a:	42b3      	cmp	r3, r6
 800805c:	bfbf      	itttt	lt
 800805e:	9b08      	ldrlt	r3, [sp, #32]
 8008060:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8008062:	9608      	strlt	r6, [sp, #32]
 8008064:	1af3      	sublt	r3, r6, r3
 8008066:	bfb4      	ite	lt
 8008068:	18d2      	addlt	r2, r2, r3
 800806a:	1b9e      	subge	r6, r3, r6
 800806c:	9b04      	ldr	r3, [sp, #16]
 800806e:	bfbc      	itt	lt
 8008070:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8008072:	2600      	movlt	r6, #0
 8008074:	2b00      	cmp	r3, #0
 8008076:	bfb7      	itett	lt
 8008078:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 800807c:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8008080:	1a9d      	sublt	r5, r3, r2
 8008082:	2300      	movlt	r3, #0
 8008084:	e741      	b.n	8007f0a <_dtoa_r+0x742>
 8008086:	9e08      	ldr	r6, [sp, #32]
 8008088:	9d05      	ldr	r5, [sp, #20]
 800808a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800808c:	e748      	b.n	8007f20 <_dtoa_r+0x758>
 800808e:	9a08      	ldr	r2, [sp, #32]
 8008090:	e770      	b.n	8007f74 <_dtoa_r+0x7ac>
 8008092:	9b07      	ldr	r3, [sp, #28]
 8008094:	2b01      	cmp	r3, #1
 8008096:	dc19      	bgt.n	80080cc <_dtoa_r+0x904>
 8008098:	9b02      	ldr	r3, [sp, #8]
 800809a:	b9bb      	cbnz	r3, 80080cc <_dtoa_r+0x904>
 800809c:	9b03      	ldr	r3, [sp, #12]
 800809e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80080a2:	b99b      	cbnz	r3, 80080cc <_dtoa_r+0x904>
 80080a4:	9b03      	ldr	r3, [sp, #12]
 80080a6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80080aa:	0d1b      	lsrs	r3, r3, #20
 80080ac:	051b      	lsls	r3, r3, #20
 80080ae:	b183      	cbz	r3, 80080d2 <_dtoa_r+0x90a>
 80080b0:	9b05      	ldr	r3, [sp, #20]
 80080b2:	3301      	adds	r3, #1
 80080b4:	9305      	str	r3, [sp, #20]
 80080b6:	9b06      	ldr	r3, [sp, #24]
 80080b8:	3301      	adds	r3, #1
 80080ba:	9306      	str	r3, [sp, #24]
 80080bc:	f04f 0801 	mov.w	r8, #1
 80080c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80080c2:	2b00      	cmp	r3, #0
 80080c4:	f47f af6f 	bne.w	8007fa6 <_dtoa_r+0x7de>
 80080c8:	2001      	movs	r0, #1
 80080ca:	e774      	b.n	8007fb6 <_dtoa_r+0x7ee>
 80080cc:	f04f 0800 	mov.w	r8, #0
 80080d0:	e7f6      	b.n	80080c0 <_dtoa_r+0x8f8>
 80080d2:	4698      	mov	r8, r3
 80080d4:	e7f4      	b.n	80080c0 <_dtoa_r+0x8f8>
 80080d6:	d082      	beq.n	8007fde <_dtoa_r+0x816>
 80080d8:	9a05      	ldr	r2, [sp, #20]
 80080da:	331c      	adds	r3, #28
 80080dc:	441a      	add	r2, r3
 80080de:	9205      	str	r2, [sp, #20]
 80080e0:	9a06      	ldr	r2, [sp, #24]
 80080e2:	441a      	add	r2, r3
 80080e4:	441d      	add	r5, r3
 80080e6:	9206      	str	r2, [sp, #24]
 80080e8:	e779      	b.n	8007fde <_dtoa_r+0x816>
 80080ea:	4603      	mov	r3, r0
 80080ec:	e7f4      	b.n	80080d8 <_dtoa_r+0x910>
 80080ee:	9b04      	ldr	r3, [sp, #16]
 80080f0:	2b00      	cmp	r3, #0
 80080f2:	dc37      	bgt.n	8008164 <_dtoa_r+0x99c>
 80080f4:	9b07      	ldr	r3, [sp, #28]
 80080f6:	2b02      	cmp	r3, #2
 80080f8:	dd34      	ble.n	8008164 <_dtoa_r+0x99c>
 80080fa:	9b04      	ldr	r3, [sp, #16]
 80080fc:	9301      	str	r3, [sp, #4]
 80080fe:	9b01      	ldr	r3, [sp, #4]
 8008100:	b963      	cbnz	r3, 800811c <_dtoa_r+0x954>
 8008102:	4631      	mov	r1, r6
 8008104:	2205      	movs	r2, #5
 8008106:	4620      	mov	r0, r4
 8008108:	f000 f9fe 	bl	8008508 <__multadd>
 800810c:	4601      	mov	r1, r0
 800810e:	4606      	mov	r6, r0
 8008110:	4650      	mov	r0, sl
 8008112:	f000 fc13 	bl	800893c <__mcmp>
 8008116:	2800      	cmp	r0, #0
 8008118:	f73f adbb 	bgt.w	8007c92 <_dtoa_r+0x4ca>
 800811c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800811e:	9d00      	ldr	r5, [sp, #0]
 8008120:	ea6f 0b03 	mvn.w	fp, r3
 8008124:	f04f 0800 	mov.w	r8, #0
 8008128:	4631      	mov	r1, r6
 800812a:	4620      	mov	r0, r4
 800812c:	f000 f9ca 	bl	80084c4 <_Bfree>
 8008130:	2f00      	cmp	r7, #0
 8008132:	f43f aeab 	beq.w	8007e8c <_dtoa_r+0x6c4>
 8008136:	f1b8 0f00 	cmp.w	r8, #0
 800813a:	d005      	beq.n	8008148 <_dtoa_r+0x980>
 800813c:	45b8      	cmp	r8, r7
 800813e:	d003      	beq.n	8008148 <_dtoa_r+0x980>
 8008140:	4641      	mov	r1, r8
 8008142:	4620      	mov	r0, r4
 8008144:	f000 f9be 	bl	80084c4 <_Bfree>
 8008148:	4639      	mov	r1, r7
 800814a:	4620      	mov	r0, r4
 800814c:	f000 f9ba 	bl	80084c4 <_Bfree>
 8008150:	e69c      	b.n	8007e8c <_dtoa_r+0x6c4>
 8008152:	2600      	movs	r6, #0
 8008154:	4637      	mov	r7, r6
 8008156:	e7e1      	b.n	800811c <_dtoa_r+0x954>
 8008158:	46bb      	mov	fp, r7
 800815a:	4637      	mov	r7, r6
 800815c:	e599      	b.n	8007c92 <_dtoa_r+0x4ca>
 800815e:	bf00      	nop
 8008160:	40240000 	.word	0x40240000
 8008164:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008166:	2b00      	cmp	r3, #0
 8008168:	f000 80c8 	beq.w	80082fc <_dtoa_r+0xb34>
 800816c:	9b04      	ldr	r3, [sp, #16]
 800816e:	9301      	str	r3, [sp, #4]
 8008170:	2d00      	cmp	r5, #0
 8008172:	dd05      	ble.n	8008180 <_dtoa_r+0x9b8>
 8008174:	4639      	mov	r1, r7
 8008176:	462a      	mov	r2, r5
 8008178:	4620      	mov	r0, r4
 800817a:	f000 fb73 	bl	8008864 <__lshift>
 800817e:	4607      	mov	r7, r0
 8008180:	f1b8 0f00 	cmp.w	r8, #0
 8008184:	d05b      	beq.n	800823e <_dtoa_r+0xa76>
 8008186:	6879      	ldr	r1, [r7, #4]
 8008188:	4620      	mov	r0, r4
 800818a:	f000 f95b 	bl	8008444 <_Balloc>
 800818e:	4605      	mov	r5, r0
 8008190:	b928      	cbnz	r0, 800819e <_dtoa_r+0x9d6>
 8008192:	4b83      	ldr	r3, [pc, #524]	; (80083a0 <_dtoa_r+0xbd8>)
 8008194:	4602      	mov	r2, r0
 8008196:	f240 21ef 	movw	r1, #751	; 0x2ef
 800819a:	f7ff bb2e 	b.w	80077fa <_dtoa_r+0x32>
 800819e:	693a      	ldr	r2, [r7, #16]
 80081a0:	3202      	adds	r2, #2
 80081a2:	0092      	lsls	r2, r2, #2
 80081a4:	f107 010c 	add.w	r1, r7, #12
 80081a8:	300c      	adds	r0, #12
 80081aa:	f7ff fa77 	bl	800769c <memcpy>
 80081ae:	2201      	movs	r2, #1
 80081b0:	4629      	mov	r1, r5
 80081b2:	4620      	mov	r0, r4
 80081b4:	f000 fb56 	bl	8008864 <__lshift>
 80081b8:	9b00      	ldr	r3, [sp, #0]
 80081ba:	3301      	adds	r3, #1
 80081bc:	9304      	str	r3, [sp, #16]
 80081be:	e9dd 2300 	ldrd	r2, r3, [sp]
 80081c2:	4413      	add	r3, r2
 80081c4:	9308      	str	r3, [sp, #32]
 80081c6:	9b02      	ldr	r3, [sp, #8]
 80081c8:	f003 0301 	and.w	r3, r3, #1
 80081cc:	46b8      	mov	r8, r7
 80081ce:	9306      	str	r3, [sp, #24]
 80081d0:	4607      	mov	r7, r0
 80081d2:	9b04      	ldr	r3, [sp, #16]
 80081d4:	4631      	mov	r1, r6
 80081d6:	3b01      	subs	r3, #1
 80081d8:	4650      	mov	r0, sl
 80081da:	9301      	str	r3, [sp, #4]
 80081dc:	f7ff fa6c 	bl	80076b8 <quorem>
 80081e0:	4641      	mov	r1, r8
 80081e2:	9002      	str	r0, [sp, #8]
 80081e4:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80081e8:	4650      	mov	r0, sl
 80081ea:	f000 fba7 	bl	800893c <__mcmp>
 80081ee:	463a      	mov	r2, r7
 80081f0:	9005      	str	r0, [sp, #20]
 80081f2:	4631      	mov	r1, r6
 80081f4:	4620      	mov	r0, r4
 80081f6:	f000 fbbd 	bl	8008974 <__mdiff>
 80081fa:	68c2      	ldr	r2, [r0, #12]
 80081fc:	4605      	mov	r5, r0
 80081fe:	bb02      	cbnz	r2, 8008242 <_dtoa_r+0xa7a>
 8008200:	4601      	mov	r1, r0
 8008202:	4650      	mov	r0, sl
 8008204:	f000 fb9a 	bl	800893c <__mcmp>
 8008208:	4602      	mov	r2, r0
 800820a:	4629      	mov	r1, r5
 800820c:	4620      	mov	r0, r4
 800820e:	9209      	str	r2, [sp, #36]	; 0x24
 8008210:	f000 f958 	bl	80084c4 <_Bfree>
 8008214:	9b07      	ldr	r3, [sp, #28]
 8008216:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008218:	9d04      	ldr	r5, [sp, #16]
 800821a:	ea43 0102 	orr.w	r1, r3, r2
 800821e:	9b06      	ldr	r3, [sp, #24]
 8008220:	4319      	orrs	r1, r3
 8008222:	d110      	bne.n	8008246 <_dtoa_r+0xa7e>
 8008224:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8008228:	d029      	beq.n	800827e <_dtoa_r+0xab6>
 800822a:	9b05      	ldr	r3, [sp, #20]
 800822c:	2b00      	cmp	r3, #0
 800822e:	dd02      	ble.n	8008236 <_dtoa_r+0xa6e>
 8008230:	9b02      	ldr	r3, [sp, #8]
 8008232:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8008236:	9b01      	ldr	r3, [sp, #4]
 8008238:	f883 9000 	strb.w	r9, [r3]
 800823c:	e774      	b.n	8008128 <_dtoa_r+0x960>
 800823e:	4638      	mov	r0, r7
 8008240:	e7ba      	b.n	80081b8 <_dtoa_r+0x9f0>
 8008242:	2201      	movs	r2, #1
 8008244:	e7e1      	b.n	800820a <_dtoa_r+0xa42>
 8008246:	9b05      	ldr	r3, [sp, #20]
 8008248:	2b00      	cmp	r3, #0
 800824a:	db04      	blt.n	8008256 <_dtoa_r+0xa8e>
 800824c:	9907      	ldr	r1, [sp, #28]
 800824e:	430b      	orrs	r3, r1
 8008250:	9906      	ldr	r1, [sp, #24]
 8008252:	430b      	orrs	r3, r1
 8008254:	d120      	bne.n	8008298 <_dtoa_r+0xad0>
 8008256:	2a00      	cmp	r2, #0
 8008258:	dded      	ble.n	8008236 <_dtoa_r+0xa6e>
 800825a:	4651      	mov	r1, sl
 800825c:	2201      	movs	r2, #1
 800825e:	4620      	mov	r0, r4
 8008260:	f000 fb00 	bl	8008864 <__lshift>
 8008264:	4631      	mov	r1, r6
 8008266:	4682      	mov	sl, r0
 8008268:	f000 fb68 	bl	800893c <__mcmp>
 800826c:	2800      	cmp	r0, #0
 800826e:	dc03      	bgt.n	8008278 <_dtoa_r+0xab0>
 8008270:	d1e1      	bne.n	8008236 <_dtoa_r+0xa6e>
 8008272:	f019 0f01 	tst.w	r9, #1
 8008276:	d0de      	beq.n	8008236 <_dtoa_r+0xa6e>
 8008278:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800827c:	d1d8      	bne.n	8008230 <_dtoa_r+0xa68>
 800827e:	9a01      	ldr	r2, [sp, #4]
 8008280:	2339      	movs	r3, #57	; 0x39
 8008282:	7013      	strb	r3, [r2, #0]
 8008284:	462b      	mov	r3, r5
 8008286:	461d      	mov	r5, r3
 8008288:	3b01      	subs	r3, #1
 800828a:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800828e:	2a39      	cmp	r2, #57	; 0x39
 8008290:	d06c      	beq.n	800836c <_dtoa_r+0xba4>
 8008292:	3201      	adds	r2, #1
 8008294:	701a      	strb	r2, [r3, #0]
 8008296:	e747      	b.n	8008128 <_dtoa_r+0x960>
 8008298:	2a00      	cmp	r2, #0
 800829a:	dd07      	ble.n	80082ac <_dtoa_r+0xae4>
 800829c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80082a0:	d0ed      	beq.n	800827e <_dtoa_r+0xab6>
 80082a2:	9a01      	ldr	r2, [sp, #4]
 80082a4:	f109 0301 	add.w	r3, r9, #1
 80082a8:	7013      	strb	r3, [r2, #0]
 80082aa:	e73d      	b.n	8008128 <_dtoa_r+0x960>
 80082ac:	9b04      	ldr	r3, [sp, #16]
 80082ae:	9a08      	ldr	r2, [sp, #32]
 80082b0:	f803 9c01 	strb.w	r9, [r3, #-1]
 80082b4:	4293      	cmp	r3, r2
 80082b6:	d043      	beq.n	8008340 <_dtoa_r+0xb78>
 80082b8:	4651      	mov	r1, sl
 80082ba:	2300      	movs	r3, #0
 80082bc:	220a      	movs	r2, #10
 80082be:	4620      	mov	r0, r4
 80082c0:	f000 f922 	bl	8008508 <__multadd>
 80082c4:	45b8      	cmp	r8, r7
 80082c6:	4682      	mov	sl, r0
 80082c8:	f04f 0300 	mov.w	r3, #0
 80082cc:	f04f 020a 	mov.w	r2, #10
 80082d0:	4641      	mov	r1, r8
 80082d2:	4620      	mov	r0, r4
 80082d4:	d107      	bne.n	80082e6 <_dtoa_r+0xb1e>
 80082d6:	f000 f917 	bl	8008508 <__multadd>
 80082da:	4680      	mov	r8, r0
 80082dc:	4607      	mov	r7, r0
 80082de:	9b04      	ldr	r3, [sp, #16]
 80082e0:	3301      	adds	r3, #1
 80082e2:	9304      	str	r3, [sp, #16]
 80082e4:	e775      	b.n	80081d2 <_dtoa_r+0xa0a>
 80082e6:	f000 f90f 	bl	8008508 <__multadd>
 80082ea:	4639      	mov	r1, r7
 80082ec:	4680      	mov	r8, r0
 80082ee:	2300      	movs	r3, #0
 80082f0:	220a      	movs	r2, #10
 80082f2:	4620      	mov	r0, r4
 80082f4:	f000 f908 	bl	8008508 <__multadd>
 80082f8:	4607      	mov	r7, r0
 80082fa:	e7f0      	b.n	80082de <_dtoa_r+0xb16>
 80082fc:	9b04      	ldr	r3, [sp, #16]
 80082fe:	9301      	str	r3, [sp, #4]
 8008300:	9d00      	ldr	r5, [sp, #0]
 8008302:	4631      	mov	r1, r6
 8008304:	4650      	mov	r0, sl
 8008306:	f7ff f9d7 	bl	80076b8 <quorem>
 800830a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800830e:	9b00      	ldr	r3, [sp, #0]
 8008310:	f805 9b01 	strb.w	r9, [r5], #1
 8008314:	1aea      	subs	r2, r5, r3
 8008316:	9b01      	ldr	r3, [sp, #4]
 8008318:	4293      	cmp	r3, r2
 800831a:	dd07      	ble.n	800832c <_dtoa_r+0xb64>
 800831c:	4651      	mov	r1, sl
 800831e:	2300      	movs	r3, #0
 8008320:	220a      	movs	r2, #10
 8008322:	4620      	mov	r0, r4
 8008324:	f000 f8f0 	bl	8008508 <__multadd>
 8008328:	4682      	mov	sl, r0
 800832a:	e7ea      	b.n	8008302 <_dtoa_r+0xb3a>
 800832c:	9b01      	ldr	r3, [sp, #4]
 800832e:	2b00      	cmp	r3, #0
 8008330:	bfc8      	it	gt
 8008332:	461d      	movgt	r5, r3
 8008334:	9b00      	ldr	r3, [sp, #0]
 8008336:	bfd8      	it	le
 8008338:	2501      	movle	r5, #1
 800833a:	441d      	add	r5, r3
 800833c:	f04f 0800 	mov.w	r8, #0
 8008340:	4651      	mov	r1, sl
 8008342:	2201      	movs	r2, #1
 8008344:	4620      	mov	r0, r4
 8008346:	f000 fa8d 	bl	8008864 <__lshift>
 800834a:	4631      	mov	r1, r6
 800834c:	4682      	mov	sl, r0
 800834e:	f000 faf5 	bl	800893c <__mcmp>
 8008352:	2800      	cmp	r0, #0
 8008354:	dc96      	bgt.n	8008284 <_dtoa_r+0xabc>
 8008356:	d102      	bne.n	800835e <_dtoa_r+0xb96>
 8008358:	f019 0f01 	tst.w	r9, #1
 800835c:	d192      	bne.n	8008284 <_dtoa_r+0xabc>
 800835e:	462b      	mov	r3, r5
 8008360:	461d      	mov	r5, r3
 8008362:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8008366:	2a30      	cmp	r2, #48	; 0x30
 8008368:	d0fa      	beq.n	8008360 <_dtoa_r+0xb98>
 800836a:	e6dd      	b.n	8008128 <_dtoa_r+0x960>
 800836c:	9a00      	ldr	r2, [sp, #0]
 800836e:	429a      	cmp	r2, r3
 8008370:	d189      	bne.n	8008286 <_dtoa_r+0xabe>
 8008372:	f10b 0b01 	add.w	fp, fp, #1
 8008376:	2331      	movs	r3, #49	; 0x31
 8008378:	e796      	b.n	80082a8 <_dtoa_r+0xae0>
 800837a:	4b0a      	ldr	r3, [pc, #40]	; (80083a4 <_dtoa_r+0xbdc>)
 800837c:	f7ff ba99 	b.w	80078b2 <_dtoa_r+0xea>
 8008380:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008382:	2b00      	cmp	r3, #0
 8008384:	f47f aa6d 	bne.w	8007862 <_dtoa_r+0x9a>
 8008388:	4b07      	ldr	r3, [pc, #28]	; (80083a8 <_dtoa_r+0xbe0>)
 800838a:	f7ff ba92 	b.w	80078b2 <_dtoa_r+0xea>
 800838e:	9b01      	ldr	r3, [sp, #4]
 8008390:	2b00      	cmp	r3, #0
 8008392:	dcb5      	bgt.n	8008300 <_dtoa_r+0xb38>
 8008394:	9b07      	ldr	r3, [sp, #28]
 8008396:	2b02      	cmp	r3, #2
 8008398:	f73f aeb1 	bgt.w	80080fe <_dtoa_r+0x936>
 800839c:	e7b0      	b.n	8008300 <_dtoa_r+0xb38>
 800839e:	bf00      	nop
 80083a0:	080097b0 	.word	0x080097b0
 80083a4:	08009710 	.word	0x08009710
 80083a8:	08009734 	.word	0x08009734

080083ac <_free_r>:
 80083ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80083ae:	2900      	cmp	r1, #0
 80083b0:	d044      	beq.n	800843c <_free_r+0x90>
 80083b2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80083b6:	9001      	str	r0, [sp, #4]
 80083b8:	2b00      	cmp	r3, #0
 80083ba:	f1a1 0404 	sub.w	r4, r1, #4
 80083be:	bfb8      	it	lt
 80083c0:	18e4      	addlt	r4, r4, r3
 80083c2:	f7fe fb13 	bl	80069ec <__malloc_lock>
 80083c6:	4a1e      	ldr	r2, [pc, #120]	; (8008440 <_free_r+0x94>)
 80083c8:	9801      	ldr	r0, [sp, #4]
 80083ca:	6813      	ldr	r3, [r2, #0]
 80083cc:	b933      	cbnz	r3, 80083dc <_free_r+0x30>
 80083ce:	6063      	str	r3, [r4, #4]
 80083d0:	6014      	str	r4, [r2, #0]
 80083d2:	b003      	add	sp, #12
 80083d4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80083d8:	f7fe bb0e 	b.w	80069f8 <__malloc_unlock>
 80083dc:	42a3      	cmp	r3, r4
 80083de:	d908      	bls.n	80083f2 <_free_r+0x46>
 80083e0:	6825      	ldr	r5, [r4, #0]
 80083e2:	1961      	adds	r1, r4, r5
 80083e4:	428b      	cmp	r3, r1
 80083e6:	bf01      	itttt	eq
 80083e8:	6819      	ldreq	r1, [r3, #0]
 80083ea:	685b      	ldreq	r3, [r3, #4]
 80083ec:	1949      	addeq	r1, r1, r5
 80083ee:	6021      	streq	r1, [r4, #0]
 80083f0:	e7ed      	b.n	80083ce <_free_r+0x22>
 80083f2:	461a      	mov	r2, r3
 80083f4:	685b      	ldr	r3, [r3, #4]
 80083f6:	b10b      	cbz	r3, 80083fc <_free_r+0x50>
 80083f8:	42a3      	cmp	r3, r4
 80083fa:	d9fa      	bls.n	80083f2 <_free_r+0x46>
 80083fc:	6811      	ldr	r1, [r2, #0]
 80083fe:	1855      	adds	r5, r2, r1
 8008400:	42a5      	cmp	r5, r4
 8008402:	d10b      	bne.n	800841c <_free_r+0x70>
 8008404:	6824      	ldr	r4, [r4, #0]
 8008406:	4421      	add	r1, r4
 8008408:	1854      	adds	r4, r2, r1
 800840a:	42a3      	cmp	r3, r4
 800840c:	6011      	str	r1, [r2, #0]
 800840e:	d1e0      	bne.n	80083d2 <_free_r+0x26>
 8008410:	681c      	ldr	r4, [r3, #0]
 8008412:	685b      	ldr	r3, [r3, #4]
 8008414:	6053      	str	r3, [r2, #4]
 8008416:	440c      	add	r4, r1
 8008418:	6014      	str	r4, [r2, #0]
 800841a:	e7da      	b.n	80083d2 <_free_r+0x26>
 800841c:	d902      	bls.n	8008424 <_free_r+0x78>
 800841e:	230c      	movs	r3, #12
 8008420:	6003      	str	r3, [r0, #0]
 8008422:	e7d6      	b.n	80083d2 <_free_r+0x26>
 8008424:	6825      	ldr	r5, [r4, #0]
 8008426:	1961      	adds	r1, r4, r5
 8008428:	428b      	cmp	r3, r1
 800842a:	bf04      	itt	eq
 800842c:	6819      	ldreq	r1, [r3, #0]
 800842e:	685b      	ldreq	r3, [r3, #4]
 8008430:	6063      	str	r3, [r4, #4]
 8008432:	bf04      	itt	eq
 8008434:	1949      	addeq	r1, r1, r5
 8008436:	6021      	streq	r1, [r4, #0]
 8008438:	6054      	str	r4, [r2, #4]
 800843a:	e7ca      	b.n	80083d2 <_free_r+0x26>
 800843c:	b003      	add	sp, #12
 800843e:	bd30      	pop	{r4, r5, pc}
 8008440:	200004c8 	.word	0x200004c8

08008444 <_Balloc>:
 8008444:	b570      	push	{r4, r5, r6, lr}
 8008446:	69c6      	ldr	r6, [r0, #28]
 8008448:	4604      	mov	r4, r0
 800844a:	460d      	mov	r5, r1
 800844c:	b976      	cbnz	r6, 800846c <_Balloc+0x28>
 800844e:	2010      	movs	r0, #16
 8008450:	f7fe fa1c 	bl	800688c <malloc>
 8008454:	4602      	mov	r2, r0
 8008456:	61e0      	str	r0, [r4, #28]
 8008458:	b920      	cbnz	r0, 8008464 <_Balloc+0x20>
 800845a:	4b18      	ldr	r3, [pc, #96]	; (80084bc <_Balloc+0x78>)
 800845c:	4818      	ldr	r0, [pc, #96]	; (80084c0 <_Balloc+0x7c>)
 800845e:	216b      	movs	r1, #107	; 0x6b
 8008460:	f000 fd8c 	bl	8008f7c <__assert_func>
 8008464:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8008468:	6006      	str	r6, [r0, #0]
 800846a:	60c6      	str	r6, [r0, #12]
 800846c:	69e6      	ldr	r6, [r4, #28]
 800846e:	68f3      	ldr	r3, [r6, #12]
 8008470:	b183      	cbz	r3, 8008494 <_Balloc+0x50>
 8008472:	69e3      	ldr	r3, [r4, #28]
 8008474:	68db      	ldr	r3, [r3, #12]
 8008476:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800847a:	b9b8      	cbnz	r0, 80084ac <_Balloc+0x68>
 800847c:	2101      	movs	r1, #1
 800847e:	fa01 f605 	lsl.w	r6, r1, r5
 8008482:	1d72      	adds	r2, r6, #5
 8008484:	0092      	lsls	r2, r2, #2
 8008486:	4620      	mov	r0, r4
 8008488:	f000 fd96 	bl	8008fb8 <_calloc_r>
 800848c:	b160      	cbz	r0, 80084a8 <_Balloc+0x64>
 800848e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8008492:	e00e      	b.n	80084b2 <_Balloc+0x6e>
 8008494:	2221      	movs	r2, #33	; 0x21
 8008496:	2104      	movs	r1, #4
 8008498:	4620      	mov	r0, r4
 800849a:	f000 fd8d 	bl	8008fb8 <_calloc_r>
 800849e:	69e3      	ldr	r3, [r4, #28]
 80084a0:	60f0      	str	r0, [r6, #12]
 80084a2:	68db      	ldr	r3, [r3, #12]
 80084a4:	2b00      	cmp	r3, #0
 80084a6:	d1e4      	bne.n	8008472 <_Balloc+0x2e>
 80084a8:	2000      	movs	r0, #0
 80084aa:	bd70      	pop	{r4, r5, r6, pc}
 80084ac:	6802      	ldr	r2, [r0, #0]
 80084ae:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80084b2:	2300      	movs	r3, #0
 80084b4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80084b8:	e7f7      	b.n	80084aa <_Balloc+0x66>
 80084ba:	bf00      	nop
 80084bc:	08009741 	.word	0x08009741
 80084c0:	080097c1 	.word	0x080097c1

080084c4 <_Bfree>:
 80084c4:	b570      	push	{r4, r5, r6, lr}
 80084c6:	69c6      	ldr	r6, [r0, #28]
 80084c8:	4605      	mov	r5, r0
 80084ca:	460c      	mov	r4, r1
 80084cc:	b976      	cbnz	r6, 80084ec <_Bfree+0x28>
 80084ce:	2010      	movs	r0, #16
 80084d0:	f7fe f9dc 	bl	800688c <malloc>
 80084d4:	4602      	mov	r2, r0
 80084d6:	61e8      	str	r0, [r5, #28]
 80084d8:	b920      	cbnz	r0, 80084e4 <_Bfree+0x20>
 80084da:	4b09      	ldr	r3, [pc, #36]	; (8008500 <_Bfree+0x3c>)
 80084dc:	4809      	ldr	r0, [pc, #36]	; (8008504 <_Bfree+0x40>)
 80084de:	218f      	movs	r1, #143	; 0x8f
 80084e0:	f000 fd4c 	bl	8008f7c <__assert_func>
 80084e4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80084e8:	6006      	str	r6, [r0, #0]
 80084ea:	60c6      	str	r6, [r0, #12]
 80084ec:	b13c      	cbz	r4, 80084fe <_Bfree+0x3a>
 80084ee:	69eb      	ldr	r3, [r5, #28]
 80084f0:	6862      	ldr	r2, [r4, #4]
 80084f2:	68db      	ldr	r3, [r3, #12]
 80084f4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80084f8:	6021      	str	r1, [r4, #0]
 80084fa:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80084fe:	bd70      	pop	{r4, r5, r6, pc}
 8008500:	08009741 	.word	0x08009741
 8008504:	080097c1 	.word	0x080097c1

08008508 <__multadd>:
 8008508:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800850c:	690d      	ldr	r5, [r1, #16]
 800850e:	4607      	mov	r7, r0
 8008510:	460c      	mov	r4, r1
 8008512:	461e      	mov	r6, r3
 8008514:	f101 0c14 	add.w	ip, r1, #20
 8008518:	2000      	movs	r0, #0
 800851a:	f8dc 3000 	ldr.w	r3, [ip]
 800851e:	b299      	uxth	r1, r3
 8008520:	fb02 6101 	mla	r1, r2, r1, r6
 8008524:	0c1e      	lsrs	r6, r3, #16
 8008526:	0c0b      	lsrs	r3, r1, #16
 8008528:	fb02 3306 	mla	r3, r2, r6, r3
 800852c:	b289      	uxth	r1, r1
 800852e:	3001      	adds	r0, #1
 8008530:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8008534:	4285      	cmp	r5, r0
 8008536:	f84c 1b04 	str.w	r1, [ip], #4
 800853a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800853e:	dcec      	bgt.n	800851a <__multadd+0x12>
 8008540:	b30e      	cbz	r6, 8008586 <__multadd+0x7e>
 8008542:	68a3      	ldr	r3, [r4, #8]
 8008544:	42ab      	cmp	r3, r5
 8008546:	dc19      	bgt.n	800857c <__multadd+0x74>
 8008548:	6861      	ldr	r1, [r4, #4]
 800854a:	4638      	mov	r0, r7
 800854c:	3101      	adds	r1, #1
 800854e:	f7ff ff79 	bl	8008444 <_Balloc>
 8008552:	4680      	mov	r8, r0
 8008554:	b928      	cbnz	r0, 8008562 <__multadd+0x5a>
 8008556:	4602      	mov	r2, r0
 8008558:	4b0c      	ldr	r3, [pc, #48]	; (800858c <__multadd+0x84>)
 800855a:	480d      	ldr	r0, [pc, #52]	; (8008590 <__multadd+0x88>)
 800855c:	21ba      	movs	r1, #186	; 0xba
 800855e:	f000 fd0d 	bl	8008f7c <__assert_func>
 8008562:	6922      	ldr	r2, [r4, #16]
 8008564:	3202      	adds	r2, #2
 8008566:	f104 010c 	add.w	r1, r4, #12
 800856a:	0092      	lsls	r2, r2, #2
 800856c:	300c      	adds	r0, #12
 800856e:	f7ff f895 	bl	800769c <memcpy>
 8008572:	4621      	mov	r1, r4
 8008574:	4638      	mov	r0, r7
 8008576:	f7ff ffa5 	bl	80084c4 <_Bfree>
 800857a:	4644      	mov	r4, r8
 800857c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8008580:	3501      	adds	r5, #1
 8008582:	615e      	str	r6, [r3, #20]
 8008584:	6125      	str	r5, [r4, #16]
 8008586:	4620      	mov	r0, r4
 8008588:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800858c:	080097b0 	.word	0x080097b0
 8008590:	080097c1 	.word	0x080097c1

08008594 <__hi0bits>:
 8008594:	0c03      	lsrs	r3, r0, #16
 8008596:	041b      	lsls	r3, r3, #16
 8008598:	b9d3      	cbnz	r3, 80085d0 <__hi0bits+0x3c>
 800859a:	0400      	lsls	r0, r0, #16
 800859c:	2310      	movs	r3, #16
 800859e:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80085a2:	bf04      	itt	eq
 80085a4:	0200      	lsleq	r0, r0, #8
 80085a6:	3308      	addeq	r3, #8
 80085a8:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80085ac:	bf04      	itt	eq
 80085ae:	0100      	lsleq	r0, r0, #4
 80085b0:	3304      	addeq	r3, #4
 80085b2:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80085b6:	bf04      	itt	eq
 80085b8:	0080      	lsleq	r0, r0, #2
 80085ba:	3302      	addeq	r3, #2
 80085bc:	2800      	cmp	r0, #0
 80085be:	db05      	blt.n	80085cc <__hi0bits+0x38>
 80085c0:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80085c4:	f103 0301 	add.w	r3, r3, #1
 80085c8:	bf08      	it	eq
 80085ca:	2320      	moveq	r3, #32
 80085cc:	4618      	mov	r0, r3
 80085ce:	4770      	bx	lr
 80085d0:	2300      	movs	r3, #0
 80085d2:	e7e4      	b.n	800859e <__hi0bits+0xa>

080085d4 <__lo0bits>:
 80085d4:	6803      	ldr	r3, [r0, #0]
 80085d6:	f013 0207 	ands.w	r2, r3, #7
 80085da:	d00c      	beq.n	80085f6 <__lo0bits+0x22>
 80085dc:	07d9      	lsls	r1, r3, #31
 80085de:	d422      	bmi.n	8008626 <__lo0bits+0x52>
 80085e0:	079a      	lsls	r2, r3, #30
 80085e2:	bf49      	itett	mi
 80085e4:	085b      	lsrmi	r3, r3, #1
 80085e6:	089b      	lsrpl	r3, r3, #2
 80085e8:	6003      	strmi	r3, [r0, #0]
 80085ea:	2201      	movmi	r2, #1
 80085ec:	bf5c      	itt	pl
 80085ee:	6003      	strpl	r3, [r0, #0]
 80085f0:	2202      	movpl	r2, #2
 80085f2:	4610      	mov	r0, r2
 80085f4:	4770      	bx	lr
 80085f6:	b299      	uxth	r1, r3
 80085f8:	b909      	cbnz	r1, 80085fe <__lo0bits+0x2a>
 80085fa:	0c1b      	lsrs	r3, r3, #16
 80085fc:	2210      	movs	r2, #16
 80085fe:	b2d9      	uxtb	r1, r3
 8008600:	b909      	cbnz	r1, 8008606 <__lo0bits+0x32>
 8008602:	3208      	adds	r2, #8
 8008604:	0a1b      	lsrs	r3, r3, #8
 8008606:	0719      	lsls	r1, r3, #28
 8008608:	bf04      	itt	eq
 800860a:	091b      	lsreq	r3, r3, #4
 800860c:	3204      	addeq	r2, #4
 800860e:	0799      	lsls	r1, r3, #30
 8008610:	bf04      	itt	eq
 8008612:	089b      	lsreq	r3, r3, #2
 8008614:	3202      	addeq	r2, #2
 8008616:	07d9      	lsls	r1, r3, #31
 8008618:	d403      	bmi.n	8008622 <__lo0bits+0x4e>
 800861a:	085b      	lsrs	r3, r3, #1
 800861c:	f102 0201 	add.w	r2, r2, #1
 8008620:	d003      	beq.n	800862a <__lo0bits+0x56>
 8008622:	6003      	str	r3, [r0, #0]
 8008624:	e7e5      	b.n	80085f2 <__lo0bits+0x1e>
 8008626:	2200      	movs	r2, #0
 8008628:	e7e3      	b.n	80085f2 <__lo0bits+0x1e>
 800862a:	2220      	movs	r2, #32
 800862c:	e7e1      	b.n	80085f2 <__lo0bits+0x1e>
	...

08008630 <__i2b>:
 8008630:	b510      	push	{r4, lr}
 8008632:	460c      	mov	r4, r1
 8008634:	2101      	movs	r1, #1
 8008636:	f7ff ff05 	bl	8008444 <_Balloc>
 800863a:	4602      	mov	r2, r0
 800863c:	b928      	cbnz	r0, 800864a <__i2b+0x1a>
 800863e:	4b05      	ldr	r3, [pc, #20]	; (8008654 <__i2b+0x24>)
 8008640:	4805      	ldr	r0, [pc, #20]	; (8008658 <__i2b+0x28>)
 8008642:	f240 1145 	movw	r1, #325	; 0x145
 8008646:	f000 fc99 	bl	8008f7c <__assert_func>
 800864a:	2301      	movs	r3, #1
 800864c:	6144      	str	r4, [r0, #20]
 800864e:	6103      	str	r3, [r0, #16]
 8008650:	bd10      	pop	{r4, pc}
 8008652:	bf00      	nop
 8008654:	080097b0 	.word	0x080097b0
 8008658:	080097c1 	.word	0x080097c1

0800865c <__multiply>:
 800865c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008660:	4691      	mov	r9, r2
 8008662:	690a      	ldr	r2, [r1, #16]
 8008664:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8008668:	429a      	cmp	r2, r3
 800866a:	bfb8      	it	lt
 800866c:	460b      	movlt	r3, r1
 800866e:	460c      	mov	r4, r1
 8008670:	bfbc      	itt	lt
 8008672:	464c      	movlt	r4, r9
 8008674:	4699      	movlt	r9, r3
 8008676:	6927      	ldr	r7, [r4, #16]
 8008678:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800867c:	68a3      	ldr	r3, [r4, #8]
 800867e:	6861      	ldr	r1, [r4, #4]
 8008680:	eb07 060a 	add.w	r6, r7, sl
 8008684:	42b3      	cmp	r3, r6
 8008686:	b085      	sub	sp, #20
 8008688:	bfb8      	it	lt
 800868a:	3101      	addlt	r1, #1
 800868c:	f7ff feda 	bl	8008444 <_Balloc>
 8008690:	b930      	cbnz	r0, 80086a0 <__multiply+0x44>
 8008692:	4602      	mov	r2, r0
 8008694:	4b44      	ldr	r3, [pc, #272]	; (80087a8 <__multiply+0x14c>)
 8008696:	4845      	ldr	r0, [pc, #276]	; (80087ac <__multiply+0x150>)
 8008698:	f44f 71b1 	mov.w	r1, #354	; 0x162
 800869c:	f000 fc6e 	bl	8008f7c <__assert_func>
 80086a0:	f100 0514 	add.w	r5, r0, #20
 80086a4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80086a8:	462b      	mov	r3, r5
 80086aa:	2200      	movs	r2, #0
 80086ac:	4543      	cmp	r3, r8
 80086ae:	d321      	bcc.n	80086f4 <__multiply+0x98>
 80086b0:	f104 0314 	add.w	r3, r4, #20
 80086b4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80086b8:	f109 0314 	add.w	r3, r9, #20
 80086bc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80086c0:	9202      	str	r2, [sp, #8]
 80086c2:	1b3a      	subs	r2, r7, r4
 80086c4:	3a15      	subs	r2, #21
 80086c6:	f022 0203 	bic.w	r2, r2, #3
 80086ca:	3204      	adds	r2, #4
 80086cc:	f104 0115 	add.w	r1, r4, #21
 80086d0:	428f      	cmp	r7, r1
 80086d2:	bf38      	it	cc
 80086d4:	2204      	movcc	r2, #4
 80086d6:	9201      	str	r2, [sp, #4]
 80086d8:	9a02      	ldr	r2, [sp, #8]
 80086da:	9303      	str	r3, [sp, #12]
 80086dc:	429a      	cmp	r2, r3
 80086de:	d80c      	bhi.n	80086fa <__multiply+0x9e>
 80086e0:	2e00      	cmp	r6, #0
 80086e2:	dd03      	ble.n	80086ec <__multiply+0x90>
 80086e4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80086e8:	2b00      	cmp	r3, #0
 80086ea:	d05b      	beq.n	80087a4 <__multiply+0x148>
 80086ec:	6106      	str	r6, [r0, #16]
 80086ee:	b005      	add	sp, #20
 80086f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80086f4:	f843 2b04 	str.w	r2, [r3], #4
 80086f8:	e7d8      	b.n	80086ac <__multiply+0x50>
 80086fa:	f8b3 a000 	ldrh.w	sl, [r3]
 80086fe:	f1ba 0f00 	cmp.w	sl, #0
 8008702:	d024      	beq.n	800874e <__multiply+0xf2>
 8008704:	f104 0e14 	add.w	lr, r4, #20
 8008708:	46a9      	mov	r9, r5
 800870a:	f04f 0c00 	mov.w	ip, #0
 800870e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8008712:	f8d9 1000 	ldr.w	r1, [r9]
 8008716:	fa1f fb82 	uxth.w	fp, r2
 800871a:	b289      	uxth	r1, r1
 800871c:	fb0a 110b 	mla	r1, sl, fp, r1
 8008720:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8008724:	f8d9 2000 	ldr.w	r2, [r9]
 8008728:	4461      	add	r1, ip
 800872a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800872e:	fb0a c20b 	mla	r2, sl, fp, ip
 8008732:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8008736:	b289      	uxth	r1, r1
 8008738:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800873c:	4577      	cmp	r7, lr
 800873e:	f849 1b04 	str.w	r1, [r9], #4
 8008742:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8008746:	d8e2      	bhi.n	800870e <__multiply+0xb2>
 8008748:	9a01      	ldr	r2, [sp, #4]
 800874a:	f845 c002 	str.w	ip, [r5, r2]
 800874e:	9a03      	ldr	r2, [sp, #12]
 8008750:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8008754:	3304      	adds	r3, #4
 8008756:	f1b9 0f00 	cmp.w	r9, #0
 800875a:	d021      	beq.n	80087a0 <__multiply+0x144>
 800875c:	6829      	ldr	r1, [r5, #0]
 800875e:	f104 0c14 	add.w	ip, r4, #20
 8008762:	46ae      	mov	lr, r5
 8008764:	f04f 0a00 	mov.w	sl, #0
 8008768:	f8bc b000 	ldrh.w	fp, [ip]
 800876c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8008770:	fb09 220b 	mla	r2, r9, fp, r2
 8008774:	4452      	add	r2, sl
 8008776:	b289      	uxth	r1, r1
 8008778:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800877c:	f84e 1b04 	str.w	r1, [lr], #4
 8008780:	f85c 1b04 	ldr.w	r1, [ip], #4
 8008784:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8008788:	f8be 1000 	ldrh.w	r1, [lr]
 800878c:	fb09 110a 	mla	r1, r9, sl, r1
 8008790:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8008794:	4567      	cmp	r7, ip
 8008796:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800879a:	d8e5      	bhi.n	8008768 <__multiply+0x10c>
 800879c:	9a01      	ldr	r2, [sp, #4]
 800879e:	50a9      	str	r1, [r5, r2]
 80087a0:	3504      	adds	r5, #4
 80087a2:	e799      	b.n	80086d8 <__multiply+0x7c>
 80087a4:	3e01      	subs	r6, #1
 80087a6:	e79b      	b.n	80086e0 <__multiply+0x84>
 80087a8:	080097b0 	.word	0x080097b0
 80087ac:	080097c1 	.word	0x080097c1

080087b0 <__pow5mult>:
 80087b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80087b4:	4615      	mov	r5, r2
 80087b6:	f012 0203 	ands.w	r2, r2, #3
 80087ba:	4606      	mov	r6, r0
 80087bc:	460f      	mov	r7, r1
 80087be:	d007      	beq.n	80087d0 <__pow5mult+0x20>
 80087c0:	4c25      	ldr	r4, [pc, #148]	; (8008858 <__pow5mult+0xa8>)
 80087c2:	3a01      	subs	r2, #1
 80087c4:	2300      	movs	r3, #0
 80087c6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80087ca:	f7ff fe9d 	bl	8008508 <__multadd>
 80087ce:	4607      	mov	r7, r0
 80087d0:	10ad      	asrs	r5, r5, #2
 80087d2:	d03d      	beq.n	8008850 <__pow5mult+0xa0>
 80087d4:	69f4      	ldr	r4, [r6, #28]
 80087d6:	b97c      	cbnz	r4, 80087f8 <__pow5mult+0x48>
 80087d8:	2010      	movs	r0, #16
 80087da:	f7fe f857 	bl	800688c <malloc>
 80087de:	4602      	mov	r2, r0
 80087e0:	61f0      	str	r0, [r6, #28]
 80087e2:	b928      	cbnz	r0, 80087f0 <__pow5mult+0x40>
 80087e4:	4b1d      	ldr	r3, [pc, #116]	; (800885c <__pow5mult+0xac>)
 80087e6:	481e      	ldr	r0, [pc, #120]	; (8008860 <__pow5mult+0xb0>)
 80087e8:	f240 11b3 	movw	r1, #435	; 0x1b3
 80087ec:	f000 fbc6 	bl	8008f7c <__assert_func>
 80087f0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80087f4:	6004      	str	r4, [r0, #0]
 80087f6:	60c4      	str	r4, [r0, #12]
 80087f8:	f8d6 801c 	ldr.w	r8, [r6, #28]
 80087fc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8008800:	b94c      	cbnz	r4, 8008816 <__pow5mult+0x66>
 8008802:	f240 2171 	movw	r1, #625	; 0x271
 8008806:	4630      	mov	r0, r6
 8008808:	f7ff ff12 	bl	8008630 <__i2b>
 800880c:	2300      	movs	r3, #0
 800880e:	f8c8 0008 	str.w	r0, [r8, #8]
 8008812:	4604      	mov	r4, r0
 8008814:	6003      	str	r3, [r0, #0]
 8008816:	f04f 0900 	mov.w	r9, #0
 800881a:	07eb      	lsls	r3, r5, #31
 800881c:	d50a      	bpl.n	8008834 <__pow5mult+0x84>
 800881e:	4639      	mov	r1, r7
 8008820:	4622      	mov	r2, r4
 8008822:	4630      	mov	r0, r6
 8008824:	f7ff ff1a 	bl	800865c <__multiply>
 8008828:	4639      	mov	r1, r7
 800882a:	4680      	mov	r8, r0
 800882c:	4630      	mov	r0, r6
 800882e:	f7ff fe49 	bl	80084c4 <_Bfree>
 8008832:	4647      	mov	r7, r8
 8008834:	106d      	asrs	r5, r5, #1
 8008836:	d00b      	beq.n	8008850 <__pow5mult+0xa0>
 8008838:	6820      	ldr	r0, [r4, #0]
 800883a:	b938      	cbnz	r0, 800884c <__pow5mult+0x9c>
 800883c:	4622      	mov	r2, r4
 800883e:	4621      	mov	r1, r4
 8008840:	4630      	mov	r0, r6
 8008842:	f7ff ff0b 	bl	800865c <__multiply>
 8008846:	6020      	str	r0, [r4, #0]
 8008848:	f8c0 9000 	str.w	r9, [r0]
 800884c:	4604      	mov	r4, r0
 800884e:	e7e4      	b.n	800881a <__pow5mult+0x6a>
 8008850:	4638      	mov	r0, r7
 8008852:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008856:	bf00      	nop
 8008858:	08009910 	.word	0x08009910
 800885c:	08009741 	.word	0x08009741
 8008860:	080097c1 	.word	0x080097c1

08008864 <__lshift>:
 8008864:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008868:	460c      	mov	r4, r1
 800886a:	6849      	ldr	r1, [r1, #4]
 800886c:	6923      	ldr	r3, [r4, #16]
 800886e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8008872:	68a3      	ldr	r3, [r4, #8]
 8008874:	4607      	mov	r7, r0
 8008876:	4691      	mov	r9, r2
 8008878:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800887c:	f108 0601 	add.w	r6, r8, #1
 8008880:	42b3      	cmp	r3, r6
 8008882:	db0b      	blt.n	800889c <__lshift+0x38>
 8008884:	4638      	mov	r0, r7
 8008886:	f7ff fddd 	bl	8008444 <_Balloc>
 800888a:	4605      	mov	r5, r0
 800888c:	b948      	cbnz	r0, 80088a2 <__lshift+0x3e>
 800888e:	4602      	mov	r2, r0
 8008890:	4b28      	ldr	r3, [pc, #160]	; (8008934 <__lshift+0xd0>)
 8008892:	4829      	ldr	r0, [pc, #164]	; (8008938 <__lshift+0xd4>)
 8008894:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8008898:	f000 fb70 	bl	8008f7c <__assert_func>
 800889c:	3101      	adds	r1, #1
 800889e:	005b      	lsls	r3, r3, #1
 80088a0:	e7ee      	b.n	8008880 <__lshift+0x1c>
 80088a2:	2300      	movs	r3, #0
 80088a4:	f100 0114 	add.w	r1, r0, #20
 80088a8:	f100 0210 	add.w	r2, r0, #16
 80088ac:	4618      	mov	r0, r3
 80088ae:	4553      	cmp	r3, sl
 80088b0:	db33      	blt.n	800891a <__lshift+0xb6>
 80088b2:	6920      	ldr	r0, [r4, #16]
 80088b4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80088b8:	f104 0314 	add.w	r3, r4, #20
 80088bc:	f019 091f 	ands.w	r9, r9, #31
 80088c0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80088c4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80088c8:	d02b      	beq.n	8008922 <__lshift+0xbe>
 80088ca:	f1c9 0e20 	rsb	lr, r9, #32
 80088ce:	468a      	mov	sl, r1
 80088d0:	2200      	movs	r2, #0
 80088d2:	6818      	ldr	r0, [r3, #0]
 80088d4:	fa00 f009 	lsl.w	r0, r0, r9
 80088d8:	4310      	orrs	r0, r2
 80088da:	f84a 0b04 	str.w	r0, [sl], #4
 80088de:	f853 2b04 	ldr.w	r2, [r3], #4
 80088e2:	459c      	cmp	ip, r3
 80088e4:	fa22 f20e 	lsr.w	r2, r2, lr
 80088e8:	d8f3      	bhi.n	80088d2 <__lshift+0x6e>
 80088ea:	ebac 0304 	sub.w	r3, ip, r4
 80088ee:	3b15      	subs	r3, #21
 80088f0:	f023 0303 	bic.w	r3, r3, #3
 80088f4:	3304      	adds	r3, #4
 80088f6:	f104 0015 	add.w	r0, r4, #21
 80088fa:	4584      	cmp	ip, r0
 80088fc:	bf38      	it	cc
 80088fe:	2304      	movcc	r3, #4
 8008900:	50ca      	str	r2, [r1, r3]
 8008902:	b10a      	cbz	r2, 8008908 <__lshift+0xa4>
 8008904:	f108 0602 	add.w	r6, r8, #2
 8008908:	3e01      	subs	r6, #1
 800890a:	4638      	mov	r0, r7
 800890c:	612e      	str	r6, [r5, #16]
 800890e:	4621      	mov	r1, r4
 8008910:	f7ff fdd8 	bl	80084c4 <_Bfree>
 8008914:	4628      	mov	r0, r5
 8008916:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800891a:	f842 0f04 	str.w	r0, [r2, #4]!
 800891e:	3301      	adds	r3, #1
 8008920:	e7c5      	b.n	80088ae <__lshift+0x4a>
 8008922:	3904      	subs	r1, #4
 8008924:	f853 2b04 	ldr.w	r2, [r3], #4
 8008928:	f841 2f04 	str.w	r2, [r1, #4]!
 800892c:	459c      	cmp	ip, r3
 800892e:	d8f9      	bhi.n	8008924 <__lshift+0xc0>
 8008930:	e7ea      	b.n	8008908 <__lshift+0xa4>
 8008932:	bf00      	nop
 8008934:	080097b0 	.word	0x080097b0
 8008938:	080097c1 	.word	0x080097c1

0800893c <__mcmp>:
 800893c:	b530      	push	{r4, r5, lr}
 800893e:	6902      	ldr	r2, [r0, #16]
 8008940:	690c      	ldr	r4, [r1, #16]
 8008942:	1b12      	subs	r2, r2, r4
 8008944:	d10e      	bne.n	8008964 <__mcmp+0x28>
 8008946:	f100 0314 	add.w	r3, r0, #20
 800894a:	3114      	adds	r1, #20
 800894c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8008950:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8008954:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8008958:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800895c:	42a5      	cmp	r5, r4
 800895e:	d003      	beq.n	8008968 <__mcmp+0x2c>
 8008960:	d305      	bcc.n	800896e <__mcmp+0x32>
 8008962:	2201      	movs	r2, #1
 8008964:	4610      	mov	r0, r2
 8008966:	bd30      	pop	{r4, r5, pc}
 8008968:	4283      	cmp	r3, r0
 800896a:	d3f3      	bcc.n	8008954 <__mcmp+0x18>
 800896c:	e7fa      	b.n	8008964 <__mcmp+0x28>
 800896e:	f04f 32ff 	mov.w	r2, #4294967295
 8008972:	e7f7      	b.n	8008964 <__mcmp+0x28>

08008974 <__mdiff>:
 8008974:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008978:	460c      	mov	r4, r1
 800897a:	4606      	mov	r6, r0
 800897c:	4611      	mov	r1, r2
 800897e:	4620      	mov	r0, r4
 8008980:	4690      	mov	r8, r2
 8008982:	f7ff ffdb 	bl	800893c <__mcmp>
 8008986:	1e05      	subs	r5, r0, #0
 8008988:	d110      	bne.n	80089ac <__mdiff+0x38>
 800898a:	4629      	mov	r1, r5
 800898c:	4630      	mov	r0, r6
 800898e:	f7ff fd59 	bl	8008444 <_Balloc>
 8008992:	b930      	cbnz	r0, 80089a2 <__mdiff+0x2e>
 8008994:	4b3a      	ldr	r3, [pc, #232]	; (8008a80 <__mdiff+0x10c>)
 8008996:	4602      	mov	r2, r0
 8008998:	f240 2137 	movw	r1, #567	; 0x237
 800899c:	4839      	ldr	r0, [pc, #228]	; (8008a84 <__mdiff+0x110>)
 800899e:	f000 faed 	bl	8008f7c <__assert_func>
 80089a2:	2301      	movs	r3, #1
 80089a4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80089a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80089ac:	bfa4      	itt	ge
 80089ae:	4643      	movge	r3, r8
 80089b0:	46a0      	movge	r8, r4
 80089b2:	4630      	mov	r0, r6
 80089b4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80089b8:	bfa6      	itte	ge
 80089ba:	461c      	movge	r4, r3
 80089bc:	2500      	movge	r5, #0
 80089be:	2501      	movlt	r5, #1
 80089c0:	f7ff fd40 	bl	8008444 <_Balloc>
 80089c4:	b920      	cbnz	r0, 80089d0 <__mdiff+0x5c>
 80089c6:	4b2e      	ldr	r3, [pc, #184]	; (8008a80 <__mdiff+0x10c>)
 80089c8:	4602      	mov	r2, r0
 80089ca:	f240 2145 	movw	r1, #581	; 0x245
 80089ce:	e7e5      	b.n	800899c <__mdiff+0x28>
 80089d0:	f8d8 7010 	ldr.w	r7, [r8, #16]
 80089d4:	6926      	ldr	r6, [r4, #16]
 80089d6:	60c5      	str	r5, [r0, #12]
 80089d8:	f104 0914 	add.w	r9, r4, #20
 80089dc:	f108 0514 	add.w	r5, r8, #20
 80089e0:	f100 0e14 	add.w	lr, r0, #20
 80089e4:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 80089e8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80089ec:	f108 0210 	add.w	r2, r8, #16
 80089f0:	46f2      	mov	sl, lr
 80089f2:	2100      	movs	r1, #0
 80089f4:	f859 3b04 	ldr.w	r3, [r9], #4
 80089f8:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80089fc:	fa11 f88b 	uxtah	r8, r1, fp
 8008a00:	b299      	uxth	r1, r3
 8008a02:	0c1b      	lsrs	r3, r3, #16
 8008a04:	eba8 0801 	sub.w	r8, r8, r1
 8008a08:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8008a0c:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8008a10:	fa1f f888 	uxth.w	r8, r8
 8008a14:	1419      	asrs	r1, r3, #16
 8008a16:	454e      	cmp	r6, r9
 8008a18:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8008a1c:	f84a 3b04 	str.w	r3, [sl], #4
 8008a20:	d8e8      	bhi.n	80089f4 <__mdiff+0x80>
 8008a22:	1b33      	subs	r3, r6, r4
 8008a24:	3b15      	subs	r3, #21
 8008a26:	f023 0303 	bic.w	r3, r3, #3
 8008a2a:	3304      	adds	r3, #4
 8008a2c:	3415      	adds	r4, #21
 8008a2e:	42a6      	cmp	r6, r4
 8008a30:	bf38      	it	cc
 8008a32:	2304      	movcc	r3, #4
 8008a34:	441d      	add	r5, r3
 8008a36:	4473      	add	r3, lr
 8008a38:	469e      	mov	lr, r3
 8008a3a:	462e      	mov	r6, r5
 8008a3c:	4566      	cmp	r6, ip
 8008a3e:	d30e      	bcc.n	8008a5e <__mdiff+0xea>
 8008a40:	f10c 0203 	add.w	r2, ip, #3
 8008a44:	1b52      	subs	r2, r2, r5
 8008a46:	f022 0203 	bic.w	r2, r2, #3
 8008a4a:	3d03      	subs	r5, #3
 8008a4c:	45ac      	cmp	ip, r5
 8008a4e:	bf38      	it	cc
 8008a50:	2200      	movcc	r2, #0
 8008a52:	4413      	add	r3, r2
 8008a54:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8008a58:	b17a      	cbz	r2, 8008a7a <__mdiff+0x106>
 8008a5a:	6107      	str	r7, [r0, #16]
 8008a5c:	e7a4      	b.n	80089a8 <__mdiff+0x34>
 8008a5e:	f856 8b04 	ldr.w	r8, [r6], #4
 8008a62:	fa11 f288 	uxtah	r2, r1, r8
 8008a66:	1414      	asrs	r4, r2, #16
 8008a68:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8008a6c:	b292      	uxth	r2, r2
 8008a6e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8008a72:	f84e 2b04 	str.w	r2, [lr], #4
 8008a76:	1421      	asrs	r1, r4, #16
 8008a78:	e7e0      	b.n	8008a3c <__mdiff+0xc8>
 8008a7a:	3f01      	subs	r7, #1
 8008a7c:	e7ea      	b.n	8008a54 <__mdiff+0xe0>
 8008a7e:	bf00      	nop
 8008a80:	080097b0 	.word	0x080097b0
 8008a84:	080097c1 	.word	0x080097c1

08008a88 <__d2b>:
 8008a88:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008a8c:	460f      	mov	r7, r1
 8008a8e:	2101      	movs	r1, #1
 8008a90:	ec59 8b10 	vmov	r8, r9, d0
 8008a94:	4616      	mov	r6, r2
 8008a96:	f7ff fcd5 	bl	8008444 <_Balloc>
 8008a9a:	4604      	mov	r4, r0
 8008a9c:	b930      	cbnz	r0, 8008aac <__d2b+0x24>
 8008a9e:	4602      	mov	r2, r0
 8008aa0:	4b24      	ldr	r3, [pc, #144]	; (8008b34 <__d2b+0xac>)
 8008aa2:	4825      	ldr	r0, [pc, #148]	; (8008b38 <__d2b+0xb0>)
 8008aa4:	f240 310f 	movw	r1, #783	; 0x30f
 8008aa8:	f000 fa68 	bl	8008f7c <__assert_func>
 8008aac:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8008ab0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008ab4:	bb2d      	cbnz	r5, 8008b02 <__d2b+0x7a>
 8008ab6:	9301      	str	r3, [sp, #4]
 8008ab8:	f1b8 0300 	subs.w	r3, r8, #0
 8008abc:	d026      	beq.n	8008b0c <__d2b+0x84>
 8008abe:	4668      	mov	r0, sp
 8008ac0:	9300      	str	r3, [sp, #0]
 8008ac2:	f7ff fd87 	bl	80085d4 <__lo0bits>
 8008ac6:	e9dd 1200 	ldrd	r1, r2, [sp]
 8008aca:	b1e8      	cbz	r0, 8008b08 <__d2b+0x80>
 8008acc:	f1c0 0320 	rsb	r3, r0, #32
 8008ad0:	fa02 f303 	lsl.w	r3, r2, r3
 8008ad4:	430b      	orrs	r3, r1
 8008ad6:	40c2      	lsrs	r2, r0
 8008ad8:	6163      	str	r3, [r4, #20]
 8008ada:	9201      	str	r2, [sp, #4]
 8008adc:	9b01      	ldr	r3, [sp, #4]
 8008ade:	61a3      	str	r3, [r4, #24]
 8008ae0:	2b00      	cmp	r3, #0
 8008ae2:	bf14      	ite	ne
 8008ae4:	2202      	movne	r2, #2
 8008ae6:	2201      	moveq	r2, #1
 8008ae8:	6122      	str	r2, [r4, #16]
 8008aea:	b1bd      	cbz	r5, 8008b1c <__d2b+0x94>
 8008aec:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8008af0:	4405      	add	r5, r0
 8008af2:	603d      	str	r5, [r7, #0]
 8008af4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8008af8:	6030      	str	r0, [r6, #0]
 8008afa:	4620      	mov	r0, r4
 8008afc:	b003      	add	sp, #12
 8008afe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008b02:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8008b06:	e7d6      	b.n	8008ab6 <__d2b+0x2e>
 8008b08:	6161      	str	r1, [r4, #20]
 8008b0a:	e7e7      	b.n	8008adc <__d2b+0x54>
 8008b0c:	a801      	add	r0, sp, #4
 8008b0e:	f7ff fd61 	bl	80085d4 <__lo0bits>
 8008b12:	9b01      	ldr	r3, [sp, #4]
 8008b14:	6163      	str	r3, [r4, #20]
 8008b16:	3020      	adds	r0, #32
 8008b18:	2201      	movs	r2, #1
 8008b1a:	e7e5      	b.n	8008ae8 <__d2b+0x60>
 8008b1c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8008b20:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8008b24:	6038      	str	r0, [r7, #0]
 8008b26:	6918      	ldr	r0, [r3, #16]
 8008b28:	f7ff fd34 	bl	8008594 <__hi0bits>
 8008b2c:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8008b30:	e7e2      	b.n	8008af8 <__d2b+0x70>
 8008b32:	bf00      	nop
 8008b34:	080097b0 	.word	0x080097b0
 8008b38:	080097c1 	.word	0x080097c1

08008b3c <__ssputs_r>:
 8008b3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008b40:	688e      	ldr	r6, [r1, #8]
 8008b42:	461f      	mov	r7, r3
 8008b44:	42be      	cmp	r6, r7
 8008b46:	680b      	ldr	r3, [r1, #0]
 8008b48:	4682      	mov	sl, r0
 8008b4a:	460c      	mov	r4, r1
 8008b4c:	4690      	mov	r8, r2
 8008b4e:	d82c      	bhi.n	8008baa <__ssputs_r+0x6e>
 8008b50:	898a      	ldrh	r2, [r1, #12]
 8008b52:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8008b56:	d026      	beq.n	8008ba6 <__ssputs_r+0x6a>
 8008b58:	6965      	ldr	r5, [r4, #20]
 8008b5a:	6909      	ldr	r1, [r1, #16]
 8008b5c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8008b60:	eba3 0901 	sub.w	r9, r3, r1
 8008b64:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8008b68:	1c7b      	adds	r3, r7, #1
 8008b6a:	444b      	add	r3, r9
 8008b6c:	106d      	asrs	r5, r5, #1
 8008b6e:	429d      	cmp	r5, r3
 8008b70:	bf38      	it	cc
 8008b72:	461d      	movcc	r5, r3
 8008b74:	0553      	lsls	r3, r2, #21
 8008b76:	d527      	bpl.n	8008bc8 <__ssputs_r+0x8c>
 8008b78:	4629      	mov	r1, r5
 8008b7a:	f7fd feb7 	bl	80068ec <_malloc_r>
 8008b7e:	4606      	mov	r6, r0
 8008b80:	b360      	cbz	r0, 8008bdc <__ssputs_r+0xa0>
 8008b82:	6921      	ldr	r1, [r4, #16]
 8008b84:	464a      	mov	r2, r9
 8008b86:	f7fe fd89 	bl	800769c <memcpy>
 8008b8a:	89a3      	ldrh	r3, [r4, #12]
 8008b8c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8008b90:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008b94:	81a3      	strh	r3, [r4, #12]
 8008b96:	6126      	str	r6, [r4, #16]
 8008b98:	6165      	str	r5, [r4, #20]
 8008b9a:	444e      	add	r6, r9
 8008b9c:	eba5 0509 	sub.w	r5, r5, r9
 8008ba0:	6026      	str	r6, [r4, #0]
 8008ba2:	60a5      	str	r5, [r4, #8]
 8008ba4:	463e      	mov	r6, r7
 8008ba6:	42be      	cmp	r6, r7
 8008ba8:	d900      	bls.n	8008bac <__ssputs_r+0x70>
 8008baa:	463e      	mov	r6, r7
 8008bac:	6820      	ldr	r0, [r4, #0]
 8008bae:	4632      	mov	r2, r6
 8008bb0:	4641      	mov	r1, r8
 8008bb2:	f000 f9c9 	bl	8008f48 <memmove>
 8008bb6:	68a3      	ldr	r3, [r4, #8]
 8008bb8:	1b9b      	subs	r3, r3, r6
 8008bba:	60a3      	str	r3, [r4, #8]
 8008bbc:	6823      	ldr	r3, [r4, #0]
 8008bbe:	4433      	add	r3, r6
 8008bc0:	6023      	str	r3, [r4, #0]
 8008bc2:	2000      	movs	r0, #0
 8008bc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008bc8:	462a      	mov	r2, r5
 8008bca:	f000 fa1d 	bl	8009008 <_realloc_r>
 8008bce:	4606      	mov	r6, r0
 8008bd0:	2800      	cmp	r0, #0
 8008bd2:	d1e0      	bne.n	8008b96 <__ssputs_r+0x5a>
 8008bd4:	6921      	ldr	r1, [r4, #16]
 8008bd6:	4650      	mov	r0, sl
 8008bd8:	f7ff fbe8 	bl	80083ac <_free_r>
 8008bdc:	230c      	movs	r3, #12
 8008bde:	f8ca 3000 	str.w	r3, [sl]
 8008be2:	89a3      	ldrh	r3, [r4, #12]
 8008be4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008be8:	81a3      	strh	r3, [r4, #12]
 8008bea:	f04f 30ff 	mov.w	r0, #4294967295
 8008bee:	e7e9      	b.n	8008bc4 <__ssputs_r+0x88>

08008bf0 <_svfiprintf_r>:
 8008bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bf4:	4698      	mov	r8, r3
 8008bf6:	898b      	ldrh	r3, [r1, #12]
 8008bf8:	061b      	lsls	r3, r3, #24
 8008bfa:	b09d      	sub	sp, #116	; 0x74
 8008bfc:	4607      	mov	r7, r0
 8008bfe:	460d      	mov	r5, r1
 8008c00:	4614      	mov	r4, r2
 8008c02:	d50e      	bpl.n	8008c22 <_svfiprintf_r+0x32>
 8008c04:	690b      	ldr	r3, [r1, #16]
 8008c06:	b963      	cbnz	r3, 8008c22 <_svfiprintf_r+0x32>
 8008c08:	2140      	movs	r1, #64	; 0x40
 8008c0a:	f7fd fe6f 	bl	80068ec <_malloc_r>
 8008c0e:	6028      	str	r0, [r5, #0]
 8008c10:	6128      	str	r0, [r5, #16]
 8008c12:	b920      	cbnz	r0, 8008c1e <_svfiprintf_r+0x2e>
 8008c14:	230c      	movs	r3, #12
 8008c16:	603b      	str	r3, [r7, #0]
 8008c18:	f04f 30ff 	mov.w	r0, #4294967295
 8008c1c:	e0d0      	b.n	8008dc0 <_svfiprintf_r+0x1d0>
 8008c1e:	2340      	movs	r3, #64	; 0x40
 8008c20:	616b      	str	r3, [r5, #20]
 8008c22:	2300      	movs	r3, #0
 8008c24:	9309      	str	r3, [sp, #36]	; 0x24
 8008c26:	2320      	movs	r3, #32
 8008c28:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8008c2c:	f8cd 800c 	str.w	r8, [sp, #12]
 8008c30:	2330      	movs	r3, #48	; 0x30
 8008c32:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8008dd8 <_svfiprintf_r+0x1e8>
 8008c36:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8008c3a:	f04f 0901 	mov.w	r9, #1
 8008c3e:	4623      	mov	r3, r4
 8008c40:	469a      	mov	sl, r3
 8008c42:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008c46:	b10a      	cbz	r2, 8008c4c <_svfiprintf_r+0x5c>
 8008c48:	2a25      	cmp	r2, #37	; 0x25
 8008c4a:	d1f9      	bne.n	8008c40 <_svfiprintf_r+0x50>
 8008c4c:	ebba 0b04 	subs.w	fp, sl, r4
 8008c50:	d00b      	beq.n	8008c6a <_svfiprintf_r+0x7a>
 8008c52:	465b      	mov	r3, fp
 8008c54:	4622      	mov	r2, r4
 8008c56:	4629      	mov	r1, r5
 8008c58:	4638      	mov	r0, r7
 8008c5a:	f7ff ff6f 	bl	8008b3c <__ssputs_r>
 8008c5e:	3001      	adds	r0, #1
 8008c60:	f000 80a9 	beq.w	8008db6 <_svfiprintf_r+0x1c6>
 8008c64:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008c66:	445a      	add	r2, fp
 8008c68:	9209      	str	r2, [sp, #36]	; 0x24
 8008c6a:	f89a 3000 	ldrb.w	r3, [sl]
 8008c6e:	2b00      	cmp	r3, #0
 8008c70:	f000 80a1 	beq.w	8008db6 <_svfiprintf_r+0x1c6>
 8008c74:	2300      	movs	r3, #0
 8008c76:	f04f 32ff 	mov.w	r2, #4294967295
 8008c7a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008c7e:	f10a 0a01 	add.w	sl, sl, #1
 8008c82:	9304      	str	r3, [sp, #16]
 8008c84:	9307      	str	r3, [sp, #28]
 8008c86:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8008c8a:	931a      	str	r3, [sp, #104]	; 0x68
 8008c8c:	4654      	mov	r4, sl
 8008c8e:	2205      	movs	r2, #5
 8008c90:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008c94:	4850      	ldr	r0, [pc, #320]	; (8008dd8 <_svfiprintf_r+0x1e8>)
 8008c96:	f7f7 fa9b 	bl	80001d0 <memchr>
 8008c9a:	9a04      	ldr	r2, [sp, #16]
 8008c9c:	b9d8      	cbnz	r0, 8008cd6 <_svfiprintf_r+0xe6>
 8008c9e:	06d0      	lsls	r0, r2, #27
 8008ca0:	bf44      	itt	mi
 8008ca2:	2320      	movmi	r3, #32
 8008ca4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8008ca8:	0711      	lsls	r1, r2, #28
 8008caa:	bf44      	itt	mi
 8008cac:	232b      	movmi	r3, #43	; 0x2b
 8008cae:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8008cb2:	f89a 3000 	ldrb.w	r3, [sl]
 8008cb6:	2b2a      	cmp	r3, #42	; 0x2a
 8008cb8:	d015      	beq.n	8008ce6 <_svfiprintf_r+0xf6>
 8008cba:	9a07      	ldr	r2, [sp, #28]
 8008cbc:	4654      	mov	r4, sl
 8008cbe:	2000      	movs	r0, #0
 8008cc0:	f04f 0c0a 	mov.w	ip, #10
 8008cc4:	4621      	mov	r1, r4
 8008cc6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008cca:	3b30      	subs	r3, #48	; 0x30
 8008ccc:	2b09      	cmp	r3, #9
 8008cce:	d94d      	bls.n	8008d6c <_svfiprintf_r+0x17c>
 8008cd0:	b1b0      	cbz	r0, 8008d00 <_svfiprintf_r+0x110>
 8008cd2:	9207      	str	r2, [sp, #28]
 8008cd4:	e014      	b.n	8008d00 <_svfiprintf_r+0x110>
 8008cd6:	eba0 0308 	sub.w	r3, r0, r8
 8008cda:	fa09 f303 	lsl.w	r3, r9, r3
 8008cde:	4313      	orrs	r3, r2
 8008ce0:	9304      	str	r3, [sp, #16]
 8008ce2:	46a2      	mov	sl, r4
 8008ce4:	e7d2      	b.n	8008c8c <_svfiprintf_r+0x9c>
 8008ce6:	9b03      	ldr	r3, [sp, #12]
 8008ce8:	1d19      	adds	r1, r3, #4
 8008cea:	681b      	ldr	r3, [r3, #0]
 8008cec:	9103      	str	r1, [sp, #12]
 8008cee:	2b00      	cmp	r3, #0
 8008cf0:	bfbb      	ittet	lt
 8008cf2:	425b      	neglt	r3, r3
 8008cf4:	f042 0202 	orrlt.w	r2, r2, #2
 8008cf8:	9307      	strge	r3, [sp, #28]
 8008cfa:	9307      	strlt	r3, [sp, #28]
 8008cfc:	bfb8      	it	lt
 8008cfe:	9204      	strlt	r2, [sp, #16]
 8008d00:	7823      	ldrb	r3, [r4, #0]
 8008d02:	2b2e      	cmp	r3, #46	; 0x2e
 8008d04:	d10c      	bne.n	8008d20 <_svfiprintf_r+0x130>
 8008d06:	7863      	ldrb	r3, [r4, #1]
 8008d08:	2b2a      	cmp	r3, #42	; 0x2a
 8008d0a:	d134      	bne.n	8008d76 <_svfiprintf_r+0x186>
 8008d0c:	9b03      	ldr	r3, [sp, #12]
 8008d0e:	1d1a      	adds	r2, r3, #4
 8008d10:	681b      	ldr	r3, [r3, #0]
 8008d12:	9203      	str	r2, [sp, #12]
 8008d14:	2b00      	cmp	r3, #0
 8008d16:	bfb8      	it	lt
 8008d18:	f04f 33ff 	movlt.w	r3, #4294967295
 8008d1c:	3402      	adds	r4, #2
 8008d1e:	9305      	str	r3, [sp, #20]
 8008d20:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8008de8 <_svfiprintf_r+0x1f8>
 8008d24:	7821      	ldrb	r1, [r4, #0]
 8008d26:	2203      	movs	r2, #3
 8008d28:	4650      	mov	r0, sl
 8008d2a:	f7f7 fa51 	bl	80001d0 <memchr>
 8008d2e:	b138      	cbz	r0, 8008d40 <_svfiprintf_r+0x150>
 8008d30:	9b04      	ldr	r3, [sp, #16]
 8008d32:	eba0 000a 	sub.w	r0, r0, sl
 8008d36:	2240      	movs	r2, #64	; 0x40
 8008d38:	4082      	lsls	r2, r0
 8008d3a:	4313      	orrs	r3, r2
 8008d3c:	3401      	adds	r4, #1
 8008d3e:	9304      	str	r3, [sp, #16]
 8008d40:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008d44:	4825      	ldr	r0, [pc, #148]	; (8008ddc <_svfiprintf_r+0x1ec>)
 8008d46:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8008d4a:	2206      	movs	r2, #6
 8008d4c:	f7f7 fa40 	bl	80001d0 <memchr>
 8008d50:	2800      	cmp	r0, #0
 8008d52:	d038      	beq.n	8008dc6 <_svfiprintf_r+0x1d6>
 8008d54:	4b22      	ldr	r3, [pc, #136]	; (8008de0 <_svfiprintf_r+0x1f0>)
 8008d56:	bb1b      	cbnz	r3, 8008da0 <_svfiprintf_r+0x1b0>
 8008d58:	9b03      	ldr	r3, [sp, #12]
 8008d5a:	3307      	adds	r3, #7
 8008d5c:	f023 0307 	bic.w	r3, r3, #7
 8008d60:	3308      	adds	r3, #8
 8008d62:	9303      	str	r3, [sp, #12]
 8008d64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008d66:	4433      	add	r3, r6
 8008d68:	9309      	str	r3, [sp, #36]	; 0x24
 8008d6a:	e768      	b.n	8008c3e <_svfiprintf_r+0x4e>
 8008d6c:	fb0c 3202 	mla	r2, ip, r2, r3
 8008d70:	460c      	mov	r4, r1
 8008d72:	2001      	movs	r0, #1
 8008d74:	e7a6      	b.n	8008cc4 <_svfiprintf_r+0xd4>
 8008d76:	2300      	movs	r3, #0
 8008d78:	3401      	adds	r4, #1
 8008d7a:	9305      	str	r3, [sp, #20]
 8008d7c:	4619      	mov	r1, r3
 8008d7e:	f04f 0c0a 	mov.w	ip, #10
 8008d82:	4620      	mov	r0, r4
 8008d84:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008d88:	3a30      	subs	r2, #48	; 0x30
 8008d8a:	2a09      	cmp	r2, #9
 8008d8c:	d903      	bls.n	8008d96 <_svfiprintf_r+0x1a6>
 8008d8e:	2b00      	cmp	r3, #0
 8008d90:	d0c6      	beq.n	8008d20 <_svfiprintf_r+0x130>
 8008d92:	9105      	str	r1, [sp, #20]
 8008d94:	e7c4      	b.n	8008d20 <_svfiprintf_r+0x130>
 8008d96:	fb0c 2101 	mla	r1, ip, r1, r2
 8008d9a:	4604      	mov	r4, r0
 8008d9c:	2301      	movs	r3, #1
 8008d9e:	e7f0      	b.n	8008d82 <_svfiprintf_r+0x192>
 8008da0:	ab03      	add	r3, sp, #12
 8008da2:	9300      	str	r3, [sp, #0]
 8008da4:	462a      	mov	r2, r5
 8008da6:	4b0f      	ldr	r3, [pc, #60]	; (8008de4 <_svfiprintf_r+0x1f4>)
 8008da8:	a904      	add	r1, sp, #16
 8008daa:	4638      	mov	r0, r7
 8008dac:	f7fd feca 	bl	8006b44 <_printf_float>
 8008db0:	1c42      	adds	r2, r0, #1
 8008db2:	4606      	mov	r6, r0
 8008db4:	d1d6      	bne.n	8008d64 <_svfiprintf_r+0x174>
 8008db6:	89ab      	ldrh	r3, [r5, #12]
 8008db8:	065b      	lsls	r3, r3, #25
 8008dba:	f53f af2d 	bmi.w	8008c18 <_svfiprintf_r+0x28>
 8008dbe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008dc0:	b01d      	add	sp, #116	; 0x74
 8008dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008dc6:	ab03      	add	r3, sp, #12
 8008dc8:	9300      	str	r3, [sp, #0]
 8008dca:	462a      	mov	r2, r5
 8008dcc:	4b05      	ldr	r3, [pc, #20]	; (8008de4 <_svfiprintf_r+0x1f4>)
 8008dce:	a904      	add	r1, sp, #16
 8008dd0:	4638      	mov	r0, r7
 8008dd2:	f7fe f95b 	bl	800708c <_printf_i>
 8008dd6:	e7eb      	b.n	8008db0 <_svfiprintf_r+0x1c0>
 8008dd8:	0800991c 	.word	0x0800991c
 8008ddc:	08009926 	.word	0x08009926
 8008de0:	08006b45 	.word	0x08006b45
 8008de4:	08008b3d 	.word	0x08008b3d
 8008de8:	08009922 	.word	0x08009922

08008dec <__sflush_r>:
 8008dec:	898a      	ldrh	r2, [r1, #12]
 8008dee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008df2:	4605      	mov	r5, r0
 8008df4:	0710      	lsls	r0, r2, #28
 8008df6:	460c      	mov	r4, r1
 8008df8:	d458      	bmi.n	8008eac <__sflush_r+0xc0>
 8008dfa:	684b      	ldr	r3, [r1, #4]
 8008dfc:	2b00      	cmp	r3, #0
 8008dfe:	dc05      	bgt.n	8008e0c <__sflush_r+0x20>
 8008e00:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8008e02:	2b00      	cmp	r3, #0
 8008e04:	dc02      	bgt.n	8008e0c <__sflush_r+0x20>
 8008e06:	2000      	movs	r0, #0
 8008e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008e0c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8008e0e:	2e00      	cmp	r6, #0
 8008e10:	d0f9      	beq.n	8008e06 <__sflush_r+0x1a>
 8008e12:	2300      	movs	r3, #0
 8008e14:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8008e18:	682f      	ldr	r7, [r5, #0]
 8008e1a:	6a21      	ldr	r1, [r4, #32]
 8008e1c:	602b      	str	r3, [r5, #0]
 8008e1e:	d032      	beq.n	8008e86 <__sflush_r+0x9a>
 8008e20:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008e22:	89a3      	ldrh	r3, [r4, #12]
 8008e24:	075a      	lsls	r2, r3, #29
 8008e26:	d505      	bpl.n	8008e34 <__sflush_r+0x48>
 8008e28:	6863      	ldr	r3, [r4, #4]
 8008e2a:	1ac0      	subs	r0, r0, r3
 8008e2c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008e2e:	b10b      	cbz	r3, 8008e34 <__sflush_r+0x48>
 8008e30:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008e32:	1ac0      	subs	r0, r0, r3
 8008e34:	2300      	movs	r3, #0
 8008e36:	4602      	mov	r2, r0
 8008e38:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8008e3a:	6a21      	ldr	r1, [r4, #32]
 8008e3c:	4628      	mov	r0, r5
 8008e3e:	47b0      	blx	r6
 8008e40:	1c43      	adds	r3, r0, #1
 8008e42:	89a3      	ldrh	r3, [r4, #12]
 8008e44:	d106      	bne.n	8008e54 <__sflush_r+0x68>
 8008e46:	6829      	ldr	r1, [r5, #0]
 8008e48:	291d      	cmp	r1, #29
 8008e4a:	d82b      	bhi.n	8008ea4 <__sflush_r+0xb8>
 8008e4c:	4a29      	ldr	r2, [pc, #164]	; (8008ef4 <__sflush_r+0x108>)
 8008e4e:	410a      	asrs	r2, r1
 8008e50:	07d6      	lsls	r6, r2, #31
 8008e52:	d427      	bmi.n	8008ea4 <__sflush_r+0xb8>
 8008e54:	2200      	movs	r2, #0
 8008e56:	6062      	str	r2, [r4, #4]
 8008e58:	04d9      	lsls	r1, r3, #19
 8008e5a:	6922      	ldr	r2, [r4, #16]
 8008e5c:	6022      	str	r2, [r4, #0]
 8008e5e:	d504      	bpl.n	8008e6a <__sflush_r+0x7e>
 8008e60:	1c42      	adds	r2, r0, #1
 8008e62:	d101      	bne.n	8008e68 <__sflush_r+0x7c>
 8008e64:	682b      	ldr	r3, [r5, #0]
 8008e66:	b903      	cbnz	r3, 8008e6a <__sflush_r+0x7e>
 8008e68:	6560      	str	r0, [r4, #84]	; 0x54
 8008e6a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008e6c:	602f      	str	r7, [r5, #0]
 8008e6e:	2900      	cmp	r1, #0
 8008e70:	d0c9      	beq.n	8008e06 <__sflush_r+0x1a>
 8008e72:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8008e76:	4299      	cmp	r1, r3
 8008e78:	d002      	beq.n	8008e80 <__sflush_r+0x94>
 8008e7a:	4628      	mov	r0, r5
 8008e7c:	f7ff fa96 	bl	80083ac <_free_r>
 8008e80:	2000      	movs	r0, #0
 8008e82:	6360      	str	r0, [r4, #52]	; 0x34
 8008e84:	e7c0      	b.n	8008e08 <__sflush_r+0x1c>
 8008e86:	2301      	movs	r3, #1
 8008e88:	4628      	mov	r0, r5
 8008e8a:	47b0      	blx	r6
 8008e8c:	1c41      	adds	r1, r0, #1
 8008e8e:	d1c8      	bne.n	8008e22 <__sflush_r+0x36>
 8008e90:	682b      	ldr	r3, [r5, #0]
 8008e92:	2b00      	cmp	r3, #0
 8008e94:	d0c5      	beq.n	8008e22 <__sflush_r+0x36>
 8008e96:	2b1d      	cmp	r3, #29
 8008e98:	d001      	beq.n	8008e9e <__sflush_r+0xb2>
 8008e9a:	2b16      	cmp	r3, #22
 8008e9c:	d101      	bne.n	8008ea2 <__sflush_r+0xb6>
 8008e9e:	602f      	str	r7, [r5, #0]
 8008ea0:	e7b1      	b.n	8008e06 <__sflush_r+0x1a>
 8008ea2:	89a3      	ldrh	r3, [r4, #12]
 8008ea4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008ea8:	81a3      	strh	r3, [r4, #12]
 8008eaa:	e7ad      	b.n	8008e08 <__sflush_r+0x1c>
 8008eac:	690f      	ldr	r7, [r1, #16]
 8008eae:	2f00      	cmp	r7, #0
 8008eb0:	d0a9      	beq.n	8008e06 <__sflush_r+0x1a>
 8008eb2:	0793      	lsls	r3, r2, #30
 8008eb4:	680e      	ldr	r6, [r1, #0]
 8008eb6:	bf08      	it	eq
 8008eb8:	694b      	ldreq	r3, [r1, #20]
 8008eba:	600f      	str	r7, [r1, #0]
 8008ebc:	bf18      	it	ne
 8008ebe:	2300      	movne	r3, #0
 8008ec0:	eba6 0807 	sub.w	r8, r6, r7
 8008ec4:	608b      	str	r3, [r1, #8]
 8008ec6:	f1b8 0f00 	cmp.w	r8, #0
 8008eca:	dd9c      	ble.n	8008e06 <__sflush_r+0x1a>
 8008ecc:	6a21      	ldr	r1, [r4, #32]
 8008ece:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8008ed0:	4643      	mov	r3, r8
 8008ed2:	463a      	mov	r2, r7
 8008ed4:	4628      	mov	r0, r5
 8008ed6:	47b0      	blx	r6
 8008ed8:	2800      	cmp	r0, #0
 8008eda:	dc06      	bgt.n	8008eea <__sflush_r+0xfe>
 8008edc:	89a3      	ldrh	r3, [r4, #12]
 8008ede:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008ee2:	81a3      	strh	r3, [r4, #12]
 8008ee4:	f04f 30ff 	mov.w	r0, #4294967295
 8008ee8:	e78e      	b.n	8008e08 <__sflush_r+0x1c>
 8008eea:	4407      	add	r7, r0
 8008eec:	eba8 0800 	sub.w	r8, r8, r0
 8008ef0:	e7e9      	b.n	8008ec6 <__sflush_r+0xda>
 8008ef2:	bf00      	nop
 8008ef4:	dfbffffe 	.word	0xdfbffffe

08008ef8 <_fflush_r>:
 8008ef8:	b538      	push	{r3, r4, r5, lr}
 8008efa:	690b      	ldr	r3, [r1, #16]
 8008efc:	4605      	mov	r5, r0
 8008efe:	460c      	mov	r4, r1
 8008f00:	b913      	cbnz	r3, 8008f08 <_fflush_r+0x10>
 8008f02:	2500      	movs	r5, #0
 8008f04:	4628      	mov	r0, r5
 8008f06:	bd38      	pop	{r3, r4, r5, pc}
 8008f08:	b118      	cbz	r0, 8008f12 <_fflush_r+0x1a>
 8008f0a:	6a03      	ldr	r3, [r0, #32]
 8008f0c:	b90b      	cbnz	r3, 8008f12 <_fflush_r+0x1a>
 8008f0e:	f7fe fa59 	bl	80073c4 <__sinit>
 8008f12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008f16:	2b00      	cmp	r3, #0
 8008f18:	d0f3      	beq.n	8008f02 <_fflush_r+0xa>
 8008f1a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8008f1c:	07d0      	lsls	r0, r2, #31
 8008f1e:	d404      	bmi.n	8008f2a <_fflush_r+0x32>
 8008f20:	0599      	lsls	r1, r3, #22
 8008f22:	d402      	bmi.n	8008f2a <_fflush_r+0x32>
 8008f24:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008f26:	f7fe fbb7 	bl	8007698 <__retarget_lock_acquire_recursive>
 8008f2a:	4628      	mov	r0, r5
 8008f2c:	4621      	mov	r1, r4
 8008f2e:	f7ff ff5d 	bl	8008dec <__sflush_r>
 8008f32:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008f34:	07da      	lsls	r2, r3, #31
 8008f36:	4605      	mov	r5, r0
 8008f38:	d4e4      	bmi.n	8008f04 <_fflush_r+0xc>
 8008f3a:	89a3      	ldrh	r3, [r4, #12]
 8008f3c:	059b      	lsls	r3, r3, #22
 8008f3e:	d4e1      	bmi.n	8008f04 <_fflush_r+0xc>
 8008f40:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008f42:	f7fe fbaa 	bl	800769a <__retarget_lock_release_recursive>
 8008f46:	e7dd      	b.n	8008f04 <_fflush_r+0xc>

08008f48 <memmove>:
 8008f48:	4288      	cmp	r0, r1
 8008f4a:	b510      	push	{r4, lr}
 8008f4c:	eb01 0402 	add.w	r4, r1, r2
 8008f50:	d902      	bls.n	8008f58 <memmove+0x10>
 8008f52:	4284      	cmp	r4, r0
 8008f54:	4623      	mov	r3, r4
 8008f56:	d807      	bhi.n	8008f68 <memmove+0x20>
 8008f58:	1e43      	subs	r3, r0, #1
 8008f5a:	42a1      	cmp	r1, r4
 8008f5c:	d008      	beq.n	8008f70 <memmove+0x28>
 8008f5e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8008f62:	f803 2f01 	strb.w	r2, [r3, #1]!
 8008f66:	e7f8      	b.n	8008f5a <memmove+0x12>
 8008f68:	4402      	add	r2, r0
 8008f6a:	4601      	mov	r1, r0
 8008f6c:	428a      	cmp	r2, r1
 8008f6e:	d100      	bne.n	8008f72 <memmove+0x2a>
 8008f70:	bd10      	pop	{r4, pc}
 8008f72:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8008f76:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8008f7a:	e7f7      	b.n	8008f6c <memmove+0x24>

08008f7c <__assert_func>:
 8008f7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008f7e:	4614      	mov	r4, r2
 8008f80:	461a      	mov	r2, r3
 8008f82:	4b09      	ldr	r3, [pc, #36]	; (8008fa8 <__assert_func+0x2c>)
 8008f84:	681b      	ldr	r3, [r3, #0]
 8008f86:	4605      	mov	r5, r0
 8008f88:	68d8      	ldr	r0, [r3, #12]
 8008f8a:	b14c      	cbz	r4, 8008fa0 <__assert_func+0x24>
 8008f8c:	4b07      	ldr	r3, [pc, #28]	; (8008fac <__assert_func+0x30>)
 8008f8e:	9100      	str	r1, [sp, #0]
 8008f90:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8008f94:	4906      	ldr	r1, [pc, #24]	; (8008fb0 <__assert_func+0x34>)
 8008f96:	462b      	mov	r3, r5
 8008f98:	f000 f872 	bl	8009080 <fiprintf>
 8008f9c:	f7fd fc6f 	bl	800687e <abort>
 8008fa0:	4b04      	ldr	r3, [pc, #16]	; (8008fb4 <__assert_func+0x38>)
 8008fa2:	461c      	mov	r4, r3
 8008fa4:	e7f3      	b.n	8008f8e <__assert_func+0x12>
 8008fa6:	bf00      	nop
 8008fa8:	20000064 	.word	0x20000064
 8008fac:	08009937 	.word	0x08009937
 8008fb0:	08009944 	.word	0x08009944
 8008fb4:	08009972 	.word	0x08009972

08008fb8 <_calloc_r>:
 8008fb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008fba:	fba1 2402 	umull	r2, r4, r1, r2
 8008fbe:	b94c      	cbnz	r4, 8008fd4 <_calloc_r+0x1c>
 8008fc0:	4611      	mov	r1, r2
 8008fc2:	9201      	str	r2, [sp, #4]
 8008fc4:	f7fd fc92 	bl	80068ec <_malloc_r>
 8008fc8:	9a01      	ldr	r2, [sp, #4]
 8008fca:	4605      	mov	r5, r0
 8008fcc:	b930      	cbnz	r0, 8008fdc <_calloc_r+0x24>
 8008fce:	4628      	mov	r0, r5
 8008fd0:	b003      	add	sp, #12
 8008fd2:	bd30      	pop	{r4, r5, pc}
 8008fd4:	220c      	movs	r2, #12
 8008fd6:	6002      	str	r2, [r0, #0]
 8008fd8:	2500      	movs	r5, #0
 8008fda:	e7f8      	b.n	8008fce <_calloc_r+0x16>
 8008fdc:	4621      	mov	r1, r4
 8008fde:	f7fe fa8a 	bl	80074f6 <memset>
 8008fe2:	e7f4      	b.n	8008fce <_calloc_r+0x16>

08008fe4 <__ascii_mbtowc>:
 8008fe4:	b082      	sub	sp, #8
 8008fe6:	b901      	cbnz	r1, 8008fea <__ascii_mbtowc+0x6>
 8008fe8:	a901      	add	r1, sp, #4
 8008fea:	b142      	cbz	r2, 8008ffe <__ascii_mbtowc+0x1a>
 8008fec:	b14b      	cbz	r3, 8009002 <__ascii_mbtowc+0x1e>
 8008fee:	7813      	ldrb	r3, [r2, #0]
 8008ff0:	600b      	str	r3, [r1, #0]
 8008ff2:	7812      	ldrb	r2, [r2, #0]
 8008ff4:	1e10      	subs	r0, r2, #0
 8008ff6:	bf18      	it	ne
 8008ff8:	2001      	movne	r0, #1
 8008ffa:	b002      	add	sp, #8
 8008ffc:	4770      	bx	lr
 8008ffe:	4610      	mov	r0, r2
 8009000:	e7fb      	b.n	8008ffa <__ascii_mbtowc+0x16>
 8009002:	f06f 0001 	mvn.w	r0, #1
 8009006:	e7f8      	b.n	8008ffa <__ascii_mbtowc+0x16>

08009008 <_realloc_r>:
 8009008:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800900c:	4680      	mov	r8, r0
 800900e:	4614      	mov	r4, r2
 8009010:	460e      	mov	r6, r1
 8009012:	b921      	cbnz	r1, 800901e <_realloc_r+0x16>
 8009014:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009018:	4611      	mov	r1, r2
 800901a:	f7fd bc67 	b.w	80068ec <_malloc_r>
 800901e:	b92a      	cbnz	r2, 800902c <_realloc_r+0x24>
 8009020:	f7ff f9c4 	bl	80083ac <_free_r>
 8009024:	4625      	mov	r5, r4
 8009026:	4628      	mov	r0, r5
 8009028:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800902c:	f000 f83a 	bl	80090a4 <_malloc_usable_size_r>
 8009030:	4284      	cmp	r4, r0
 8009032:	4607      	mov	r7, r0
 8009034:	d802      	bhi.n	800903c <_realloc_r+0x34>
 8009036:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800903a:	d812      	bhi.n	8009062 <_realloc_r+0x5a>
 800903c:	4621      	mov	r1, r4
 800903e:	4640      	mov	r0, r8
 8009040:	f7fd fc54 	bl	80068ec <_malloc_r>
 8009044:	4605      	mov	r5, r0
 8009046:	2800      	cmp	r0, #0
 8009048:	d0ed      	beq.n	8009026 <_realloc_r+0x1e>
 800904a:	42bc      	cmp	r4, r7
 800904c:	4622      	mov	r2, r4
 800904e:	4631      	mov	r1, r6
 8009050:	bf28      	it	cs
 8009052:	463a      	movcs	r2, r7
 8009054:	f7fe fb22 	bl	800769c <memcpy>
 8009058:	4631      	mov	r1, r6
 800905a:	4640      	mov	r0, r8
 800905c:	f7ff f9a6 	bl	80083ac <_free_r>
 8009060:	e7e1      	b.n	8009026 <_realloc_r+0x1e>
 8009062:	4635      	mov	r5, r6
 8009064:	e7df      	b.n	8009026 <_realloc_r+0x1e>

08009066 <__ascii_wctomb>:
 8009066:	b149      	cbz	r1, 800907c <__ascii_wctomb+0x16>
 8009068:	2aff      	cmp	r2, #255	; 0xff
 800906a:	bf85      	ittet	hi
 800906c:	238a      	movhi	r3, #138	; 0x8a
 800906e:	6003      	strhi	r3, [r0, #0]
 8009070:	700a      	strbls	r2, [r1, #0]
 8009072:	f04f 30ff 	movhi.w	r0, #4294967295
 8009076:	bf98      	it	ls
 8009078:	2001      	movls	r0, #1
 800907a:	4770      	bx	lr
 800907c:	4608      	mov	r0, r1
 800907e:	4770      	bx	lr

08009080 <fiprintf>:
 8009080:	b40e      	push	{r1, r2, r3}
 8009082:	b503      	push	{r0, r1, lr}
 8009084:	4601      	mov	r1, r0
 8009086:	ab03      	add	r3, sp, #12
 8009088:	4805      	ldr	r0, [pc, #20]	; (80090a0 <fiprintf+0x20>)
 800908a:	f853 2b04 	ldr.w	r2, [r3], #4
 800908e:	6800      	ldr	r0, [r0, #0]
 8009090:	9301      	str	r3, [sp, #4]
 8009092:	f000 f839 	bl	8009108 <_vfiprintf_r>
 8009096:	b002      	add	sp, #8
 8009098:	f85d eb04 	ldr.w	lr, [sp], #4
 800909c:	b003      	add	sp, #12
 800909e:	4770      	bx	lr
 80090a0:	20000064 	.word	0x20000064

080090a4 <_malloc_usable_size_r>:
 80090a4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80090a8:	1f18      	subs	r0, r3, #4
 80090aa:	2b00      	cmp	r3, #0
 80090ac:	bfbc      	itt	lt
 80090ae:	580b      	ldrlt	r3, [r1, r0]
 80090b0:	18c0      	addlt	r0, r0, r3
 80090b2:	4770      	bx	lr

080090b4 <__sfputc_r>:
 80090b4:	6893      	ldr	r3, [r2, #8]
 80090b6:	3b01      	subs	r3, #1
 80090b8:	2b00      	cmp	r3, #0
 80090ba:	b410      	push	{r4}
 80090bc:	6093      	str	r3, [r2, #8]
 80090be:	da08      	bge.n	80090d2 <__sfputc_r+0x1e>
 80090c0:	6994      	ldr	r4, [r2, #24]
 80090c2:	42a3      	cmp	r3, r4
 80090c4:	db01      	blt.n	80090ca <__sfputc_r+0x16>
 80090c6:	290a      	cmp	r1, #10
 80090c8:	d103      	bne.n	80090d2 <__sfputc_r+0x1e>
 80090ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80090ce:	f000 b935 	b.w	800933c <__swbuf_r>
 80090d2:	6813      	ldr	r3, [r2, #0]
 80090d4:	1c58      	adds	r0, r3, #1
 80090d6:	6010      	str	r0, [r2, #0]
 80090d8:	7019      	strb	r1, [r3, #0]
 80090da:	4608      	mov	r0, r1
 80090dc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80090e0:	4770      	bx	lr

080090e2 <__sfputs_r>:
 80090e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090e4:	4606      	mov	r6, r0
 80090e6:	460f      	mov	r7, r1
 80090e8:	4614      	mov	r4, r2
 80090ea:	18d5      	adds	r5, r2, r3
 80090ec:	42ac      	cmp	r4, r5
 80090ee:	d101      	bne.n	80090f4 <__sfputs_r+0x12>
 80090f0:	2000      	movs	r0, #0
 80090f2:	e007      	b.n	8009104 <__sfputs_r+0x22>
 80090f4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80090f8:	463a      	mov	r2, r7
 80090fa:	4630      	mov	r0, r6
 80090fc:	f7ff ffda 	bl	80090b4 <__sfputc_r>
 8009100:	1c43      	adds	r3, r0, #1
 8009102:	d1f3      	bne.n	80090ec <__sfputs_r+0xa>
 8009104:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08009108 <_vfiprintf_r>:
 8009108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800910c:	460d      	mov	r5, r1
 800910e:	b09d      	sub	sp, #116	; 0x74
 8009110:	4614      	mov	r4, r2
 8009112:	4698      	mov	r8, r3
 8009114:	4606      	mov	r6, r0
 8009116:	b118      	cbz	r0, 8009120 <_vfiprintf_r+0x18>
 8009118:	6a03      	ldr	r3, [r0, #32]
 800911a:	b90b      	cbnz	r3, 8009120 <_vfiprintf_r+0x18>
 800911c:	f7fe f952 	bl	80073c4 <__sinit>
 8009120:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009122:	07d9      	lsls	r1, r3, #31
 8009124:	d405      	bmi.n	8009132 <_vfiprintf_r+0x2a>
 8009126:	89ab      	ldrh	r3, [r5, #12]
 8009128:	059a      	lsls	r2, r3, #22
 800912a:	d402      	bmi.n	8009132 <_vfiprintf_r+0x2a>
 800912c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800912e:	f7fe fab3 	bl	8007698 <__retarget_lock_acquire_recursive>
 8009132:	89ab      	ldrh	r3, [r5, #12]
 8009134:	071b      	lsls	r3, r3, #28
 8009136:	d501      	bpl.n	800913c <_vfiprintf_r+0x34>
 8009138:	692b      	ldr	r3, [r5, #16]
 800913a:	b99b      	cbnz	r3, 8009164 <_vfiprintf_r+0x5c>
 800913c:	4629      	mov	r1, r5
 800913e:	4630      	mov	r0, r6
 8009140:	f000 f93a 	bl	80093b8 <__swsetup_r>
 8009144:	b170      	cbz	r0, 8009164 <_vfiprintf_r+0x5c>
 8009146:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009148:	07dc      	lsls	r4, r3, #31
 800914a:	d504      	bpl.n	8009156 <_vfiprintf_r+0x4e>
 800914c:	f04f 30ff 	mov.w	r0, #4294967295
 8009150:	b01d      	add	sp, #116	; 0x74
 8009152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009156:	89ab      	ldrh	r3, [r5, #12]
 8009158:	0598      	lsls	r0, r3, #22
 800915a:	d4f7      	bmi.n	800914c <_vfiprintf_r+0x44>
 800915c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800915e:	f7fe fa9c 	bl	800769a <__retarget_lock_release_recursive>
 8009162:	e7f3      	b.n	800914c <_vfiprintf_r+0x44>
 8009164:	2300      	movs	r3, #0
 8009166:	9309      	str	r3, [sp, #36]	; 0x24
 8009168:	2320      	movs	r3, #32
 800916a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800916e:	f8cd 800c 	str.w	r8, [sp, #12]
 8009172:	2330      	movs	r3, #48	; 0x30
 8009174:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8009328 <_vfiprintf_r+0x220>
 8009178:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800917c:	f04f 0901 	mov.w	r9, #1
 8009180:	4623      	mov	r3, r4
 8009182:	469a      	mov	sl, r3
 8009184:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009188:	b10a      	cbz	r2, 800918e <_vfiprintf_r+0x86>
 800918a:	2a25      	cmp	r2, #37	; 0x25
 800918c:	d1f9      	bne.n	8009182 <_vfiprintf_r+0x7a>
 800918e:	ebba 0b04 	subs.w	fp, sl, r4
 8009192:	d00b      	beq.n	80091ac <_vfiprintf_r+0xa4>
 8009194:	465b      	mov	r3, fp
 8009196:	4622      	mov	r2, r4
 8009198:	4629      	mov	r1, r5
 800919a:	4630      	mov	r0, r6
 800919c:	f7ff ffa1 	bl	80090e2 <__sfputs_r>
 80091a0:	3001      	adds	r0, #1
 80091a2:	f000 80a9 	beq.w	80092f8 <_vfiprintf_r+0x1f0>
 80091a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80091a8:	445a      	add	r2, fp
 80091aa:	9209      	str	r2, [sp, #36]	; 0x24
 80091ac:	f89a 3000 	ldrb.w	r3, [sl]
 80091b0:	2b00      	cmp	r3, #0
 80091b2:	f000 80a1 	beq.w	80092f8 <_vfiprintf_r+0x1f0>
 80091b6:	2300      	movs	r3, #0
 80091b8:	f04f 32ff 	mov.w	r2, #4294967295
 80091bc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80091c0:	f10a 0a01 	add.w	sl, sl, #1
 80091c4:	9304      	str	r3, [sp, #16]
 80091c6:	9307      	str	r3, [sp, #28]
 80091c8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80091cc:	931a      	str	r3, [sp, #104]	; 0x68
 80091ce:	4654      	mov	r4, sl
 80091d0:	2205      	movs	r2, #5
 80091d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80091d6:	4854      	ldr	r0, [pc, #336]	; (8009328 <_vfiprintf_r+0x220>)
 80091d8:	f7f6 fffa 	bl	80001d0 <memchr>
 80091dc:	9a04      	ldr	r2, [sp, #16]
 80091de:	b9d8      	cbnz	r0, 8009218 <_vfiprintf_r+0x110>
 80091e0:	06d1      	lsls	r1, r2, #27
 80091e2:	bf44      	itt	mi
 80091e4:	2320      	movmi	r3, #32
 80091e6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80091ea:	0713      	lsls	r3, r2, #28
 80091ec:	bf44      	itt	mi
 80091ee:	232b      	movmi	r3, #43	; 0x2b
 80091f0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80091f4:	f89a 3000 	ldrb.w	r3, [sl]
 80091f8:	2b2a      	cmp	r3, #42	; 0x2a
 80091fa:	d015      	beq.n	8009228 <_vfiprintf_r+0x120>
 80091fc:	9a07      	ldr	r2, [sp, #28]
 80091fe:	4654      	mov	r4, sl
 8009200:	2000      	movs	r0, #0
 8009202:	f04f 0c0a 	mov.w	ip, #10
 8009206:	4621      	mov	r1, r4
 8009208:	f811 3b01 	ldrb.w	r3, [r1], #1
 800920c:	3b30      	subs	r3, #48	; 0x30
 800920e:	2b09      	cmp	r3, #9
 8009210:	d94d      	bls.n	80092ae <_vfiprintf_r+0x1a6>
 8009212:	b1b0      	cbz	r0, 8009242 <_vfiprintf_r+0x13a>
 8009214:	9207      	str	r2, [sp, #28]
 8009216:	e014      	b.n	8009242 <_vfiprintf_r+0x13a>
 8009218:	eba0 0308 	sub.w	r3, r0, r8
 800921c:	fa09 f303 	lsl.w	r3, r9, r3
 8009220:	4313      	orrs	r3, r2
 8009222:	9304      	str	r3, [sp, #16]
 8009224:	46a2      	mov	sl, r4
 8009226:	e7d2      	b.n	80091ce <_vfiprintf_r+0xc6>
 8009228:	9b03      	ldr	r3, [sp, #12]
 800922a:	1d19      	adds	r1, r3, #4
 800922c:	681b      	ldr	r3, [r3, #0]
 800922e:	9103      	str	r1, [sp, #12]
 8009230:	2b00      	cmp	r3, #0
 8009232:	bfbb      	ittet	lt
 8009234:	425b      	neglt	r3, r3
 8009236:	f042 0202 	orrlt.w	r2, r2, #2
 800923a:	9307      	strge	r3, [sp, #28]
 800923c:	9307      	strlt	r3, [sp, #28]
 800923e:	bfb8      	it	lt
 8009240:	9204      	strlt	r2, [sp, #16]
 8009242:	7823      	ldrb	r3, [r4, #0]
 8009244:	2b2e      	cmp	r3, #46	; 0x2e
 8009246:	d10c      	bne.n	8009262 <_vfiprintf_r+0x15a>
 8009248:	7863      	ldrb	r3, [r4, #1]
 800924a:	2b2a      	cmp	r3, #42	; 0x2a
 800924c:	d134      	bne.n	80092b8 <_vfiprintf_r+0x1b0>
 800924e:	9b03      	ldr	r3, [sp, #12]
 8009250:	1d1a      	adds	r2, r3, #4
 8009252:	681b      	ldr	r3, [r3, #0]
 8009254:	9203      	str	r2, [sp, #12]
 8009256:	2b00      	cmp	r3, #0
 8009258:	bfb8      	it	lt
 800925a:	f04f 33ff 	movlt.w	r3, #4294967295
 800925e:	3402      	adds	r4, #2
 8009260:	9305      	str	r3, [sp, #20]
 8009262:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8009338 <_vfiprintf_r+0x230>
 8009266:	7821      	ldrb	r1, [r4, #0]
 8009268:	2203      	movs	r2, #3
 800926a:	4650      	mov	r0, sl
 800926c:	f7f6 ffb0 	bl	80001d0 <memchr>
 8009270:	b138      	cbz	r0, 8009282 <_vfiprintf_r+0x17a>
 8009272:	9b04      	ldr	r3, [sp, #16]
 8009274:	eba0 000a 	sub.w	r0, r0, sl
 8009278:	2240      	movs	r2, #64	; 0x40
 800927a:	4082      	lsls	r2, r0
 800927c:	4313      	orrs	r3, r2
 800927e:	3401      	adds	r4, #1
 8009280:	9304      	str	r3, [sp, #16]
 8009282:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009286:	4829      	ldr	r0, [pc, #164]	; (800932c <_vfiprintf_r+0x224>)
 8009288:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800928c:	2206      	movs	r2, #6
 800928e:	f7f6 ff9f 	bl	80001d0 <memchr>
 8009292:	2800      	cmp	r0, #0
 8009294:	d03f      	beq.n	8009316 <_vfiprintf_r+0x20e>
 8009296:	4b26      	ldr	r3, [pc, #152]	; (8009330 <_vfiprintf_r+0x228>)
 8009298:	bb1b      	cbnz	r3, 80092e2 <_vfiprintf_r+0x1da>
 800929a:	9b03      	ldr	r3, [sp, #12]
 800929c:	3307      	adds	r3, #7
 800929e:	f023 0307 	bic.w	r3, r3, #7
 80092a2:	3308      	adds	r3, #8
 80092a4:	9303      	str	r3, [sp, #12]
 80092a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80092a8:	443b      	add	r3, r7
 80092aa:	9309      	str	r3, [sp, #36]	; 0x24
 80092ac:	e768      	b.n	8009180 <_vfiprintf_r+0x78>
 80092ae:	fb0c 3202 	mla	r2, ip, r2, r3
 80092b2:	460c      	mov	r4, r1
 80092b4:	2001      	movs	r0, #1
 80092b6:	e7a6      	b.n	8009206 <_vfiprintf_r+0xfe>
 80092b8:	2300      	movs	r3, #0
 80092ba:	3401      	adds	r4, #1
 80092bc:	9305      	str	r3, [sp, #20]
 80092be:	4619      	mov	r1, r3
 80092c0:	f04f 0c0a 	mov.w	ip, #10
 80092c4:	4620      	mov	r0, r4
 80092c6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80092ca:	3a30      	subs	r2, #48	; 0x30
 80092cc:	2a09      	cmp	r2, #9
 80092ce:	d903      	bls.n	80092d8 <_vfiprintf_r+0x1d0>
 80092d0:	2b00      	cmp	r3, #0
 80092d2:	d0c6      	beq.n	8009262 <_vfiprintf_r+0x15a>
 80092d4:	9105      	str	r1, [sp, #20]
 80092d6:	e7c4      	b.n	8009262 <_vfiprintf_r+0x15a>
 80092d8:	fb0c 2101 	mla	r1, ip, r1, r2
 80092dc:	4604      	mov	r4, r0
 80092de:	2301      	movs	r3, #1
 80092e0:	e7f0      	b.n	80092c4 <_vfiprintf_r+0x1bc>
 80092e2:	ab03      	add	r3, sp, #12
 80092e4:	9300      	str	r3, [sp, #0]
 80092e6:	462a      	mov	r2, r5
 80092e8:	4b12      	ldr	r3, [pc, #72]	; (8009334 <_vfiprintf_r+0x22c>)
 80092ea:	a904      	add	r1, sp, #16
 80092ec:	4630      	mov	r0, r6
 80092ee:	f7fd fc29 	bl	8006b44 <_printf_float>
 80092f2:	4607      	mov	r7, r0
 80092f4:	1c78      	adds	r0, r7, #1
 80092f6:	d1d6      	bne.n	80092a6 <_vfiprintf_r+0x19e>
 80092f8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80092fa:	07d9      	lsls	r1, r3, #31
 80092fc:	d405      	bmi.n	800930a <_vfiprintf_r+0x202>
 80092fe:	89ab      	ldrh	r3, [r5, #12]
 8009300:	059a      	lsls	r2, r3, #22
 8009302:	d402      	bmi.n	800930a <_vfiprintf_r+0x202>
 8009304:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009306:	f7fe f9c8 	bl	800769a <__retarget_lock_release_recursive>
 800930a:	89ab      	ldrh	r3, [r5, #12]
 800930c:	065b      	lsls	r3, r3, #25
 800930e:	f53f af1d 	bmi.w	800914c <_vfiprintf_r+0x44>
 8009312:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009314:	e71c      	b.n	8009150 <_vfiprintf_r+0x48>
 8009316:	ab03      	add	r3, sp, #12
 8009318:	9300      	str	r3, [sp, #0]
 800931a:	462a      	mov	r2, r5
 800931c:	4b05      	ldr	r3, [pc, #20]	; (8009334 <_vfiprintf_r+0x22c>)
 800931e:	a904      	add	r1, sp, #16
 8009320:	4630      	mov	r0, r6
 8009322:	f7fd feb3 	bl	800708c <_printf_i>
 8009326:	e7e4      	b.n	80092f2 <_vfiprintf_r+0x1ea>
 8009328:	0800991c 	.word	0x0800991c
 800932c:	08009926 	.word	0x08009926
 8009330:	08006b45 	.word	0x08006b45
 8009334:	080090e3 	.word	0x080090e3
 8009338:	08009922 	.word	0x08009922

0800933c <__swbuf_r>:
 800933c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800933e:	460e      	mov	r6, r1
 8009340:	4614      	mov	r4, r2
 8009342:	4605      	mov	r5, r0
 8009344:	b118      	cbz	r0, 800934e <__swbuf_r+0x12>
 8009346:	6a03      	ldr	r3, [r0, #32]
 8009348:	b90b      	cbnz	r3, 800934e <__swbuf_r+0x12>
 800934a:	f7fe f83b 	bl	80073c4 <__sinit>
 800934e:	69a3      	ldr	r3, [r4, #24]
 8009350:	60a3      	str	r3, [r4, #8]
 8009352:	89a3      	ldrh	r3, [r4, #12]
 8009354:	071a      	lsls	r2, r3, #28
 8009356:	d525      	bpl.n	80093a4 <__swbuf_r+0x68>
 8009358:	6923      	ldr	r3, [r4, #16]
 800935a:	b31b      	cbz	r3, 80093a4 <__swbuf_r+0x68>
 800935c:	6823      	ldr	r3, [r4, #0]
 800935e:	6922      	ldr	r2, [r4, #16]
 8009360:	1a98      	subs	r0, r3, r2
 8009362:	6963      	ldr	r3, [r4, #20]
 8009364:	b2f6      	uxtb	r6, r6
 8009366:	4283      	cmp	r3, r0
 8009368:	4637      	mov	r7, r6
 800936a:	dc04      	bgt.n	8009376 <__swbuf_r+0x3a>
 800936c:	4621      	mov	r1, r4
 800936e:	4628      	mov	r0, r5
 8009370:	f7ff fdc2 	bl	8008ef8 <_fflush_r>
 8009374:	b9e0      	cbnz	r0, 80093b0 <__swbuf_r+0x74>
 8009376:	68a3      	ldr	r3, [r4, #8]
 8009378:	3b01      	subs	r3, #1
 800937a:	60a3      	str	r3, [r4, #8]
 800937c:	6823      	ldr	r3, [r4, #0]
 800937e:	1c5a      	adds	r2, r3, #1
 8009380:	6022      	str	r2, [r4, #0]
 8009382:	701e      	strb	r6, [r3, #0]
 8009384:	6962      	ldr	r2, [r4, #20]
 8009386:	1c43      	adds	r3, r0, #1
 8009388:	429a      	cmp	r2, r3
 800938a:	d004      	beq.n	8009396 <__swbuf_r+0x5a>
 800938c:	89a3      	ldrh	r3, [r4, #12]
 800938e:	07db      	lsls	r3, r3, #31
 8009390:	d506      	bpl.n	80093a0 <__swbuf_r+0x64>
 8009392:	2e0a      	cmp	r6, #10
 8009394:	d104      	bne.n	80093a0 <__swbuf_r+0x64>
 8009396:	4621      	mov	r1, r4
 8009398:	4628      	mov	r0, r5
 800939a:	f7ff fdad 	bl	8008ef8 <_fflush_r>
 800939e:	b938      	cbnz	r0, 80093b0 <__swbuf_r+0x74>
 80093a0:	4638      	mov	r0, r7
 80093a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80093a4:	4621      	mov	r1, r4
 80093a6:	4628      	mov	r0, r5
 80093a8:	f000 f806 	bl	80093b8 <__swsetup_r>
 80093ac:	2800      	cmp	r0, #0
 80093ae:	d0d5      	beq.n	800935c <__swbuf_r+0x20>
 80093b0:	f04f 37ff 	mov.w	r7, #4294967295
 80093b4:	e7f4      	b.n	80093a0 <__swbuf_r+0x64>
	...

080093b8 <__swsetup_r>:
 80093b8:	b538      	push	{r3, r4, r5, lr}
 80093ba:	4b2a      	ldr	r3, [pc, #168]	; (8009464 <__swsetup_r+0xac>)
 80093bc:	4605      	mov	r5, r0
 80093be:	6818      	ldr	r0, [r3, #0]
 80093c0:	460c      	mov	r4, r1
 80093c2:	b118      	cbz	r0, 80093cc <__swsetup_r+0x14>
 80093c4:	6a03      	ldr	r3, [r0, #32]
 80093c6:	b90b      	cbnz	r3, 80093cc <__swsetup_r+0x14>
 80093c8:	f7fd fffc 	bl	80073c4 <__sinit>
 80093cc:	89a3      	ldrh	r3, [r4, #12]
 80093ce:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80093d2:	0718      	lsls	r0, r3, #28
 80093d4:	d422      	bmi.n	800941c <__swsetup_r+0x64>
 80093d6:	06d9      	lsls	r1, r3, #27
 80093d8:	d407      	bmi.n	80093ea <__swsetup_r+0x32>
 80093da:	2309      	movs	r3, #9
 80093dc:	602b      	str	r3, [r5, #0]
 80093de:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80093e2:	81a3      	strh	r3, [r4, #12]
 80093e4:	f04f 30ff 	mov.w	r0, #4294967295
 80093e8:	e034      	b.n	8009454 <__swsetup_r+0x9c>
 80093ea:	0758      	lsls	r0, r3, #29
 80093ec:	d512      	bpl.n	8009414 <__swsetup_r+0x5c>
 80093ee:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80093f0:	b141      	cbz	r1, 8009404 <__swsetup_r+0x4c>
 80093f2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80093f6:	4299      	cmp	r1, r3
 80093f8:	d002      	beq.n	8009400 <__swsetup_r+0x48>
 80093fa:	4628      	mov	r0, r5
 80093fc:	f7fe ffd6 	bl	80083ac <_free_r>
 8009400:	2300      	movs	r3, #0
 8009402:	6363      	str	r3, [r4, #52]	; 0x34
 8009404:	89a3      	ldrh	r3, [r4, #12]
 8009406:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800940a:	81a3      	strh	r3, [r4, #12]
 800940c:	2300      	movs	r3, #0
 800940e:	6063      	str	r3, [r4, #4]
 8009410:	6923      	ldr	r3, [r4, #16]
 8009412:	6023      	str	r3, [r4, #0]
 8009414:	89a3      	ldrh	r3, [r4, #12]
 8009416:	f043 0308 	orr.w	r3, r3, #8
 800941a:	81a3      	strh	r3, [r4, #12]
 800941c:	6923      	ldr	r3, [r4, #16]
 800941e:	b94b      	cbnz	r3, 8009434 <__swsetup_r+0x7c>
 8009420:	89a3      	ldrh	r3, [r4, #12]
 8009422:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8009426:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800942a:	d003      	beq.n	8009434 <__swsetup_r+0x7c>
 800942c:	4621      	mov	r1, r4
 800942e:	4628      	mov	r0, r5
 8009430:	f000 f840 	bl	80094b4 <__smakebuf_r>
 8009434:	89a0      	ldrh	r0, [r4, #12]
 8009436:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800943a:	f010 0301 	ands.w	r3, r0, #1
 800943e:	d00a      	beq.n	8009456 <__swsetup_r+0x9e>
 8009440:	2300      	movs	r3, #0
 8009442:	60a3      	str	r3, [r4, #8]
 8009444:	6963      	ldr	r3, [r4, #20]
 8009446:	425b      	negs	r3, r3
 8009448:	61a3      	str	r3, [r4, #24]
 800944a:	6923      	ldr	r3, [r4, #16]
 800944c:	b943      	cbnz	r3, 8009460 <__swsetup_r+0xa8>
 800944e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8009452:	d1c4      	bne.n	80093de <__swsetup_r+0x26>
 8009454:	bd38      	pop	{r3, r4, r5, pc}
 8009456:	0781      	lsls	r1, r0, #30
 8009458:	bf58      	it	pl
 800945a:	6963      	ldrpl	r3, [r4, #20]
 800945c:	60a3      	str	r3, [r4, #8]
 800945e:	e7f4      	b.n	800944a <__swsetup_r+0x92>
 8009460:	2000      	movs	r0, #0
 8009462:	e7f7      	b.n	8009454 <__swsetup_r+0x9c>
 8009464:	20000064 	.word	0x20000064

08009468 <__swhatbuf_r>:
 8009468:	b570      	push	{r4, r5, r6, lr}
 800946a:	460c      	mov	r4, r1
 800946c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009470:	2900      	cmp	r1, #0
 8009472:	b096      	sub	sp, #88	; 0x58
 8009474:	4615      	mov	r5, r2
 8009476:	461e      	mov	r6, r3
 8009478:	da0d      	bge.n	8009496 <__swhatbuf_r+0x2e>
 800947a:	89a3      	ldrh	r3, [r4, #12]
 800947c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8009480:	f04f 0100 	mov.w	r1, #0
 8009484:	bf0c      	ite	eq
 8009486:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800948a:	2340      	movne	r3, #64	; 0x40
 800948c:	2000      	movs	r0, #0
 800948e:	6031      	str	r1, [r6, #0]
 8009490:	602b      	str	r3, [r5, #0]
 8009492:	b016      	add	sp, #88	; 0x58
 8009494:	bd70      	pop	{r4, r5, r6, pc}
 8009496:	466a      	mov	r2, sp
 8009498:	f000 f848 	bl	800952c <_fstat_r>
 800949c:	2800      	cmp	r0, #0
 800949e:	dbec      	blt.n	800947a <__swhatbuf_r+0x12>
 80094a0:	9901      	ldr	r1, [sp, #4]
 80094a2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80094a6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80094aa:	4259      	negs	r1, r3
 80094ac:	4159      	adcs	r1, r3
 80094ae:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80094b2:	e7eb      	b.n	800948c <__swhatbuf_r+0x24>

080094b4 <__smakebuf_r>:
 80094b4:	898b      	ldrh	r3, [r1, #12]
 80094b6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80094b8:	079d      	lsls	r5, r3, #30
 80094ba:	4606      	mov	r6, r0
 80094bc:	460c      	mov	r4, r1
 80094be:	d507      	bpl.n	80094d0 <__smakebuf_r+0x1c>
 80094c0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80094c4:	6023      	str	r3, [r4, #0]
 80094c6:	6123      	str	r3, [r4, #16]
 80094c8:	2301      	movs	r3, #1
 80094ca:	6163      	str	r3, [r4, #20]
 80094cc:	b002      	add	sp, #8
 80094ce:	bd70      	pop	{r4, r5, r6, pc}
 80094d0:	ab01      	add	r3, sp, #4
 80094d2:	466a      	mov	r2, sp
 80094d4:	f7ff ffc8 	bl	8009468 <__swhatbuf_r>
 80094d8:	9900      	ldr	r1, [sp, #0]
 80094da:	4605      	mov	r5, r0
 80094dc:	4630      	mov	r0, r6
 80094de:	f7fd fa05 	bl	80068ec <_malloc_r>
 80094e2:	b948      	cbnz	r0, 80094f8 <__smakebuf_r+0x44>
 80094e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80094e8:	059a      	lsls	r2, r3, #22
 80094ea:	d4ef      	bmi.n	80094cc <__smakebuf_r+0x18>
 80094ec:	f023 0303 	bic.w	r3, r3, #3
 80094f0:	f043 0302 	orr.w	r3, r3, #2
 80094f4:	81a3      	strh	r3, [r4, #12]
 80094f6:	e7e3      	b.n	80094c0 <__smakebuf_r+0xc>
 80094f8:	89a3      	ldrh	r3, [r4, #12]
 80094fa:	6020      	str	r0, [r4, #0]
 80094fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009500:	81a3      	strh	r3, [r4, #12]
 8009502:	9b00      	ldr	r3, [sp, #0]
 8009504:	6163      	str	r3, [r4, #20]
 8009506:	9b01      	ldr	r3, [sp, #4]
 8009508:	6120      	str	r0, [r4, #16]
 800950a:	b15b      	cbz	r3, 8009524 <__smakebuf_r+0x70>
 800950c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8009510:	4630      	mov	r0, r6
 8009512:	f000 f81d 	bl	8009550 <_isatty_r>
 8009516:	b128      	cbz	r0, 8009524 <__smakebuf_r+0x70>
 8009518:	89a3      	ldrh	r3, [r4, #12]
 800951a:	f023 0303 	bic.w	r3, r3, #3
 800951e:	f043 0301 	orr.w	r3, r3, #1
 8009522:	81a3      	strh	r3, [r4, #12]
 8009524:	89a3      	ldrh	r3, [r4, #12]
 8009526:	431d      	orrs	r5, r3
 8009528:	81a5      	strh	r5, [r4, #12]
 800952a:	e7cf      	b.n	80094cc <__smakebuf_r+0x18>

0800952c <_fstat_r>:
 800952c:	b538      	push	{r3, r4, r5, lr}
 800952e:	4d07      	ldr	r5, [pc, #28]	; (800954c <_fstat_r+0x20>)
 8009530:	2300      	movs	r3, #0
 8009532:	4604      	mov	r4, r0
 8009534:	4608      	mov	r0, r1
 8009536:	4611      	mov	r1, r2
 8009538:	602b      	str	r3, [r5, #0]
 800953a:	f7f9 fbc2 	bl	8002cc2 <_fstat>
 800953e:	1c43      	adds	r3, r0, #1
 8009540:	d102      	bne.n	8009548 <_fstat_r+0x1c>
 8009542:	682b      	ldr	r3, [r5, #0]
 8009544:	b103      	cbz	r3, 8009548 <_fstat_r+0x1c>
 8009546:	6023      	str	r3, [r4, #0]
 8009548:	bd38      	pop	{r3, r4, r5, pc}
 800954a:	bf00      	nop
 800954c:	2000060c 	.word	0x2000060c

08009550 <_isatty_r>:
 8009550:	b538      	push	{r3, r4, r5, lr}
 8009552:	4d06      	ldr	r5, [pc, #24]	; (800956c <_isatty_r+0x1c>)
 8009554:	2300      	movs	r3, #0
 8009556:	4604      	mov	r4, r0
 8009558:	4608      	mov	r0, r1
 800955a:	602b      	str	r3, [r5, #0]
 800955c:	f7f9 fbc1 	bl	8002ce2 <_isatty>
 8009560:	1c43      	adds	r3, r0, #1
 8009562:	d102      	bne.n	800956a <_isatty_r+0x1a>
 8009564:	682b      	ldr	r3, [r5, #0]
 8009566:	b103      	cbz	r3, 800956a <_isatty_r+0x1a>
 8009568:	6023      	str	r3, [r4, #0]
 800956a:	bd38      	pop	{r3, r4, r5, pc}
 800956c:	2000060c 	.word	0x2000060c

08009570 <_init>:
 8009570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009572:	bf00      	nop
 8009574:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009576:	bc08      	pop	{r3}
 8009578:	469e      	mov	lr, r3
 800957a:	4770      	bx	lr

0800957c <_fini>:
 800957c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800957e:	bf00      	nop
 8009580:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009582:	bc08      	pop	{r3}
 8009584:	469e      	mov	lr, r3
 8009586:	4770      	bx	lr
